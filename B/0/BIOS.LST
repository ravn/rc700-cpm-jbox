INPUT CONVERSION TABLE Z80ASM 1.32 Page   1
BIOS    Z80

    1                   ; RC COMPUTER 23.04.83 25.06.82 15.09.82
    2                   ;             23.10.82 05.01.83
    3                   ;
    4                   ; SUBJECT:                                      RC700 CP/M BASIS SOFTWARE
    5                   ;
    6                   ; AUTHOR:                                       KARSTEN DINDORP & HUGO K.
    7                   ;
    8                   ; HARD DISK CORRECTIONS:                        SC & VN JUNE 82
    9                   ;
   10                   ; RECONSTRUCTED FROM DDHF ARCHIVE MATERIAL:     MICHAEL RINGGAARD 2015
   11                   ;
   12                   ; This program consists of:
   13                   ;
   14                   ; 1. Hardware initiatization routines
   15                   ;
   16                   ; 2. CP/M BIOS
   17                   ;
   18                   ; and constitutes the basis software for the CP/M operating system
   19                   ; on the RC700 micro computer.
   20                   ;
   21                   ; The program resides on cylinder 0 of a RC700 CP/M system discette,
   22                   ; and is loaded into RAM from address 0000 and forward, when the ROM
   23                   ; bootstrap loader is activated by a hardware reset.
   24                   ;
   25                   ; UPGRADES: 1: Support of 16 bit sector number.
   26                   ;           2: Support of upto 4 Winchester drives.
   27                   ;           3: Support all tracks on floppy disks.
   28                   ;           4: Alternative register set not used.
   29                   ;           5: Alternative hard disk configuration.
   30                   ;           6: Warm boot from hard disk drive C
   31                   ;
   32                   ; The format of TRACK 0 is as follows:
   33                   ;
   34                   ; SECTOR    BYTE     CONTENTS
   35                   ;     01 000-001     Start address. Entered from ROM bootstrap loader.
   36                   ;     01 002-007     0
   37                   ;     01 008-013     ' RC702'
   38                   ;     01 014-127     not used. Reserved for ROM bootstrap loader.
   39                   ;     02 000-127     configuration parameters.
   40                   ;     03 000-127     output conversion table.
   41                   ;  04-05 000-127     input conversion table.
   42                   ;  06- and forward   Hardware initialization routines and CPM BIOS.
   43                   ;
   44                   	.Z80
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   2
GLOBAL CONSTANT DEFINITION 

   48                   
   49                   ;========================================================
   50                   ;= I/O ADDRESSES                                        =
   51                   ;========================================================
   52         0012      PIOAC	EQU	12H	; PIO CHANNEL A CONTROL
   53         0010      PIOAD	EQU	10H	; PIO CHANNEL A DATA
   54         0013      PIOBC	EQU	13H	; PIO CHANNEL B CONTROL
   55         0011      PIOBD	EQU	11H	; PIO CHANNEL B DATA
   56                   
   57         000C      CTCCH0	EQU	0CH	; CTC CHANNEL 0
   58         000D      CTCCH1	EQU	0DH	; CTC CHANNEL 1
   59         000E      CTCCH2	EQU	0EH	; CTC CHANNEL 2
   60         000F      CTCCH3	EQU	0FH	; CTC CHANNEL 3
   61                   
   62         000A      SIOAC	EQU	0AH	; SIO CHANNEL A CONTROL
   63         0008      SIOAD	EQU	08H	; SIO CHANNEL A DATA
   64         000B      SIOBC	EQU	0BH	; SIO CHANNEL B CONTROL
   65         0009      SIOBD	EQU	09H	; SIO CHANNEL B DATA
   66                   
   67         0044      CTC2C0	EQU	44H	; CTC 2 CHANNEL 0
   68         0045      CTC2C1	EQU	45H	; CTC 2 CHANNEL 1
   69         0046      CTC2C2	EQU	46H	; CTC 2 CHANNEL 2
   70         0047      CTC2C3	EQU	47H	; CTC 2 CHANNEL 3
   71                   
   72         0060      HDDARG 	EQU	60H	; WD1000 DATA REGISTER
   73         0061      HDERRG	EQU	61H	; WD1000 ERROR REGISTER (READ ONLY)
   74         0061      HWPCMP	EQU	HDERRG	; WD1000 WRITE PRECOMP. REGISTER (WRITE ONLY)
   75         0062      HSECCT	EQU	62H	; WD1000 SECTOR COUNT
   76         0063      HSECNO	EQU	63H	; WD1000 SECTOR NUMBER
   77         0064      HCYLLO	EQU	64H	; WD1000 CYLINDER NO. LOW
   78         0065      HCYLHI	EQU	65H	; WD1000 CYLINDER NO. HIGH
   79         0066      HSZDHD	EQU	66H	; WD1000 SIZE/DRIVE/HEAD REGISTER
   80         0067      HDSTRG	EQU	67H	; WD1000 STATUS REGISTER (READ ONLY)
   81         0067      HCMDRG	EQU	HDSTRG	; WD1000 COMMAND REGISTER (WRITE ONLY)
   82                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   3
GLOBAL CONSTANT DEFINITION 

   84                   
   85         00F8      DMAC	EQU	0F8H	; DMA CONTROL
   86         00FB      DMAMOD	EQU	0FBH	; DMA MODE REGISTER
   87         00FA      DMAMAS	EQU	0FAH	; DMA MASK REGISTER
   88         00F0      DMAAD0	EQU	0F0H	; ADDRESS REGISTERS
   89         00F2      DMAAD1	EQU	0F2H	;
   90         00F4      DMAAD2	EQU	0F4H	;
   91         00F6      DMAAD3	EQU	0F6H	;
   92         00F1      DMACN0	EQU	0F1H	; WORD COUNT REGISTERS
   93         00F3      DMACN1	EQU	0F3H	;
   94         00F5      DMACN2	EQU	0F5H	;
   95         00F7      DMACN3	EQU	0F7H	;
   96         00FC      DMACBC	EQU	0FCH	; CLEAR BYTE COUNTER
   97         00F9      DMAREQ	EQU	0F9H	;
   98         00FF      DMAMSK	EQU	0FFH	;
   99         00FD      DMATMP	EQU	0FDH	;
  100                   
  101         0001      DSPLC	EQU	001H	; DISPLAY CONTROL
  102         0000      DSPLD	EQU	000H	; DISPLAY DATA
  103                   
  104         0004      FDC	EQU	004H	; FLOPPY CONTROL
  105         0005      FDD	EQU	005H	; FLOPPY DATA
  106                   
  107         001C      BELL	EQU	01CH	;
  108         0014      SW1	EQU	014H	;
  109                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   4
GLOBAL CONSTANT DEFINITION 

  111                   
  112                   ;========================================================
  113                   ;= RAM LAYOUT DEFINITION                                =
  114                   ;========================================================
  115         0038      MSIZE	EQU	56		; AVAILABLE MEMORY EXCL. BIOS
  116         9000      BIAS	EQU	(MSIZE-20)*1024 ;
  117         C400      CPMB	EQU	3400H+BIAS	; CCP BASE
  118         C403      CCPCLR	EQU	CPMB+03H	; CCP-START ADDRESS +3
  119         1600      CPML	EQU	1600H		; LENGTH OF CCP AND BDOS
  120         CC06      BDOS	EQU	CPMB+806H	; BDOS BASE
  121         DA00      BIOS	EQU	CPMB+CPML	; BIOS BASE
  122         0080      BUFF	EQU	80H		; DMA BUFFER
  123         0003      IOBYTE	EQU	3		;
  124         0004      CDISK	EQU	4		; CURRENT LOGGED IN DISK
  125         002C      NSECTS	EQU	CPML/128	; LENGTH OF CCP AND BDOS IN 128 BYTES SECTORS
  126         0280      CBOOT	EQU	280H		; ROM BOOTSTRAP LOADER ENTRY POINT
  127         D84C      PATCH1	EQU	CPMB+144CH	; FIRST PATCH ADDRESS TO WBOOT FROM HD
  128         D89A      PATCH2	EQU	CPMB+149AH	; SECOND DO.
  129         D480      START	EQU	0D480H		; START OF CODE (INIT + BIOS)
  130         F500      BGSTAR	EQU	0F500H		; START OF BACKGROUND BITTABLE
  131         EE80      ENDPRG	EQU	0EE80H		; RESERVED AREA FOR BIOS VARIABLES
  132         F620      ISTACK	EQU	BGSTAR+250+38	; STACK USED BY INTERRUPT ROUTINES
  133         F680      STACK	EQU	ISTACK+96	; STACK USED BY BIOS DRIVERS
  134         F680      OUTCON	EQU	0F680H		; OUTPUT CONVERSION TABLE
  135         F700      INCONV	EQU	OUTCON+128	; INPUT CONVERSION TABLE
  136         F800      DSPSTR	EQU	0F800H		; DISPLAY REFRESH MEMORY BASE
  137         FFD1      CCTAD	EQU	DSPSTR+2001	; COLUMN COUNT
  138         FFD2      RCTAD	EQU	CCTAD+1		; ROW COUNT
  139         FFD4      CURSY	EQU	RCTAD+2		; CURSUR Y POSITION
  140         FFD5      LOCBUF	EQU	CURSY+1		; DISPLAY BUFFER LOCATION
  141         FFD7      XFLG	EQU	LOCBUF+2	; XY ADDRESSING MODE FLAG
  142         FFD8      LOCAD	EQU	XFLG+1		; LOCATION OF CHAR
  143         FFDA      USHER	EQU	LOCAD+2		; OUTPUT CHARACTER POSITION
  144         FFDB      BGFLG	EQU	USHER+1		; BACKGROUND FLAG:
  145                   				; 0 - AFTER CLEAR SCREEN
  146                   				; 1 - AFTER SET FOREGROUND
  147                   				; 2 - AFTER SET BACKGROUND
  148         FFDC      LOCBBU	EQU	BGFLG+1		;
  149         FFDE      ADR0	EQU	LOCBBU+2	; FIRST BYTE OF ADDRESS IN XY ADDRESSING
  150         FFDF      EXCNT0	EQU	ADR0+1		; EXIT ROUTINE 0 COUNT
  151         FFE1      EXCNT1	EQU	EXCNT0+2	; EXIT ROUTINE 1 COUNT
  152         FFE3      DELCNT	EQU	EXCNT1+2	; DELAY COUNT
  153         FFE5      EXROUT	EQU	DELCNT+2	; JMP TO EXIT ROUTINE 1
  154         FFE7      FDTIMO	EQU	EXROUT+2	; LOAD VALUE OF EXCNT1
  155         FFFC      RTC0	EQU	0FFFCH		; REAL TIME CLOCK
  156         FFFD      RTC1	EQU	0FFFDH		;
  157         FFFE      RTC2	EQU	0FFFEH		;
  158         FFFF      RTC3	EQU	0FFFFH		;
  159                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   5
GLOBAL CONSTANT DEFINITION 

  161                   
  162                   ;========================================================
  163                   ;= FLOPPY DRIVER VARIABLES                              =
  164                   ;========================================================
  165         EE81      HSTBUF	EQU	ENDPRG+1	; HOST DISK DMA BUFFER
  166         F081      DIRBF	EQU	HSTBUF+512	; SCRATCH DIRECTORY AREA
  167         F101      ALL0	EQU	DIRBF+128	; ALLOCATION VECTOR DRIVE 0
  168         F148      CHK0	EQU	ALL0+71		; CHECK VECTOR DRIVE 0
  169         F168      ALL1	EQU	CHK0+32		; ALLOCATION VECTOR DRIVE 1
  170         F1AF      CHK1	EQU	ALL1+71		; CHECK VECTOR DRIVE 1
  171         F1CF      ALVHD	EQU	CHK1+32		; ALLOCATION VECTOR FOR 5 LOG.HARD DSK UNITS
  172         F312      SEKDSK	EQU	ALVHD+71+(4*63)	; SEEK DISK NUMBER
  173         F313      SEKTRK	EQU	SEKDSK+1	; SEEK TRACK NUMBER
  174         F315      SEKSEC	EQU	SEKTRK+2	; SEEK SECTOR NUMBER
  175         F317      HSTDSK	EQU	SEKSEC+2	; HOST DISK NUMBER
  176         F318      HSTTRK	EQU	HSTDSK+1	; HOST TRACK NUMBER
  177         F31A      HSTSEC	EQU	HSTTRK+2	; HOST SECTOR NUMBER
  178         F31C      LSTDSK	EQU	HSTSEC+2	; LAST DISK SEEKED
  179         F31D      LSTTRK	EQU	LSTDSK+1	; LAST TRACK SEEKED
  180         F31F      SEKHST	EQU	LSTTRK+2	; SEEK SHR SECSHF
  181         F321      HSTACT	EQU	SEKHST+2	; HOST ACTIVE FLAG
  182         F322      HSTWRT	EQU	HSTACT+1	; HOST WRITTEN FLAG
  183         F323      UNACNT	EQU	HSTWRT+1	; UNALLOCATED REC COUNT
  184         F324      UNADSK	EQU	UNACNT+1	; LAST UNALLOCATED DISK
  185         F325      UNATRK	EQU	UNADSK+1	; LAST UNALLOCATED TRACK
  186         F327      UNASEC	EQU	UNATRK+2	; LAST UNALLOCATED SECTOR
  187         F329      UNAMSK	EQU	UNASEC+2	; LAST UNALLOCATED SECTOR MASKED
  188         F32A      ERFLAG	EQU	UNAMSK+1	; ERROR FLAG
  189         F32B      RSFLAG	EQU	ERFLAG+1	; READ SECTOR FLAG
  190         F32C      READOP	EQU	RSFLAG+1	; 1 IF READ OPERATION
  191         F32D      WRTYPE	EQU	READOP+1	; WRITE OPERATION TYPE
  192         F32E      DMAADR	EQU	WRTYPE+1	; LAST DMA ADDRESS
  193         F330      FORM	EQU	DMAADR+2	; POINTER TO FORMAT BLOCK
  194         F332      CFORM	EQU	FORM+2		; CURRENT FORMAT
  195         F333      EOTV	EQU	CFORM+1		; LAST SECTOR ON TRACK
  196         F334      DRNO	EQU	EOTV+1		; HIGHEST DRIVE NO
  197         F335      UNK1	EQU	DRNO+1		; ???
  198         F336      UNK2	EQU	UNK1+1		; ???
  199         F337      UNK3	EQU	UNK2+1		; ???
  200         F338      UNK4	EQU	UNK3+1		; ???
  201         F339      DSKNO	EQU	UNK4+1		; CURRENT DISK
  202         F33A      DSKAD	EQU	DSKNO+1		; CURRENT DMA ADDRESS
  203         F33C      ACTRA	EQU	DSKAD+2		; ACTUAL (NOT CPM) TRACK NO IN READ/WRITE
  204         F33D      ACSEC	EQU	ACTRA+1		; ACTUAL (NOT CPM) SECTOR NO IN READ/WRITE
  205         F33E      REPET	EQU	ACSEC+1		; REPEAT COUNTER IN READ/WRITE
  206         F33F      RSTAB	EQU	REPET+1		; RESULT TABLE
  207         F347      MHDTSR	EQU	RSTAB+8		; MIRROW OF WD1000 STATUS REGISTER
  208         F348      MHDERR	EQU	MHDTSR+1	; MIRROW OF WD1000 ERROR REGISTER
  209         F349      HERRCT	EQU	MHDERR+1	; WD1000 ERROR COUNTER
  210         F34B      SP_SAV	EQU	HERRCT+2	; SYSTEM STACK POINTER SAVE AREA
  211         F34D      HD_FLG	EQU	SP_SAV+2	; WD1000 BUSY FLAG (0=BUSY)
  212         F34E      HD_OFL	EQU	HD_FLG+1	; OFFLINE/ONLINE FLAG (1=OFFLINE)
  213         F34F      FL_FLG	EQU	HD_OFL+1	; FLOPPY BUSY FLAG (0=BUSY)
  214         F350      WBFLAG	EQU	FL_FLG+1	; WARMBOOT FLAG
  215                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   6
GLOBAL CONSTANT DEFINITION 

  217                   
  218                   ;========================================================
  219                   ;= ACTUAL FLOPPY SYSTEM PARAMETERS                      =
  220                   ;= INITIALIZED WHEN SELECT_DISK IS CALLED               =
  221                   ;========================================================
  222         F351      DPBLCK	EQU	WBFLAG+1	; DISK PARAM BLOCK
  223         F353      CPMRBP	EQU	DPBLCK+2	; CP/M RECORDS PR. BLOCK
  224         F354      CPMSPT	EQU	CPMRBP+1	; CP/M SECTORS PR. TRACK
  225         F356      SECMSK	EQU	CPMSPT+2	; SECTOR MASK
  226         F357      SECSHF	EQU	SECMSK+1	; SECTOR SHIFT COUNT
  227         F358      TRANTB	EQU	SECSHF+1	; SECTOR TRANSLATION TABLE
  228         F35A      DTLV	EQU	TRANTB+2	; DATA LENGTH
  229         F35B      DSKTYP	EQU	DTLV+1 		; DISK TYPE (0:=FLP, FF:=HARD)
  230         F361      DUM	EQU	DSKTYP+6	; FILLER TO OBTAIN 16 BYTE LENGTH
  231                   
  232                   ;==============================================================================
  233                   ;=	WD1000 MACRO COMMAND DEFINITIONS                                      =
  234                   ;==============================================================================
  235                   
  236         0010      RSTCMD	EQU	10H 		; RESTOTE COMMAND
  237         0028      RDCMD	EQU	28H 		; READ SECTOR WITH DMA COMMAND
  238         0030      WRTCMD	EQU	30H 		; WRITE SECTOR COMMAND
  239         0050      FMTCMD	EQU	50H 		; FORMAT TRACK COMMAND
  240         0070      SEEKCM	EQU	70H 		; SEEK COMMAND
  241                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   7
GLOBAL CONSTANT DEFINITION 

  243                   
  244                   	INCLUDE		BIOSTYPE.MAC
    1                   ;==============================================================================
    2                   ;= THE EQU LINE DETERMINES WHETHER A MINI VERSION OR A MAXI VERSION OF BIOS   =
    3                   ;= WILL BE CREATED:                                                           =
    4                   ;=                 IF MINI IS DEFINED                                         =
    5                   ;=                   (REMOVE THE ';') DISK TABLES ARE GENERATED FOR A MINI    =
    6                   ;=                    DISKETTE SYSTEM                                         =
    7                   ;=                 ELSE                                                       =
    8                   ;=                    DISK TABLES FOR A MAXI SYSTEM WILL BE GENERATED         =
    9                   ;==============================================================================
   10                   
   11         0000      MINI	EQU	0		; MINI/MAXI SWITCH
   12                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   8
BIOSTYPEMAC

   14                   
  245                   	INCLUDE		INIPARMS.MAC
    2                   
    3                   ;========================================================
    4                   ;= HARDWARE INITIALIZATION SECTION                      =
    5                   ;========================================================
    6                   ;= ROM BOOTSTRAP LOADER INFORMATION                     =
    7                   ;========================================================
    8                   
    9         0000      	ORG	0		;
   10                   	.PHASE	START		;
   11 D480  0280        	DW	CBOOT		; ENTRY POINT
   12 D482    0006      	DS	6		;
   13 D488  20 52 43 37 	DB	' RC702'	;
   14                   
   15 D48E    0072      	DS 	128-($ AND 127)	;
   16                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page   9
HARDWARE INITIALIZATION PARAMETERS 

   18                   
   19                   ;==============================================================================
   20                   ;= START OF HARDWARE CONFIGURATION PARAMETERS USED BY CONFI                   =
   21                   ;==============================================================================
   22                   ;= Z80 CTC CONTROLLER                                   =
   23                   ;========================================================
   24 D500  47          MODE0:	DB	047H	; TIMER MODE
   25 D501  20          COUNT0:	DB	020H	; COUNT TO OBTAIN 1200 BAUD (SIO CHANNEL A)
   26 D502  47          MODE1:	DB	047H	; TIMER MODE
   27 D503  20          COUNT1:	DB	020H	; COUNT TO OBTAIN 1200 BAUD (SIO CHANNEL B)
   28 D504  D7          MODE2:	DB	0D7H	; COUNTER MODE
   29 D505  01          COUNT2:	DB	001H	; INTERRUPT AFTER 1 COUNT (DISPLAY)
   30 D506  D7          MODE3:	DB	0D7H	; COUNTER MODE
   31 D507  01          COUNT3:	DB	001H	; INTERRUPT AFTER 1 COUNT (FLOPPY DISK)
   32                   
   33                   ;========================================================
   34                   ;= Z80 SIO CONTROLLER                                   =
   35                   ;========================================================
   36 D508  18          PSIOA: 	DB 018H		; CHANNEL RESET
   37 D509  04          	DB 004H		; SELECT WR4
   38 D50A  47          	DB 047H		; 1 STOP BIT,EVEN PARITY,16*CLOCK
   39 D50B  03          	DB 003H		; SELECT WR3
   40 D50C  61          	DB 061H		; REC,AUTO ENABLE. 7 BITS/CHARACTER
   41 D50D  05          	DB 005H		; SELECT WR5
   42 D50E  20          	DB 020H		; RTS,DTR,XMIT DISABLE. 7 BITS/CHARACTER
   43 D50F  01          	DB 001H		; SELECT WR1
   44 D510  1B          	DB 01BH		; ENABLE REC,XMIT AND EXT.STATUS.
   45                   
   46 D511  18          PSIOB:	DB 018H		; CHANNEL RESET
   47 D512  02          	DB 002H		; SELECT WR2
   48 D513  10          	DB 010H		; INTERRUPT VECTOR
   49 D514  04          	DB 004H		; SELECT WR4
   50 D515  47          	DB 047H		; 1 STOP BIT,EVEN PARITY,16*CLOCK  
   51 D516  03          	DB 003H		; SELECT WR3
   52 D517  60          	DB 060H		; AUTO ENABLE,REC 7 BITS/CHAR,REC DISABLE.
   53 D518  05          	DB 005H		; SELECT WR5
   54 D519  20          	DB 020H		; RTS,XMIT,DTR DISABLE. 7 BITS/CHARACTER
   55 D51A  01          	DB 001H		; SELECT WR1
   56 D51B  1F          	DB 01FH		; ENABLE REC,XMIT AND EXT.STATUS. STATUS AFFECTS VECTOR
   57                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page  10
HARDWARE INITIALIZATION PARAMETERS 

   59                   
   60                   ;========================================================
   61                   ;= AM9517 DMA CONTROLLER                                =
   62                   ;========================================================
   63 D51C  48          DMODE0:	DB	048H	; DMA CHANNEL0 MODE (WD1000)
   64 D51D  49          DMODE1:	DB	049H	; DMA CHANNEL1 MODE (FLOPPY DISK)
   65 D51E  4A          DMODE2:	DB	04AH	; DMA CHANNEL2 MODE (DISPLAY)
   66 D51F  4B          DMODE3:	DB	04BH	; DMA CHANNEL3 MODE (DISPLAY)
   67                   
   68                   ;========================================================
   69                   ;= INTEL 8275 DISPLAY CONTROLLER                        =
   70                   ;========================================================
   71 D520  4F          PAR1:	DB	04FH	; NORMAL ROWS,80 CHARACTERS PR. ROW
   72 D521  98          PAR2:	DB	098H	; ROWCOUNTS/VRTC, 25 ROWS PR. FRAME
   73 D522  7A          PAR3:	DB	07AH	; UNDERLINE IN POSITION 8, 11 POSITIONS PR. CHARACTER
   74                   			; Note that underline pos. must be less than 9
   75 D523  4D          PAR4:	DB	04DH	; CURSOR FORMAT BLOCK,BLINK AND REVERSE VIDEO
   76                   
   77                   ;========================================================
   78                   ;= UPD765 FLOPPY DISK CONTROLLER                        =
   79                   ;========================================================
   80 D524  03          FDPROG:	DB	3	; PROGRAM LENGTH
   81 D525  03          	DB	003H	; SPECIFY COMMAND  
   82 D526  DF          	DB 	0DFH	; STEP RATE TIME=3MS, HEAD UNLOAD TIME=240MS (MAXI)
   83 D527  28          	DB	028H	; HEAD LOAD TIME=4OMS, DMAMODE
   84                   
   85                   ;========================================================
   86                   ;= DEFAULT PARAMETERS USED BY CONFI PROGRAM             =
   87                   ;========================================================
   88 D528  00          	DB	000H	; CURSOR NUMBER
   89 D529  00          	DB	000H	; CONV TAB NUMBER ( DANISH )
   90 D52A  06          	DB	006H	; BAUD RATE NUMBER A
   91 D52B  06          	DB	006H	; BAUD RATE NUMBER B
   92 D52C  00          XYFLG:	DB	000H	; ADDRESS MODE 0=XY, 1=YX
   93 D52D  00FA        STPTIM:	DW	250	; MINI FLOPPY MOTOR STOP TIMER (5 SEC)
   94                   ;==============================================================================
   95                   ;=(END OF HARDWARE CONFIGURATION PARAMETERS USED BY CONFI)                    =
   96                   ;==============================================================================
   97                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page  11
HARDWARE INITIALIZATION PARAMETERS 

   99                   
  100                   ;==============================================================================
  101                   ;= DISK CONFIGURATION PARAMETERS                                              =
  102                   ;==============================================================================
  103 D52F  08          INFD0:	DB	08	; 08 : MAXI FLOPPY DISK 1,1 MB UNIT
  104 D530  08          INFD1:	DB	08	; 16 : MINI FLOPPY DISK 0,8 MB UNIT
  105 D531  20          INFD2:	DB	32	; 32 : HARD DISK 1 MB (FLP) UNIT
  106 D532  FF          INFD3:	DB	255	; 40 : HARD DISK 0,3 MB (FLP) UNIT
  107 D533  FF          INFD4:	DB	255	; 48 : HARD DISK 2 MB UNIT
  108 D534  FF          INFD5:	DB	255	; 56 : HARD DISK 4 MB UNIT
  109 D535  FF          INFD6:	DB	255	; 64 : HARD DISK 8 MB UNIT
  110 D536  FF          INFD7:	DB	255	; 255: NOT USED
  111 D537  FF          INFD8:	DB	255	;
  112 D538  FF          INFD9:	DB	255	;
  113 D539  FF          INFD10:	DB	255	;
  114 D53A  FF          INFD11:	DB	255	;
  115 D53B  FF          INFD12:	DB	255	;
  116 D53C  FF          INFD13:	DB	255	;
  117 D53D  FF          INFD14:	DB	255	;
  118 D53E  FF          INFD15:	DB	255	;
  119 D53F  FF          INFDXX:	DB	255	; MUST ALWAYS BE 255, USED TO TERMINATE INIT. COPY
  120                   
  121 D540  02          NDTAB:	DB	2	;
  122 D541  02 00 00    NDT1:	DB	2,0,0	;
  123                   
RC702 CP/M BASIS SOFTWARE RELEASE 1.1  83.01.05 Z80ASM 1.32 Page  12
HARDWARE INITIALIZATION PARAMETERS 

  125                   
  126                   ;==============================================================================
  127                   ;= Z80 CTC 2 CONTROLLER PARAMETERS                                            =
  128                   ;==============================================================================
  129 D544  D7          MODE4:	DB	0D7H	; COUNTER MODE
  130 D545  01          COUNT4:	DB	001H	; INTERRUPT AFTER 1 COUNT (WD1000)
  131 D546  03          MODE5:	DB	003H	; CHANNEL RESET
  132                   
  133                   ;==============================================================================
  134                   ;= SYSTEM DISK DRIVE		MODIFIED BY HDINST                            =
  135                   ;==============================================================================
  136                   
  137 D547  00          ibootd:	db	0	; boot disk, 0 = floppy (A), <> 0 = hard disk (C)
  138                   			; 	Init loged drive nr. (HD)
  139                   
  140 D548    0038      	DS	128-($ AND 127)	; ALIGN TO 128 BYTE
  141                   
  142                   ;==============================================================================
  143                   ;= END OF H/W CONFIGURATION PARAMETERS                                        =
  144                   ;==============================================================================
  145                   
  246 D580              CONVTA:
  247                   	INCLUDE		DANISH.MAC
OUTPUT CONVERSION TABLE Z80ASM 1.32 Page  13
DANISH PUBLIC SECTOR 

    4                   
    5                   ;              ASCII          OUTPUT            KOMMENTAR
    6 D580  00          	DB	  0;		  0:		not used
    7 D581  01          	DB	  1;		  1:		A-CTRL
    8 D582  02          	DB	  2;		  2:
    9 D583  03          	DB	  3;		  3:		C-CTRL
   10 D584  04          	DB	  4;		  4:		D-CTRL
   11 D585  05          	DB	  5;		  5:		 <--
   12 D586  06          	DB	  6;		  6:		F-CTRL
   13 D587  07          	DB	  7;		  7:		G-CTRL
   14 D588  08          	DB	  8;		  8:		H-CTRL
   15 D589  09          	DB	  9;		  9:		-->
   16 D58A  0A          	DB	 10;		 10:		PIL NEDAD
   17 D58B  0B          	DB	 11;		 11:		K-CTRL
   18 D58C  0C          	DB	 12;		 12:		CLEAR
   19 D58D  0D          	DB	 13;		 13:		VENSTRE KN{KPIL, MCTRL,CR
   20 D58E  0E          	DB	 14;		 14: 		N-CTRL
   21 D58F  0F          	DB	 15;		 15:
   22 D590  10          	DB	 16;		 16:
   23 D591  11          	DB	 17;		 17:
   24 D592  12          	DB	 18;		 18:		B-CTRL
   25 D593  13          	DB	 19;		 19:		S-CTRL
   26 D594  14          	DB	 20;		 20:
   27 D595  15          	DB	 21;		 21:
   28 D596  16          	DB	 22;		 22:
   29 D597  17          	DB	 23;		 23:
   30 D598  18          	DB	 24;		 24:		X-CTRL
   31 D599  19          	DB	 25;		 25:
   32 D59A  1A          	DB	 26;		 26:		PIL OPAD, Z-CTRL
   33 D59B  1B          	DB	 27;		 27:		ESCAPE, {-CTRL
   34 D59C  1C          	DB	 28;		 28:		|-CTRL
   35 D59D  1D          	DB	 29;		 29:
   36 D59E  1E          	DB	 30;		 30:		@-CTRL
   37 D59F  1F          	DB	 31;		 31:
   38 D5A0  20          	DB	 32;		 32:		SPACE
   39 D5A1  21          	DB	 33;		 33:
   40 D5A2  22          	DB	 34;		 34:		"
   41 D5A3  23          	DB	 35;		 35:		# (PARAGRAF SIGN)
   42 D5A4  24          	DB	 36;		 36:		$
   43                   
OUTPUT CONVERSION TABLE Z80ASM 1.32 Page  14
DANISH PUBLIC SECTOR 

   45                   
   46 D5A5  25          	DB	 37;		 37:            %
   47 D5A6  26          	DB	 38;		 38:		&
   48 D5A7  27          	DB	 39;		 39:		'
   49 D5A8  28          	DB	 40;		 40:		(
   50 D5A9  29          	DB	 41;		 41:		)
   51 D5AA  2A          	DB	 42;		 42:		*
   52 D5AB  2B          	DB	 43;		 43:		+
   53 D5AC  2C          	DB	 44;		 44:		,
   54 D5AD  2D          	DB	 45;		 45:		- (MINUS)
   55 D5AE  2E          	DB	 46;		 46:		.
   56 D5AF  2F          	DB	 47;		 47:		/
   57 D5B0  30          	DB	 48;		 48:		0 (NUL)
   58 D5B1  31          	DB	 49;		 49:		1  
   59 D5B2  32          	DB	 50;		 50:		2
   60 D5B3  33          	DB	 51;		 51:		3
   61 D5B4  34          	DB	 52;		 52:		4
   62 D5B5  35          	DB	 53;		 53:		5
   63 D5B6  36          	DB	 54;		 54:		6
   64 D5B7  37          	DB	 55;		 55:		7
   65 D5B8  38          	DB	 56;		 56:		8
   66 D5B9  39          	DB	 57;		 57:		9
   67 D5BA  3A          	DB	 58;		 58:		:
   68 D5BB  3B          	DB	 59;		 59:		SEMIKOLON
   69 D5BC  3C          	DB	 60;		 60:		<
   70 D5BD  3D          	DB	 61;		 61:		=
   71 D5BE  3E          	DB	 62;		 62:		>
   72 D5BF  3F          	DB	 63;		 63:		?
   73 D5C0  40          	DB	 64;		 64:		@
   74 D5C1  41          	DB	 65;		 65:		A
   75 D5C2  42          	DB	 66;		 66:		B
   76 D5C3  43          	DB	 67;		 67:		C
   77 D5C4  44          	DB	 68;		 68:		D
   78 D5C5  45          	DB	 69;		 69:		E
   79 D5C6  46          	DB	 70;		 70:		F
   80 D5C7  47          	DB	 71;		 71:		G
   81 D5C8  48          	DB	 72;		 72:		H
   82 D5C9  49          	DB	 73;		 73:		I
   83 D5CA  4A          	DB	 74;		 74:		J
   84                   
OUTPUT CONVERSION TABLE Z80ASM 1.32 Page  15
DANISH PUBLIC SECTOR 

   86                   
   87 D5CB  4B          	DB	 75;		 75:		K
   88 D5CC  4C          	DB	 76;		 76:		L  
   89 D5CD  4D          	DB	 77;		 77:		M
   90 D5CE  4E          	DB	 78;		 78:		N
   91 D5CF  4F          	DB	 79;		 79:		O
   92 D5D0  50          	DB	 80;		 80:		P
   93 D5D1  51          	DB	 81;		 81:		Q
   94 D5D2  52          	DB	 82;		 82:		R
   95 D5D3  53          	DB	 83;		 83:		S
   96 D5D4  54          	DB	 84;		 84:		T
   97 D5D5  55          	DB	 85;		 85:		U
   98 D5D6  56          	DB	 86;		 86:		V
   99 D5D7  57          	DB	 87;		 87:		W
  100 D5D8  58          	DB	 88;		 88:		X
  101 D5D9  59          	DB	 89;		 89:		Y
  102 D5DA  5A          	DB	 90;		 90:		Z
  103 D5DB  5B          	DB	 91;		 91:		[
  104 D5DC  5C          	DB	 92;		 92:		\
  105 D5DD  5D          	DB	 93;		 93:		]
  106 D5DE  5E          	DB	 94;		 94:		TYSK Y
  107 D5DF  5F          	DB	 95;		 95:		UNDERSTREGNING
  108 D5E0  60          	DB	 96;		 96:		PIL OPAD
  109 D5E1  61          	DB	 97;		 97:		a
  110 D5E2  62          	DB	 98;		 98:		b
  111 D5E3  63          	DB	 99;		 99:		c
  112 D5E4  64          	DB	100;		100:		d
  113 D5E5  65          	DB	101;		101:		e
  114 D5E6  66          	DB	102;		102:		f
  115 D5E7  67          	DB	103;		103:		g
  116 D5E8  68          	DB	104;		104:		h
  117 D5E9  69          	DB	105;		105:		i
  118 D5EA  6A          	DB	106;		106:		j
  119 D5EB  6B          	DB	107;		107:		k
  120 D5EC  6C          	DB	108;		108:		l
  121 D5ED  6D          	DB	109;		109:		m
  122 D5EE  6E          	DB	110;		110:		n
  123 D5EF  6F          	DB	111;		111:		o
  124 D5F0  70          	DB	112;		112:		p
  125                   
OUTPUT CONVERSION TABLE Z80ASM 1.32 Page  16
DANISH PUBLIC SECTOR 

  127                   
  128 D5F1  71          	DB	113;		113:		q
  129 D5F2  72          	DB	114;		114:		r
  130 D5F3  73          	DB	115;		115:		s
  131 D5F4  74          	DB	116;		116:		t
  132 D5F5  75          	DB	117;		117:		u
  133 D5F6  76          	DB	118;		118:		v
  134 D5F7  77          	DB	119;		119:		w
  135 D5F8  78          	DB	120;		120:		x
  136 D5F9  79          	DB	121;		121:		y
  137 D5FA  7A          	DB	122;		122:		z
  138 D5FB  7B          	DB	123;		123:		{
  139 D5FC  7C          	DB	124;		124:		|
  140 D5FD  7D          	DB	125;		125:		}
  141 D5FE  7E          	DB	126;		126:		LILLE TYSK y
  142 D5FF  7F          	DB	127;		127:		RUBOUT
  143                   
  146                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  17
DANISH 

  148                   
  149                   ;             ASCII     INPUT		KOMMENTAR
  150 D600  00          	DB	  0;	  0 :
  151 D601  01          	DB	  1;	  1 :          A-CTRL
  152 D602  02          	DB	  2;	  2 :          B-CTRL
  153 D603  03          	DB	  3;	  3 :          C-CTRL
  154 D604  04          	DB	  4;	  4 :          D-CTRL
  155 D605  05          	DB	  5;	  5 :          E-CTRL
  156 D606  06          	DB	  6;	  6 :          F-CTRL
  157 D607  07          	DB	  7;	  7 :          G-CTRL
  158 D608  08          	DB	  8;	  8 :          H-CTRL
  159 D609  09          	DB	  9;	  9 :          I-CTRL
  160 D60A  0A          	DB	 10;	 10 :          J-CTRL
  161 D60B  0B          	DB	 11;	 11 :          K-CTRL
  162 D60C  0C          	DB	 12;	 12 :          L-CTRL
  163 D60D  0D          	DB	 13;	 13 :          M-CTRL, CR
  164 D60E  0E          	DB	 14;	 14 :          N-CTRL
  165 D60F  0F          	DB	 15;	 15 :          O-CTRL
  166 D610  10          	DB	 16;	 16 :          P-CTRL
  167 D611  11          	DB	 17;	 17 :          Q-CTRL
  168 D612  12          	DB	 18;	 18 :          R-CTRL
  169 D613  13          	DB	 19;	 19 :          S-CTRL
  170 D614  14          	DB	 20;	 20 :          T-CTRL
  171 D615  15          	DB	 21;	 21 :          U-CTRL
  172 D616  16          	DB	 22;	 22 :          V-CTRL
  173 D617  17          	DB	 23;	 23 :          W-CTRL
  174 D618  18          	DB	 24;	 24 :          X-CTRL
  175 D619  19          	DB	 25;	 25 :          Y-CTRL
  176 D61A  1A          	DB	 26;	 26 :          Z-CTRL
  177 D61B  1B          	DB	 27;	 27 :          {-CTRL, ESC
  178 D61C  1C          	DB	 28;	 28 :          |-CTRL
  179 D61D  1D          	DB	 29;	 29 :          }-CTRL
  180 D61E  1E          	DB	 30;	 30 :          PILOP-CTRL, ERA. EOLN
  181 D61F  1F          	DB	 31;	 31 :          RUBOUT-CTRL, ERA. EOS
  182 D620  20          	DB	 32;	 32 :          SPACE, BAR
  183 D621  21          	DB	 33;	 33 :
  184 D622  22          	DB	 34;	 34 :          "
  185 D623  23          	DB	 35;	 35 :          #
  186 D624  24          	DB	 36;	 36 :          $ (DOLLAR)
  187                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  18
DANISH 

  189                   
  190 D625  25          	DB	 37;	 37 :          %
  191 D626  26          	DB	 38;	 38 :          &
  192 D627  27          	DB	 39;	 39 :          '
  193 D628  28          	DB	 40;	 40 :          (
  194 D629  29          	DB	 41;	 41 :          )
  195 D62A  2A          	DB	 42;	 42 :          *
  196 D62B  2B          	DB	 43;	 43 :          +
  197 D62C  2C          	DB	 44;	 44 :          ,
  198 D62D  2D          	DB	 45;	 45 :          -
  199 D62E  2E          	DB	 46;	 46 :          .
  200 D62F  2F          	DB	 47;	 47 :          /
  201 D630  30          	DB	 48;	 48 :          0 (NUL)
  202 D631  31          	DB	 49;	 48 :          1
  203 D632  32          	DB	 50;	 50 :          2
  204 D633  33          	DB	 51;	 51 :          3
  205 D634  34          	DB	 52;	 52 :          4
  206 D635  35          	DB	 53;	 53 :          5
  207 D636  36          	DB	 54;	 54 :          6
  208 D637  37          	DB	 55;	 55 :          7
  209 D638  38          	DB	 56;	 56 :          8
  210 D639  39          	DB	 57;	 57 :          9
  211 D63A  3A          	DB	 58;	 58 :          :
  212 D63B  3B          	DB	 59;	 59 :          SEMIKOLON
  213 D63C  3C          	DB	 60;	 60 :          <
  214 D63D  3D          	DB	 61;	 61 :          =
  215 D63E  3E          	DB	 62;	 62 :          >
  216 D63F  3F          	DB	 63;	 63 :          ?
  217 D640  40          	DB	 64;	 64 :          @
  218 D641  41          	DB	 65;	 65 :          A
  219 D642  42          	DB	 66;	 66 :          B
  220 D643  43          	DB	 67;	 67 :          C
  221 D644  44          	DB	 68;	 68 :          D
  222 D645  45          	DB	 69;	 69 :          E
  223 D646  46          	DB	 70;	 70 :          F
  224 D647  47          	DB	 71;	 71 :          G
  225 D648  48          	DB	 72;	 72 :          H
  226 D649  49          	DB	 73;	 73 :          I
  227 D64A  4A          	DB	 74;	 74 :          J
  228                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  19
DANISH 

  230                   
  231 D64B  4B          	DB	 75;	 75 :          K
  232 D64C  4C          	DB	 76;	 76 :          L
  233 D64D  4D          	DB	 77;	 77 :          M
  234 D64E  4E          	DB	 78;	 78 :          N
  235 D64F  4F          	DB	 79;	 79 :          O
  236 D650  50          	DB	 80;	 80 :          P
  237 D651  51          	DB	 81;	 81 :          Q
  238 D652  52          	DB	 82;	 82 :          R
  239 D653  53          	DB	 83;	 83 :          S
  240 D654  54          	DB	 84;	 84 :          T
  241 D655  55          	DB	 85;	 85 :          U
  242 D656  56          	DB	 86;	 86 :          V
  243 D657  57          	DB	 87;	 87 :          W
  244 D658  58          	DB	 88;	 88 :          X
  245 D659  59          	DB	 89;	 89 :          Y
  246 D65A  5A          	DB	 90;	 90 :          Z
  247 D65B  5B          	DB	 91;	 91 :          [
  248 D65C  5C          	DB	 92;	 92 :          \
  249 D65D  5D          	DB	 93;	 93 :          ]
  250 D65E  5E          	DB	 94;	 94 :          PIL OP
  251 D65F  5F          	DB	 95;	 95 :          UNDERSTREGNING
  252 D660  60          	DB	 96;	 96 :          STORT TYSK Y
  253 D661  61          	DB	 97;	 97 :          a
  254 D662  62          	DB	 98;	 98 :          b
  255 D663  63          	DB	 99;	 99 :          c
  256 D664  64          	DB	100;	100 :          d
  257 D665  65          	DB	101;	101 :          e
  258 D666  66          	DB	102;	102 :          f
  259 D667  67          	DB	103;	103 :          g
  260 D668  68          	DB	104;	104 :          h
  261 D669  69          	DB	105;	105 :          i
  262 D66A  6A          	DB	106;	106 :          j
  263 D66B  6B          	DB	107;	107 :          k
  264 D66C  6C          	DB	108;	108 :          l
  265 D66D  6D          	DB	109;	109 :          m
  266 D66E  6E          	DB	110;	110 :          n
  267 D66F  6F          	DB	111;	111 :          o
  268 D670  70          	DB	112;	112 :          p
  269                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  20
DANISH 

  271                   
  272 D671  71          	DB	113;	113 :          q
  273 D672  72          	DB	114;	114 :          r
  274 D673  73          	DB	115;	115 :          s
  275 D674  74          	DB	116;	116 :          t
  276 D675  75          	DB	117;	117 :          u
  277 D676  76          	DB	118;	118 :          v
  278 D677  77          	DB	119;	119 :          w
  279 D678  78          	DB	120;	120 :          x
  280 D679  79          	DB	121;	121 :          y
  281 D67A  7A          	DB	122;	122 :          z
  282 D67B  7B          	DB	123;	123 :          {
  283 D67C  7C          	DB	124;	124 :          |
  284 D67D  7D          	DB	125;	125 :          }
  285 D67E  7E          	DB	126;	126 :          ~
  286 D67F  7F          	DB	127;	127 :          RUBOUT
  287 D680  80          	DB	128;	128 :
  288 D681  01          	DB	  1;	129 :          HOME
  289 D682  82          	DB	130;	130 :
  290 D683  03          	DB	  3;	131 :          PA1
  291 D684  04          	DB	  4;	132 :          PA2
  292 D685  05          	DB	  5;	133 :          LEFT TAB
  293 D686  86          	DB	134;	134 :
  294 D687  87          	DB	135;	135 :
  295 D688  08          	DB	  8;	136 :          LEFT ARROW
  296 D689  09          	DB	  9;	137 :          RIGTH TAB
  297 D68A  0A          	DB	 10;	138 :          DOWN ARROW
  298 D68B  0B          	DB	 11;	139 :          PA3
  299 D68C  0C          	DB	 12;	140 :          CLEAR
  300 D68D  0D          	DB	 13;	141 :          CR
  301 D68E  0E          	DB	 14;	142 :          PA4
  302 D68F  8F          	DB	143;	143 :
  303 D690  10          	DB	 16;	144 :          PA5
  304 D691  91          	DB	145;	145 :
  305 D692  92          	DB	146;	146 :
  306 D693  93          	DB	147;	147 :
  307 D694  14          	DB	 20;	148 :          SHIFT PA1
  308 D695  15          	DB	 21;	149 :          SHIFT PA2
  309 D696  96          	DB	150;	150 :
  310                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  21
DANISH 

  312                   
  313 D697  97          	DB	151;	151 :
  314 D698  18          	DB	 24;	152 :          RIGTH ARROW
  315 D699  19          	DB	 25;	153 :          SHIFT PA3
  316 D69A  1A          	DB	 26;	154 :          UP ARROW
  317 D69B  1B          	DB	 27;	155 :          SHIFT ESCAPE
  318 D69C  1C          	DB	 28;	156 :          SHIFT PA4
  319 D69D  9D          	DB	157;	157 :
  320 D69E  1E          	DB	 30;	158 :          SHIFT PA5
  321 D69F  9F          	DB	159;	159 :
  322 D6A0  20          	DB	 32;	160 :          SPACE
  323 D6A1  31          	DB	 49;	161 :          1 (NUMBER BLOCK)
  324 D6A2  32          	DB	 50;	162 :          2
  325 D6A3  33          	DB	 51;	163 :          3
  326 D6A4  34          	DB	 52;	164 :          4
  327 D6A5  35          	DB	 53;	165 :          5
  328 D6A6  36          	DB	 54;	166 :          6
  329 D6A7  37          	DB	 55;	167 :          7
  330 D6A8  38          	DB	 56;	168 :          8
  331 D6A9  39          	DB	 57;	169 :          9
  332 D6AA  AA          	DB	170;	170 :
  333 D6AB  30          	DB	 48;	171 :          0
  334 D6AC  2D          	DB	 45;	172 :          _
  335 D6AD  AD          	DB	173;	173 :
  336 D6AE  2E          	DB	 46;	174 :          .
  337 D6AF  8B          	DB	139;	175 :          SHIFT PF4
  338 D6B0  30          	DB	 48;	176 :          0
  339 D6B1  31          	DB	 49;	177 :          1
  340 D6B2  32          	DB	 50;	178 :          2
  341 D6B3  33          	DB	 51;	179 :          3
  342 D6B4  34          	DB	 52;	180 :          4
  343 D6B5  35          	DB	 53;	181 :          5
  344 D6B6  36          	DB	 54;	182 :          6
  345 D6B7  37          	DB	 55;	183 :          7
  346 D6B8  38          	DB	 56;	184 :          8
  347 D6B9  39          	DB	 57;	185 :          9
  348 D6BA  BA          	DB	186;	186 :
  349 D6BB  30          	DB	 48;	187 :          0
  350 D6BC  2D          	DB	 45;	188 :          _
  351                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  22
DANISH 

  353                   
  354 D6BD  BD          	DB	189;	189 :
  355 D6BE  2E          	DB	 46;	190 :          .
  356 D6BF  83          	DB	131;	191 :          PF4
  357 D6C0  12          	DB	 18;	192 :          SHIFT HOME
  358 D6C1  86          	DB	134;	193 :          PF7
  359 D6C2  C2          	DB	194;	194 :
  360 D6C3  C3          	DB	195;	195 :
  361 D6C4  C4          	DB	196;	196 :
  362 D6C5  05          	DB	  5;	197 :          SHIFT LEFT TAB
  363 D6C6  82          	DB	130;	198 :          PF3
  364 D6C7  C7          	DB	199;	199 :
  365 D6C8  08          	DB	  8;	200 :          SHIFT LEFT ARROW
  366 D6C9  C9          	DB	201;	201 :          SHIFT RIGTH TAB
  367 D6CA  0A          	DB	 10;	202 :          SHIFT DOWN ARROW
  368 D6CB  84          	DB	132;	203 :          PF5
  369 D6CC  85          	DB	133;	204 :          PF6
  370 D6CD  CD          	DB	205;	205 :
  371 D6CE  CE          	DB	206;	206 :
  372 D6CF  CF          	DB	207;	207 :
  373 D6D0  81          	DB	129;	208 :          PF2
  374 D6D1  D1          	DB	209;	209 :
  375 D6D2  87          	DB	135;	210 :          PF8
  376 D6D3  D3          	DB	211;	211 :
  377 D6D4  D4          	DB	212;	212 :
  378 D6D5  D5          	DB	213;	213 :
  379 D6D6  80          	DB	128;	214 :          PF1
  380 D6D7  D7          	DB	215;	215 :
  381 D6D8  18          	DB	 24;	216 :          SHIFT RIGTH ARROW
  382 D6D9  D9          	DB	217;	217 :
  383 D6DA  1A          	DB	 26;	218 :          SHIFT UP ARROW
  384 D6DB  DB          	DB	219;	219 :
  385 D6DC  DC          	DB	220;	220 :
  386 D6DD  DD          	DB	221;	221 :
  387 D6DE  DE          	DB	222;	222 :
  388 D6DF  30          	DB	 48;	223 :          0 (NUL)
  389 D6E0  E0          	DB	224;	224 :
  390 D6E1  8E          	DB	142;	225 :          SHIFT PF7
  391 D6E2  E2          	DB	226;	226 :
  392                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  23
DANISH 

  394                   
  395 D6E3  E3          	DB	227;	227 :
  396 D6E4  E4          	DB	228;	228 :
  397 D6E5  E5          	DB	229;	229 :
  398 D6E6  8A          	DB	138;	230 :          SHIFT PF3
  399 D6E7  E7          	DB	231;	231 :
  400 D6E8  E8          	DB	232;	232 :
  401 D6E9  E9          	DB	233;	233 :
  402 D6EA  EA          	DB	234;	234 :
  403 D6EB  8C          	DB	140;	235 :          SHIFT PF5
  404 D6EC  8D          	DB	141;	236 :          SHIFT PF6
  405 D6ED  ED          	DB	237;	237 :
  406 D6EE  EE          	DB	238;	238 :
  407 D6EF  EF          	DB	239;	239 :
  408 D6F0  89          	DB	137;	240 :          SHIFT PF2
  409 D6F1  F1          	DB	241;	241 :
  410 D6F2  8F          	DB	143;	242 :          SHIFT PF8
  411 D6F3  F3          	DB	243;	243 :
  412 D6F4  F4          	DB	244;	244 :
  413 D6F5  F5          	DB	245;	245 :
  414 D6F6  88          	DB	136;	246 :          SHIFT PF1
  415 D6F7  F7          	DB	247;	247 :
  416 D6F8  F8          	DB	248;	248 :
  417 D6F9  F9          	DB	249;	249 :
  418 D6FA  FA          	DB	250;	250 :
  419 D6FB  FB          	DB	251;	251 :
  420 D6FC  FC          	DB	252;	252 :
  421 D6FD  FD          	DB	253;	253 :
  422 D6FE  FE          	DB	254;	254 :
  423 D6FF  7F          	DB	127;	255 :          SHIFT RUBOUT
  424                   
  248                   	INCLUDE		INIT.MAC
    2                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  24
HARDWARE INITIALIZATION CODE 

    4                   
    5                   ;========================================================
    6                   ;= MOVE CODE TO RUNTIME POSITION                        =
    7                   ;========================================================
    8                   	; ENTRY FROM ROM BOOTSTRAP
    9                   	; THIS CODE IS PLACED IN 380H AND FORWARD AFTER BOOT
   10 D700  F3          	DI			; (* disable interrupts during initialization *)
   11 D701  21 0000     	LD	HL,0		; HL := load_address
   12 D704  11 D480     	LD 	DE,START	; DE := run_time_address
   13 D707  01 2381     	LD	BC,DSPSTR-START+1; BC := code_size
   14 D70A  ED B0       	LDIR			; (* move code *)
   15 D70C  21 D580     	LD	HL,CONVTA	; HL := conv_tab_address;
   16 D70F  11 F680     	LD	DE,OUTCON	; DE := run_time_address;
   17 D712  01 0180     	LD	BC,128+256	; BC := conv_tab_1ength;
   18 D715  ED B0       	LDIR			; (* move conversion tables *)
   19 D717  31 0080     	LD	SP,BUFF		; (* if a interrupt should occure *)
   20 D71A  3A EC25     	LD	A,(CITAB+1)	; (* high byte of int. table address *)
   21 D71D  ED 47       	LD	I,A		; (* load interrupt register *)
   22 D71F  ED 5E       	IM	2		; (* set interrupt mode 2 *)
   23                   ;========================================================
   24                   ;= INITIALIZE Z80 PIO                                   =
   25                   ;= PORT A USED FOR KEYBOARD INPUT                       =
   26                   ;= PORT B USED FOR PARALLEL OUTPUT                      =
   27                   ;========================================================
   28                   
   29 D721  3E 20       INIT:	LD	A,20H		; SET PORT A INTERRUPT VECTOR
   30 D723  D3 12       	OUT	(PIOAC),A	;
   31 D725  3E 22       	LD	A,22H		; SET PORT B INTERRUPT VECTOR
   32 D727  D3 13       	OUT	(PIOBC),A	;
   33 D729  3E 4F       	LD	A,4FH		; SET PORT A MODE (INPUT)
   34 D72B  D3 12       	OUT	(PIOAC),A	;
   35 D72D  3E 0F       	LD	A,0FH		; SET PORT B MODE (OUTPUT)
   36 D72F  D3 13       	OUT	(PIOBC),A	;
   37 D731  3E 83       	LD	A,83H		;
   38 D733  D3 12       	OUT	(PIOAC),A	; ENABLE PORT A INTERRUPT
   39 D735  D3 13       	OUT	(PIOBC),A	; ENABLE PORT B INTERRUPT
   40                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  25
HARDWARE INITIALIZATION CODE 

   42                   
   43                   ;==============================================================
   44                   ;= INITIALIZE Z80 CTC                                         =
   45                   ;= CHANNEL 0 USED AS BAUD RATE GENERATOR FOR SIO CHANNEL A    =
   46                   ;= CHANNEL 1 USED AS BAUD RATE GENERATOR FOR SIO CHANNEL B    =
   47                   ;= CHANNEL 2 USED AS INTERRUPT HANDLER FOR DISPLAY CONTROLLER =
   48                   ;= CHANNEL 3 USED AS INTERRUPT HANDLER FOR DMA CONTROLLER     =
   49                   ;==============================================================
   50                   
   51 D737  3E 00       	LD	A,00H		; SET CTC INTERRUPT VECTOR
   52 D739  D3 0C       	OUT	(CTCCH0),A	;
   53                   
   54 D73B  3A D500     	LD	A,(MODE0)	; SET OPERATING MODE FOR CHANNEL 0
   55 D73E  D3 0C       	OUT	(CTCCH0),A	; MODE:= CLOCK GENERATOR (NO INTERRUPT)
   56 D740  3A D501     	LD	A,(COUNT0)	; SET COUNT FOR CHANNEL 0
   57 D743  D3 0C       	OUT	(CTCCH0),A	;
   58                   
   59 D745  3A D502     	LD	A,(MODE1)	; SET OPERATING MODE FOR CHANNEL 1
   60 D748  D3 0D       	OUT	(CTCCH1),A	; MODE:= CLOCK GENERATOR (NO INTERRUPT)
   61 D74A  3A D503      	LD	A,(COUNT1)	; SET COUNT FOR CHANNEL 1
   62 D74D  D3 0D        	OUT	(CTCCH1),A	;
   63                   
   64 D74F  3A D504     	LD	A,(MODE2)	; SET OPERATING MODE FOR CHANNEL 2
   65 D752  D3 0E       	OUT	(CTCCH2),A	; MODE:= INTERRUPT AFTER 1 COUNT
   66 D754  3A D505     	LD	A,(COUNT2)	; SET COUNT FOR CHANNEL 2
   67 D757  D3 0E       	OUT	(CTCCH2),A	;
   68                   
   69 D759  3A D506     	LD	A,(MODE3)	; SET OPERATING MODE FOR CHANNEL 3
   70 D75C  D3 0F       	OUT	(CTCCH3),A	; MODE:= INTERRUPT AFTER 1 COUNT
   71 D75E  3A D507     	LD	A,(COUNT3)	; SET COUNT FOR CHANNEL 3
   72 D761  D3 0F       	OUT	(CTCCH3),A	;
   73                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  26
HARDWARE INITIALIZATION CODE 

   75                   
   76                   ;==============================================================
   77                   ;= INITIALIZE Z80 CTC 2                                       =
   78                   ;= CHANNEL 0 USED AS INTERRUPT GENERATOR FOR WD1000           =
   79                   ;= CHANNEL 1 NOT USED                                         =
   80                   ;= CHANNEL 2 NOT USED                                         =
   81                   ;= CHANNEL 3 NOT USED                                         =
   82                   ;==============================================================
   83                   
   84 D763  3E 08       	LD	A,08H		; SET CTC INTERRUPT VECTOR
   85 D765  D3 44       	OUT	(CTC2C0),A	;
   86                   
   87 D767  3A D544     	LD	A,(MODE4)	; SET OPERATING MODE FOR CHANNEL 0
   88 D76A  D3 44       	OUT	(CTC2C0),A	; MODE:= INTERRUPT AFTER 1 COUNT
   89 D76C  3A D545     	LD	A,(COUNT4)	; SET COUNT FOR CHANNEL 0
   90 D76F  D3 44       	OUT	(CTC2C0),A	;
   91                   
   92 D771  3A D546     	LD	A,(MODE5)	; SET OPERATING MODE FOR CHANNEL 1
   93 D774  D3 45       	OUT	(CTC2C1),A	; MODE:= CHANNEL RESET
   94                   
   95 D776  3A D546     	LD	A,(MODE5)	; SET OPERATING MODE FOR CHANNEL 2
   96 D779  D3 46       	OUT	(CTC2C2),A	; MODE:= CHANNEL RESET
   97                   
   98 D77B  3A D546     	LD	A,(MODE5)	; SET OPERATING MODE FOR CHANNEL 3
   99 D77E  D3 47       	OUT	(CTC2C3),A	; MODE:= CHANNEL RESET
  100                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  27
HARDWARE INITIALIZATION CODE 

  102                   
  103                   ;==============================================================
  104                   ;= INITIALIZE Z80 SIO                                         =
  105                   ;= CHANNEL A USED FOR READER AND PUNCH                        =
  106                   ;= CHANNEL B USED FOR PRINTER                                 = 
  107                   ;==============================================================
  108                   
  109 D780  21 D508     	LD	HL,PSIOA	; SIO A PROGRAM
  110 D783  06 09       	LD	B,9		; PROGRAM LENGTH
  111 D785  0E 0A       	LD	C,SIOAC		; PORT A CONTROL
  112 D787  ED B3       	OTIR			; PROGRAM SIO CHANNEL A
  113                   
  114 D789  21 D511     	LD	HL,PSIOB	; SIO B PROGRAM
  115 D78C  06 0B       	LD	B,11		; PROGRAM LENGTH  
  116 D78E  0E 0B       	LD	C,SIOBC		; PORT B CONTROL
  117 D790  ED B3       	OTIR			; PROGRAM SIO CHANNEL B
  118                   
  119 D792  DB 0A       	IN	A,(SIOAC)	; READ CHANNEL A, STATUS REGISTER 0
  120 D794  32 DC85     	LD	(RR0_A),A	;
  121 D797  3E 01       	LD	A,1		;
  122 D799  D3 0A       	OUT	(SIOAC),A	;
  123 D79B  DB 0A       	IN	A,(SIOAC)	; READ CHANNEL A, STATUS REGISTER 1
  124 D79D  32 DC86     	LD	(RR1_A),A	;
  125                   
  126 D7A0  DB 0B       	IN	A,(SIOBC)	; READ CHANNEL B, STATUS REGISTER 0
  127 D7A2  32 DC87     	LD	(RR0_B),A	;
  128 D7A5  3E 01       	LD	A,1		;
  129 D7A7  D3 0B       	OUT	(SIOBC),A	;
  130 D7A9  DB 0B       	IN	A,(SIOBC)	; READ CHANNEL B, STATUS REGISTER 1
  131 D7AB  32 DC88     	LD	(RR1_B),A	;
  132                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  28
HARDWARE INITIALIZATION CODE 

  134                   
  135                   ;==============================================================
  136                   ;= INITIALIZE AM9517 DMA                                      =
  137                   ;= CHANNEL 0 - WINCHESTER DISK CONTROLLER                     =
  138                   ;= CHANNEL 1 - FLOPPY DISK CONTROLLER                         =
  139                   ;= CHANNEL 2 - DISPLAY CONTROLLER                             =
  140                   ;= CHANNEL 3 - DISPLAY CONTROLLER                             =
  141                   ;==============================================================
  142                   
  143 D7AE  3E 20       	LD	A,20H		;
  144 D7B0  D3 F8       	OUT	(DMAC),A	; ENTER COMMAND MODE
  145                   
  146 D7B2  3A D51C     	LD	A,(DMODE0)	;
  147 D7B5  D3 FB       	OUT	(DMAMOD),A	; SET CHANNEL 0 MODE
  148                   
  149 D7B7  3A D51E     	LD	A,(DMODE2)	;
  150 D7BA  D3 FB       	OUT	(DMAMOD),A	; SET CHANNEL 2 MODE
  151                   
  152 D7BC  3A D51F     	LD	A,(DMODE3)	;
  153 D7BF  D3 FB       	OUT	(DMAMOD),A	; SET CHANNEL 3 MODE
  154                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  29
HARDWARE INITIALIZATION CODE 

  156                   
  157                   ;==============================================================
  158                   ;= INITIALIZE UPD765 FLOPPY DISK CONTROLLER                   =
  159                   ;==============================================================
  160 D7C1  DB 14       	IN	A,(SW1)		;  
  161 D7C3  E6 80       	AND	80H		;
  162 D7C5  CA D7E1     	JP	Z,IFD0		; IF MINI_DRIVE THEN
  163 D7C8  21 D52F     	LD	HL,INFD0	; BEGIN
  164 D7CB  7E          	LD	A,(HL)		;   CHANGE MAXI DRIVE FORMAT TO MINI
  165 D7CC  FE 08       	CP	8		;
  166 D7CE  C2 D7D3     	JP	NZ,IFDX		;
  167 D7D1  36 10       	LD	(HL),16		;
  168 D7D3  23          IFDX:	INC	HL		;
  169 D7D4  7E          	LD	A,(HL)		;
  170 D7D5  FE 08       	CP	8		;
  171 D7D7  C2 D7DC     	JP	NZ,IFDY		;
  172 D7DA  36 10       	LD	(HL),16		;
  173 D7DC  3E 0F       IFDY:	LD	A,0FH		;   CHANGE HEAD LOAD TIME TO 52 MS
  174 D7DE  32 D526     	LD	(FDPROG+2),A	;
  175 D7E1  DB 04       IFD0:	IN	A,(FDC)		; ELSE:
  176 D7E3  E6 1F       	AND	1FH		; READ STATUS
  177 D7E5  C2 D7E1     	JP	NZ,IFD0		; WAIT TILL FD READY FOR COMMANDS
  178 D7E8  21 D524     	LD	HL,FDPROG	;
  179 D7EB  46          	LD	B,(HL)		;
  180 D7EC  23          IFD1:	INC	HL		;
  181 D7ED  DB 04       IFD2:	IN	A,(FDC)		;
  182 D7EF  E6 C0       	AND	0C0H		;
  183 D7F1  FE 80       	CP	80H		; TEST DIO AND RQM
  184 D7F3  C2 D7ED     	JP	NZ,IFD2		;
  185 D7F6  7E          	LD	A,(HL)		;
  186 D7F7  D3 05       	OUT	(FDD), A	;
  187 D7F9  05          	DEC	B
  188 D7FA  C2 D7EC     	JP	NZ,IFD1		;
  189                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  30
HARDWARE INITIALIZATION CODE 

  191                   
  192                   ;==============================================================
  193                   ;= INITIALIZE DISPLAY DRIVER VARIABLES                        =
  194                   ;==============================================================
  195                   
  196                   	; (* CLEAR DISPLAY BUFFER *)
  197 D7FD  21 F800     	LD	HL,DSPSTR	;
  198 D800  11 F801     	LD	DE,DSPSTR+1	;
  199 D803  01 07CF     	LD	BC,07CFH	;
  200 D806  36 20       	LD	(HL),' '	;
  201 D808  ED B0       	LDIR			;
  202                   
  203                   	; (* CLEAR BACKGROUND FLAGS *)
  204 D80A  21 F500     	LD	HL,BGSTAR	;
  205 D80D  11 F501     	LD	DE,BGSTAR+1	;
  206 D810  01 00FA     	LD	BC,250		;
  207 D813  36 00       	LD	(HL),0		;
  208 D815  ED B0       	LDIR			;
  209                   
  210                   	; (* CLEAR VARIABLES *)
  211 D817  21 FFD1     	LD	HL,CCTAD	;
  212 D81A  11 FFD2     	LD	DE,CCTAD+1	;
  213 D81D  36 00       	LD	(HL),0		;
  214 D81F  01 002E     	LD	BC,0FFFFH-CCTAD ;
  215 D822  ED B0       	LDIR			;
  216                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  31
HARDWARE INITIALIZATION CODE 

  218                   
  219                   ;==============================================================
  220                   ;= INITIALIZE INTEL8275 DISPLAY CONTROLLER                    =
  221                   ;==============================================================
  222                   
  223 D824  3E 00       	LD	A,0		;
  224 D826  D3 01       	OUT	(DSPLC),A	; RESET
  225                   
  226 D828  3A D520     	LD	A,(PAR1)	;
  227 D82B  D3 00       	OUT	(DSPLD),A	; SET CHARACTERS PR. ROW
  228                   
  229 D82D  3A D521     	LD	A,(PAR2)	;
  230 D830  D3 00       	OUT	(DSPLD),A	; SET ROWS PR. FRAME
  231                   
  232 D832  3A D522     	LD	A,(PAR3)	; SET LINES PR. CHARACTER AND
  233 D835  D3 00       	OUT	(DSPLD),A	; UNDERLINE POSITION
  234                     
  235 D837  3A D523     	LD	A,(PAR4)	; SET CURSOR FORMAT
  236 D83A  D3 00       	OUT	(DSPLD),A	;
  237                   
  238 D83C  3E 80        	LD	A,80H		; LOAD CURSOR POSITION COMMAND
  239 D83E  D3 01       	OUT	(DSPLC),A	;
  240 D840  3E 00       	LD	A,0		;
  241 D842  D3 00       	OUT	(DSPLD),A	; SET CURSOR X POSITION = 0
  242 D844  D3 00       	OUT	(DSPLD),A	; SET CURSOR Y POSITION = 0
  243                   
  244 D846  3E E0       	LD	A,0E0H		; PRESET COUNTERS
  245 D848  D3 01       	OUT	(DSPLC),A	;
  246                   
  247 D84A  3E 23       	LD	A,23H		;
  248 D84C  D3 01       	OUT	(DSPLC),A	; START DISPLAY
  249                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  32
HARDWARE INITIALIZATION CODE 

  251                   
  252                   ;==============================================================
  253                   ;= INITIALIZE RUN TIME VARIABLES                              =
  254                   ;==============================================================
  255 D84E  11 EE80     	LD	DE,ENDPRG	; GET END PROGRAM ADR.
  256 D851  21 F500     	LD	HL,BGSTAR	; GET LAST PROGRAM ADR. + 1
  257 D854  A7          	AND	A		;
  258 D855  ED 52       	SBC	HL,DE		;
  259 D857  4D          	LD	C,L		;
  260 D858  44          	LD	B,H		;
  261 D859  21 EE81     	LD	HL,ENDPRG+1	;
  262 D85C  EB          	EX	DE,HL		;
  263 D85D  36 00       	LD	(HL),00		;
  264 D85F  ED B0       	LDIR			; CLEAR ALL VARIABLES
  265                   
  266 D861  3A D50E     	LD	A,(PSIOA+6)	;
  267 D864  E6 60       	AND	60H		;
  268 D866  32 DA34     	LD	(WR5A),A	; M(SIOA_WR5):=SIOA.WR5.BITS_PR_CHAR;
  269                   
  270 D869  3A D519     	LD	A,(PSIOB+8)	;
  271 D86C  E6 60       	AND	60H		;
  272 D86E  32 DA35     	LD	(WR5B),A	; M(SIOB_WR5):=SIOB.WR5.BITS_PR_CHAR;
  273                   
  274 D871  3A D52C     	LD	A,(XYFLG)	;
  275 D874  32 DA33     	LD	(ADRMOD),A	;
  276                   
  277 D877  2A D52D     	LD	HL,(STPTIM)	;
  278 D87A  22 FFE7     	LD	(FDTIMO),HL	;
  279                   
  280 D87D  3E FF       	LD	A,0FFH		;
  281 D87F  32 F34F     	LD	(FL_FLG),A	; FLOPPY_BUSY:=FALSE
  282                   
  283 D882  CD D96F     	CALL	IDT		; initilize disk tables
  284                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  33
HARDWARE INITIALIZATION CODE 

  286                   
  287                   ;==============================================================================
  288                   ;= CHECK HARD DISK ONLINE                                                     =
  289                   ;==============================================================================
  290                   
  291 D885  FB          INI050:	EI			;
  292 D886  3E 01       	LD	A,1		;
  293 D888  32 F34E     	LD	(HD_OFL),A	; INIT HDDSK OFFLINE
  294 D88B  06 01       INI060:	LD	B,1		;   STEPPING RATE (2,5 MILL.SECS)
  295 D88D  3E 20       	LD	A,20H		;   SIZE,DRIVE,HEAD(00=256 BYTES/SECT 20=512)
  296 D88F  CD E93D     	CALL	HRDRST		;   RESTORE
  297 D892  01 F000     	LD	BC,0F000H	;   SET COUNTER
  298 D895  3A F34D     HD_TMR:	LD	A,(HD_FLG)	;   WHILE NOT COMPLETE OR NOT TIMEOUT DO
  299 D898  B7          	OR	A		;     CHECK FLAG
  300 D899  20 08       	JR	NZ,HD_RDY	;     IF READY THEN COMPLETE=TRUE;
  301 D89B  0B          	DEC	BC		;
  302 D89C  78          	LD	A,B		;
  303 D89D  B1          	OR	C		;     IF COUNT = 0 THEN TIMEOUT=TRUE;
  304 D89E  20 F5       	JR	NZ,HD_TMR	;   ENDWHILE;
  305 D8A0  C3 D91A     	JP	HD_OFF		;
  306                   
  307 D8A3  3A F32A     HD_RDY:	LD	A,(ERFLAG)	;   IF HD READY
  308 D8A6  B7          	OR	A		;     IF ERRORFLAG <> 0 THEN
  309 D8A7  3E 00       	LD	A,0		;       RESET ERROR FLAG
  310 D8A9  32 F32A     	LD	(ERFLAG),A	;       RESET HD INTERRUPT FLAG
  311 D8AC  32 F34D     	LD	(HD_FLG),A	;       PRINT WAITING MESSAGE
  312 D8AF  F5          	PUSH	AF		;       GOTO ISSUE RESTORE COMMAND
  313 D8B0  21 DAB0     	LD	HL,WMESS	;
  314 D8B3  CD DADD     	CALL	PRMSG		;
  315 D8B6  AF          	XOR	A		;
  316 D8B7  32 DAB0     	LD	(WMESS),A	;
  317 D8BA  F1          	POP	AF		;
  318 D8BB  C2 D88B     	JP	NZ,INI060	;
  319 D8BE  AF          	XOR	A		;     ELSE
  320 D8BF  32 F34D     	LD	(HD_FLG),A	;        RESET HD-ITRFLAG
  321 D8C2  32 F34E     	LD	(HD_OFL),A	;        HARDDISK OFFLINE = FALSE
  322                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  34
HARDWARE INITIALIZATION CODE 

  324                   
  325                   ;=====================================================================
  326                   ;=  HARD DISK ONLINE  -->  READ CONFIGURATION SECTOR                 =
  327                   ;=====================================================================
  328                   
  329 D8C5  01 0002     	LD	BC,2		;
  330 D8C8  CD E2C9     	CALL	SELD		;       SELECT DRIVE C:
  331 D8CB  01 0000     	LD	BC,0		;
  332 D8CE  CD E372     	CALL	SETT		;       SET TRACK = 0
  333 D8D1  01 007C     	LD	BC,124		;       SET SECTOR = 124 (LAST SECTOR -3
  334 D8D4  CD E378     	CALL	SETS		;       ON 2ND PAGE)
  335 D8D7  01 0080     	LD	BC,080H		;
  336 D8DA  CD E37E     	CALL	SETD		;       SET DMA ADDRESS
  337 D8DD  CD E387     	CALL	XREAD		;       READ CONFIGURATION SECTOR
  338 D8E0  B7          	OR	A		;IF ERROR THEN
  339 D8E1  28 0D       	JR	Z,HDOK		;       PRINT MESSAGE
  340 D8E3  21 DAB9     	LD	HL,HDERR	;       MAX DRIVE = 1
  341 D8E6  CD DADD     	CALL	PRMSG		;       REMOVE CLEAR SCREEN FROM BOOTM
  342 D8E9  3E 0D       	LD	A,13		;
  343 D8EB  32 DA8D     	LD	(SIGNON),A	;
  344 D8EE  18 2A       	JR	HD_OFF		; ELSE
  345                   
  346 D8F0  11 D531     HDOK:	LD	DE,INFD2	;   MOVE CONFIGURATION READ TO DISK CONF AREA
  347 D8F3  21 0080     	LD	HL,080H		;   (* READ BUFFER *)
  348 D8F6  01 0013     	LD	BC,19		;   (* NO OF BYTES *)
  349 D8F9  ED B0       	LDIR			;
  350                   
  351                   ;=====================================================================
  352                   ;= CONFIGURATION SECTOR READ  --> CHECK CONFIGURATION                =
  353                   ;=====================================================================
  354                   
  355 D8FB  21 D531     CHK_CON:LD	HL,INFD2	; IF NOT CONF DISK THEN (FORMAT <> 20H AND 28H)
  356 D8FE  7E          	LD	A,(HL)		;
  357 D8FF  FE 20       	CP	20H		;    FORMAT C: := FLOPPY FORMAT+24
  358 D901  28 20       	JR	Z,INI61		;    FORMAT D: := FFH (* NOT USED *)
  359 D903  FE 28       	CP	28H		;    NUMBER FLS:= 02
  360 D905  28 1C       	JR	Z,INI61		;
  361 D907  3A DA37     	LD	A,(FD0)		;
  362 D90A  C6 18       	ADD	A,24		;
  363 D90C  77          	LD	(HL),A		;
  364 D90D  23          	INC	HL		;
  365 D90E  36 FF       	LD	(HL),0FFH	;
  366                   
  367 D910  21 D540     	LD	HL,NDTAB	;
  368 D913  36 02       	LD	(HL),2		;
  369 D915  23          	INC	HL		;
  370 D916  36 01       	LD	(HL),1		;
  371 D918  18 09       	JR	INI61		;
  372                   
  373                   ;=====================================================================
  374                   ;= HARD DISK OFFLINE OR READ ERROR FROM HARD DISK                    =
  375                   ;=====================================================================
  376                   
  377 D91A  3E FF       HD_OFF:	LD	A,0FFH		; FORMAT D: := FFH (* NOT USED *)
  378 D91C  32 D531     	LD	(INFD2),A
  379 D91F  AF          	XOR	A		; SET BOOT DRIVE TO A:
  380 D920  32 DA47     	LD	(BOOTD),A
  381                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  35
HARDWARE INITIALIZATION CODE 

  382                   ;=====================================================================
  383                   ;= ???                                                               =
  384                   ;=====================================================================
  385                   
  386 D923  CD D96F     INI61:	CALL	IDT		;
  387 D926  21 EB9E     	LD	HL,DPBASE+32+10	;
  388 D929  22 D96D     	LD	(BOOTDPB),HL	;
  389 D92C  21 DA39     	LD	HL,FD2		;
  390 D92F  E5          	PUSH	HL		;
  391 D930  E1          INI62:	POP	HL		;
  392 D931  E5          	PUSH	HL		;
  393 D932  CD D99A     	CALL	INI66		;
  394 D935  E1          	POP	HL		;
  395 D936  23          	INC	HL		;
  396 D937  E5          	PUSH	HL		;
  397 D938  7E          	LD	A,(HL)		;
  398 D939  FE FF       	CP	0FFH		;
  399 D93B  20 F3       	JR	NZ,INI62	;
  400                   
  401 D93D  E1          	POP	HL		;
  402 D93E  01 001B     	LD	BC,27		;
  403 D941  21 DA3A     	LD	HL,FD3		;
  404 D944  11 EA94     	LD	DE,TRKOFF+8	;
  405                   
  406 D947  7E          INI63:	LD	A,(HL)		;
  407 D948  E5          	PUSH	HL		;
  408 D949  E6 F8       	AND	0F8H		;
  409 D94B  21 0029     	LD	HL,029H		;
  410 D94E  FE 30       	CP	030H		;
  411 D950  CC D9BC     	CALL	Z,INI70		;
  412 D953  21 0052     	LD	HL,052H		;
  413 D956  FE 38       	CP	038H		;
  414 D958  CC D9BC     	CALL	Z,INI70		;
  415 D95B  21 00A5     	LD	HL,0A5H		;
  416 D95E  FE 40       	CP	040H		;
  417 D960  CC D9BC     	CALL	Z,INI70		;
  418 D963  E1          	POP	HL		;
  419 D964  7E          	LD	A,(HL)		;
  420 D965  23          	INC	HL		;
  421 D966  FE FF       	CP	0FFH		;
  422 D968  20 DD       	JR	NZ,INI63	;
  423 D96A  C3 DA00     	JP	BIOS		;
  424                   
  425 D96D  0000        BOOTDPB:DW	0
  426                   
  427                   ;==============================================================================
  428                   ;= 	INITIALIZE DISK TABLES                                                =
  429                   ;= 	move floppy/hard disk format array to runtime position                =
  430                   ;=	count the number of atcive drives                                     =
  431                   ;==============================================================================
  432                   ;
  433 D96F  0E 00       IDT:	LD	C,0		;
  434 D971  21 D52F     	LD	HL,INFD0	;
  435 D974  11 DA37     	LD	DE,FD0		;
  436 D977  7E          IDT1:	LD	A,(HL)		;
  437 D978  FE FF       	CP	0FFH		;
  438 D97A  CA D984     	JP	Z,IDT2		;
  439 D97D  12          	LD	(DE),A		;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  36
HARDWARE INITIALIZATION CODE 

  440 D97E  0C          	INC	C		;
  441 D97F  13          	INC	DE		;
  442 D980  23          	INC	HL		;
  443 D981  C3 D977     	JP	IDT1		;
  444                   
  445 D984  79          IDT2:	LD	A,C		;
  446 D985  3D          	DEC	A		;
  447 D986  32 F334     	LD	(DRNO),A	;
  448 D989  3E 02       	LD	A,2		;
  449 D98B  32 F335     	LD	(UNK1),A	;
  450 D98E  21 D541     	LD	HL,NDT1		;
  451 D991  11 F336     	LD	DE,UNK2		;
  452 D994  01 0003     	LD	BC,3		;
  453 D997  ED B0       	LDIR			;
  454 D999  C9          	RET			;
  455                   
  456                   ;==============================================================================
  457                   ;=	????                                                                  =
  458                   ;==============================================================================
  459                   
  460 D99A  11 000F     INI66:	LD	DE,15		;
  461 D99D  06 08       	LD	B,8		;
  462 D99F  7E          	LD	A,(HL)		;
  463 D9A0  E6 F8       	AND	0F8H		;
  464 D9A2  21 EA05     	LD	HL,DPB0		;
  465 D9A5  B7          	OR	A 		;
  466 D9A6  28 04       	JR	Z,INI68		;
  467 D9A8  19          INI67:	ADD	HL,DE		;
  468 D9A9  90          	SUB	B		;
  469 D9AA  20 FC       	JR	NZ,INI67	;
  470 D9AC  ED 5B D96D  INI68:	LD	DE,(BOOTDPB)	;
  471 D9B0  EB          	EX	DE,HL		;
  472 D9B1  73          	LD	(HL),E		;
  473 D9B2  23          	INC	HL		;
  474 D9B3  72          	LD	(HL),D		;
  475 D9B4  11 000F     	LD	DE,15		;
  476 D9B7  19          	ADD	HL,DE		;
  477 D9B8  22 D96D     	LD	(BOOTDPB),HL	;
  478 D9BB  C9          	RET
  479                   
  480                   ;==============================================================================
  481                   ;=	????                                                                  =
  482                   ;==============================================================================
  483                   
  484 D9BC  09          INI70:	ADD	HL,BC		;
  485 D9BD  EB          	EX	DE,HL		;
  486 D9BE  73          	LD	(HL),E		;
  487 D9BF  23          	INC	HL		;
  488 D9C0  72          	LD	(HL),D		;
  489 D9C1  23          	INC	HL		;
  490 D9C2  EB          	EX	DE,HL		;
  491 D9C3  44          	LD	B,H		;
  492 D9C4  4D          	LD	C,L		;
  493 D9C5  C9          	RET			;
  494                   
  249                   
  250 D9C6    003A      	DS	(BIOS-$)	; ALIGN TO DA00H
  251                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  37
BIOS    Z80

  252                   	INCLUDE		CPMBOOT.MAC
INPUT CONVERSION TABLE Z80ASM 1.32 Page  38
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

    3                   
    4                   ;==============================================================================
    5                   ;= THE FOLLOWING VARIABLES SHOULD NOT BE CHANGED AS EXTERNAL                  =
    6                   ;= PROGRAMS DEPENDS ON THEIR POSITION AND VALUES                              =
    7                   ;==============================================================================
    8                   
    9 DA00  C3 DB74     	JP	BOOT
   10 DA03  C3 DBBD     WBOTE:	JP	WBOOT
   11 DA06  C3 EC28     	JP	CONST
   12 DA09  C3 EC2C     	JP	CONIN
   13 DA0C  C3 E205     	JP	CONOUT
   14 DA0F  C3 DC8D     	JP	LIST
   15 DA12  C3 DCE0     	JP	PUNCH
   16 DA15  C3 DCD0     	JP	READER
   17 DA18  C3 E654     	JP	XHOME
   18 DA1B  C3 E2C9     	JP	SELD
   19 DA1E  C3 E372     	JP	SETT
   20 DA21  C3 E378     	JP	SETS
   21 DA24  C3 E37E     	JP	SETD
   22 DA27  C3 E387     	JP	XREAD
   23 DA2A  C3 E39B     	JP	XWRITE
   24 DA2D  C3 DC89     	JP	STLIST
   25 DA30  C3 E384     	JP	SECTRA
   26                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  39
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

   28                   
   29 DA33  00          ADRMOD:	DB	0		; ADDRESS MODE = XY
   30 DA34  00          WR5A:	DB	0		;
   31 DA35  00          WR5B:	DB	0		;
   32 DA36  00          MTYPE:	DB	0		; MASCHINE TYPE: 0=RC700,   1=RC850
   33                   				;                2=ITT3290, 3=RC703
   34 DA37  FF          FD0:	DB	255		;    MAXI                MINI 96 tpi
   35 DA38  FF          FD1:	DB	255		; 0: SS,128 B/S,25 S/T      not used
   36 DA39  FF          FD2:	DB	255		; 8: DD,512 B/S,30 S/T  *DD,512 B/S,20 S/T
   37 DA3A  FF          FD3:	DB	255		;16:*SS,128 B/S,26 S/T   DD,512 B/S,20 S/T
   38 DA3B  FF          FD4:	DB	255		;24:*DD,2S6 B/S,26 S/T !!DD,512 B/S,30 S/T
   39 DA3C  FF          FD5:	DB	255		;32:*WINCHESTER DISK 0,9 MB UNIT 512 B/S
   40 DA3D  FF          FD6:	DB	255		;40:*WINCHESTER DISK 0,3 MB UNIT 512 B/S
   41 DA3E  FF          FD7:	DB	255		;4B:*WINCHESTER DISK 1,9 MB UNIT 512 B/S
   42 DA3F  FF          FD8:	DB	255		;56:*WINCHESTER DISK 3,9 MB UNIT 512 B/S
   43 DA40  FF          FD9:	DB	255		;64:*WINCHESTER DISK 7,9 MB UNIT 512 B/S
   44 DA41  FF          FD10:	DB	255		;255: NOT USED
   45 DA42  FF          FD11:	DB	255		;* MEANS THAT NO SECTOR TRANSLATION IS DONE
   46 DA43  FF          FD12:	DB	255		;
   47 DA44  FF          FD13:	DB	255		;
   48 DA45  FF          FDI4:	DB	255		;
   49 DA46  FF          FD15:	DB	255		;
   50 DA47  00          BOOTD:	DB	0		; 0 =>    COLD AND WARM BOOT FROM FLOPPY DISK
   51                   				; <> 0 =>  -    -   -    -     -  HARD DISK
   52                   				; Opdate in CONFI area, copyed under runtime
   53                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  40
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

   55                   
   56 DA48    0002      	DS	2		; RESERVED FOR FUTURE USE
   57 DA4A  C3 E741     	JP	WFITR		; ENTRY USED BY FORMAT UTILITY
   58 DA4D  C3 DCCC     	JP	READS		; READER STATUS
   59 DA50  C3 DB16     	JP	LINSEL		; LINE SELECTION
   60 DA53  C3 DAF3     	JP	EXIT		; EXIT ROUTINE
   61 DA56  C3 DB00     	JP	CLOCK		; REAL TIME CLOCK
   62 DA59  C3 E950     	JP	HRDFMT		; FORMAT HARD DISK TRACK
   63                   
   64 DA5C    0010      	DS	16		; RESERVED FOR FUTURE USE
   65                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  41
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

   67                   
   68 DA6C  00 00 00    	DB	0,0,0		; ???
   69                   
   70 DA6F  0000        PCHSAV: DW	0		; SAVED ADDRESS OF BDOS PATCH
   71                   
   72 DA71  0D 0A       BOTMSG:	DB	13,10
   73 DA73  44 69 73 6B 	DB	'Disk read error - reset'
   74 DA8A  0D 0A 00    	DB	13,10,0
   75                   
   76 DA8D  0C          SIGNON:	DB	12
   77 DA8E  52 43 37 30 	DB	'RC700 56k CP/M vers.2.2 rel.2.3'
   78 DAAD  0D 0A 00    	DB	13,10,0
   79                   
   80 DAB0  0C 57 61 69 WMESS:	DB	12,'Waiting',0
   81                   
   82 DAB9  0C 43 61 6E HDERR:	DB	12,'Cannot read configuration record',13,10,0
   83                   
   84 DADD  7E          PRMSG:	LD	A,(HL)		; PROCEDURE PRINT_MESSAGE;
   85 DADE  B7          	OR	A		; WHILE CHARACTER<>0 DO
   86 DADF  C8          	RET	Z		;   WRITECHAR(CONSOLE);
   87 DAE0  E5          	PUSH	HL		;
   88 DAE1  4F          	LD	C,A		;
   89 DAE2  CD E205     	CALL	CONOUT		;
   90 DAE5  E1          	POP	HL		;
   91                   
   92 DAE6  23          	INC	HL		;
   93 DAE7  C3 DADD     	JP	PRMSG		;
   94                   
   95 DAEA  21 DA71     BOTERR:	LD	HL,BOTMSG	; PROCEDURE BOOT_ERROR;
   96 DAED  CD DADD     	CALL	PRMSG		; BEGIN
   97 DAF0  C3 DAF0     BOPLP:	JP	BOPLP		;   PRINT_MESSAGE;
   98                   				;   WHILE TRUE DO;
   99                   				; END;
  100                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  42
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

  102                   
  103 DAF3  3E C3       EXIT:	LD	A,0C3H		; PROCEDURE DEF_EXIT_ROUTINE;
  104 DAF5  32 FFE5     	LD	(EXROUT),A	;
  105 DAF8  22 FFE6     	LD	(EXROUT+1),HL	; DEFINE ADDRESS
  106 DAFB  EB          	EX	DE,HL		;
  107 DAFC  22 FFDF     	LD	(EXCNT0),HL	; DEFINE COUNT
  108 DAFF  C9          	RET			;
  109                   
  110 DB00  F3          CLOCK:	DI			;
  111 DB01  B7          	OR	A		; PROCEDURE CLOCK;
  112 DB02  CA DB0E     	JP	Z,CLOCK1	; BEGIN
  113 DB05  ED 5B FFFC  	LD	DE,(RTC0)	;   IF A<>O THEN
  114 DB09  2A FFFE     	LD	HL,(RTC2)	;     READ_CLOCK
  115 DB0C  FB          	EI			;
  116 DB0D  C9          	RET			;   ELSE
  117 DB0E  ED 53 FFFC  CLOCK1:	LD	(RTC0),DE	;     SET_CLOCK;
  118 DB12  22 FFFE     	LD	(RTC2),HL	; END;
  119                   ;	EI			;
  120 DB15  C9          	RET			;
  121                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  43
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

  123                   
  124 DB16  C6 0A       LINSEL:	ADD	A,SIOAC		; PROCEDURE LINE_SELECT;
  125 DB18  4F          	LD	C,A		; BEGIN
  126 DB19  F3          RESLIN:	DI			; (RELEASE LINE)
  127 DB1A  3E 01       	LD	A,1		; (SELECT READ REG. 1)
  128 DB1C  ED 79       	OUT	(C),A		;
  129 DB1E  ED 78       	IN	A,(C)		; (READ REG. 1)
  130 DB20  FB          	EI			;
  131 DB21  E6 01       	AND	00000001B	;
  132 DB23  28 F4       	JR	Z,RESLIN	; (LOOP END)
  133 DB25  16 05       	LD	D,5		;   (* A: 0=TERMINAL PORT, 1=PRINTER PORT *)
  134 DB27  3E 00       	LD	A,0		;   (* B: 0=RELASE, 1=LINE A, 2=LINE B *)
  135 DB29  CD DB53     	CALL	SETSIG		;   DTR:=FALSE;
  136 DB2C  05          	DEC	B		;   RTS:=FALSE;
  137 DB2D  F8          	RET	M		;   IF B<>O THEN
  138 DB2E  CB 20       	SLA	B		;   BEGIN
  139 DB30  B0          	OR	B		;     DTR:=FALSE;
  140 DB31  CD DB53     	CALL	SETSIG		;     RTS:=(B=2);
  141 DB34  F6 80       	OR	80H		;     (* WAIT AT LEAST 100 NS *)
  142 DB36  CD DB53     	CALL	SETSIG		;     DTR:=TRUE;
  143 DB39  21 0002     	LD	HL,2		;     (* WAIT 1-2 TIMER PERIODS *)
  144 DB3C  CD E648     	CALL	WAITD		;     IF CTS THEN
  145 DB3F  79          	LD	A,C		;       A:=0FFH
  146 DB40  FE 0A       	CP	SIOAC		;     ELSE
  147 DB42  3A DC85     	LD	A,(RR0_A)	;     BEGIN
  148 DB45  CA DB4B     	JP	Z,LINSE1	;       A:=0;
  149 DB48  3A DC87     	LD	A,(RR0_B)	;       DTR:=FALSE;
  150 DB4B  E6 20       LINSE1:	AND	20H		;       RTS:=FALSE;
  151 DB4D  CA DB53     	JP	Z,SETSIG	;     END;
  152 DB50  3E FF       	LD	A,0FFH		;   END;
  153 DB52  C9          	RET			; END;
  154                   
  155 DB53  F3          SETSIG:	DI			;
  156 DB54  ED 51       	OUT	(C),D		;
  157 DB56  ED 79       	OUT	(C),A		;
  158 DB58  FB          	EI			;
  159 DB59  C9          	RET			;
  160                   
  161 DB5A  AF          PCHBDS:	XOR	A		; PERFORM TEMP PATCH TO BDOS
  162 DB5B  32 D84C     	LD	(PATCH1),A	;
  163 DB5E  2A D89A     	LD	HL,(PATCH2)	;
  164 DB61  22 DA6F     	LD	(PCHSAV),HL	; SAVE FOR LATER RESTORE BY PCHFIX
  165 DB64  21 DB6B     	LD	HL,PCHFIX	;
  166 DB67  22 D89A     	LD	(PATCH2),HL	; SAVE ADDRESS  
  167 DB6A  C9          	RET			; RETURN PROM PROC.
  168                   
  169 DB6B  E5          PCHFIX:	PUSH	HL		; RESET DISK SYS CALLED IF WBOOT FROM HD
  170 DB6C  2A DA6F     	LD	HL,(PCHSAV)	;  GET SAVED VALUE
  171 DB6F  22 D89A     	LD	(PATCH2),HL	;  INSERT IT INTO BDOS
  172 DB72  E1          	POP	HL		; RETURN
  173 DB73  C9          	RET			;
  174                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  44
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

  176                   
  177 DB74  31 0080     BOOT:	LD	SP,BUFF		; USE DMA BUFFER AS STACK
  178 DB77  21 DA8D     	LD	HL,SIGNON	;
  179 DB7A  CD DADD     	CALL	PRMSG		;
  180 DB7D  AF          	XOR	A		; INIT. CURR. LOGGED DISK = A:
  181 DB7E  32 0004     	LD	(CDISK),A	;
  182 DB81  32 F350     	LD	(WBFLAG),A	;       WARMBOOTFLAG:=0
  183 DB84  3A DA47     	LD	A,(BOOTD)	;
  184 DB87  B7          	OR	A		; IF HARD DISK USED AND ONLINE THEN
  185 DB88  CA DB90     	JP	Z,BOOT04	;
  186 DB8B  3E 02       	LD	A,2		;   CURR. LOGGED DISK = 2
  187 DB8D  32 0004     	LD	(CDISK),A	;
  188 DB90  AF          BOOT04:	XOR	A		;
  189 DB91  32 F321     	LD	(HSTACT),A	;
  190 DB94  32 F32A     	LD	(ERFLAG),A	;
  191 DB97  32 F322     	LD	(HSTWRT),A	;
  192 DB9A  DB 14       	IN	A,(SW1)		;
  193 DB9C  E6 80       	AND	80H		;
  194 DB9E  CA DBBD     	JP	Z,WBOOT		; IF MAXI DRIVE THEN WARM BOOT
  195 DBA1  3A F334     	LD	A,(DRNO)	; ELSE
  196 DBA4  FE 02       	CP	2		;   IF MAX DRIVE < 2 THEN
  197 DBA6  D2 DBBA     	JP	NC,BOOT1	;
  198 DBA9  0E 01       	LD	C,1		;
  199 DBAB  CD E2C9     	CALL	SELD		;
  200 DBAE  CD E654     	CALL	XHOME		;
  201 DBB1  78          	LD	A,B		;
  202 DBB2  E6 10       	AND	10H		;
  203 DBB4  3E 00       	LD	A,0		;
  204 DBB6  C2 DBBA     	JP	NZ,BOOT1	;     IF online(drive1) THEN
  205 DBB9  3C          	INC	A		;       max_drive_no := 1
  206 DBBA  32 F334     BOOT1:	LD	(DRNO),A	;     ELSE max_drive_no := 0;
  207                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  45
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

  209                   
  210 DBBD  FB          WBOOT:	EI			;
  211 DBBE  0E 00       	LD	C,0		; SELECT DRIVE 0
  212 DBC0  3A DA47     	LD	A,(BOOTD)	; IF BOOTD <> 0 THEN (* => HARD DISK ONLINE *)
  213 DBC3  B7          	OR	A		;
  214 DBC4  28 03       	JR	Z,WBOOT5	;
  215 DBC6  3E 02       	LD	A,2		;    WBOOT(DISK C)
  216 DBC8  4F          	LD	C,A		;
  217 DBC9  CD E2C9     WBOOT5:	CALL	SELD		; ENDIF;
  218 DBCC  AF          	XOR	A		;
  219 DBCD  32 F323     	LD	(UNACNT),A	;
  220 DBD0  32 0003     	LD	(IOBYTE),A	;
  221 DBD3  32 F339     	LD	(DSKNO),A	;
  222 DBD6  32 EC26     	LD	(KEYFLG),A	; KEY_BUSY:=TRUE;
  223 DBD9  CD E654     	CALL	XHOME		;
  224 DBDC  31 0080     	LD	SP,BUFF		; SP:=DMA_BUFFER;
  225 DBDF  01 C400     	LD	BC,CPMB		;
  226 DBE2  CD E37E     	CALL	SETD		; DMA_ADDRESS:=CPM_BASE;
  227 DBE5  01 0001     	LD	BC,1		;
  228 DBE8  CD E372     	CALL	SETT		; TRACK:=1;
  229 DBEB  01 0000     	LD	BC,0		;
  230 DBEE  CD E378     	CALL	SETS		; SECTOR:=0;
  231                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  46
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

  233                   
  234 DBF1  C5          RDSEC:	PUSH	BC		; REPEAT
  235 DBF2  CD E387     	CALL	XREAD		;   READ(TRACK,SECTOR);
  236 DBF5  B7          	OR	A		;
  237 DBF6  C2 DAEA     	JP	NZ,BOTERR	;
  238 DBF9  2A F32E     	LD	HL,(DMAADR)	;
  239 DBFC  11 0080     	LD	DE,128		;
  240 DBFF  19          	ADD	HL,DE		;
  241 DC00  44          	LD	B,H		;
  242 DC01  4D          	LD	C,L		;
  243 DC02  CD E37E     	CALL	SETD		;   DMA_ADDRESS:=DMA_ADDRESS + 128;
  244 DC05  C1          	POP	BC		;
  245 DC06  03          	INC	BC		;
  246 DC07  CD E378     	CALL	SETS		;   SECTOR:=SECTOR + 1;
  247 DC0A  79          	LD	A,C		;
  248 DC0B  FE 2C       	CP	NSECTS		;
  249 DC0D  C2 DBF1     	JP	NZ,RDSEC	; UNTIL SECTOR = NSECTS;
  250 DC10  01 0080     	LD	BC,BUFF		; DMA_ADDRESS:=BUFF;
  251 DC13  CD E37E     	CALL	SETD		;
  252 DC16  3E C3       	LD	A,0C3H		;
  253 DC18  32 0000     	LD	(0),A		; M(0):=OPCODE(JP);
  254 DC1B  21 DA03     	LD	HL,WBOTE	;
  255 DC1E  22 0001     	LD	(1),HL		; M(1..2):=ADDRESS(WBOOTE);
  256 DC21  32 0005     	LD	(5),A		; M(5):=OPCODE(JP);
  257 DC24  21 CC06     	LD	HL,BDOS		;
  258 DC27  22 0006     	LD	(6),HL		; M(6..7):=ADDRESS(BDOS);
  259 DC2A  3A 0004     	LD	A,(CDISK)	;
  260 DC2D  E6 0F       	AND	00001111B	; REMOVE USER BITS
  261 DC2F  4F          	LD	C,A		; C:=CUR_DISK;
  262 DC30  3A DA47     	LD	A,(BOOTD)	;
  263 DC33  B9          	CP	C		; IF CUR.LOG.DISK =BOOTDISK THEN OK
  264 DC34  28 1C       	JR	Z,LWBT		;
  265 DC36  CD E2C9     	CALL	SELD		; ELSE CHECK
  266 DC39  7C          	LD	A,H		;      IF READING POSSIBLE
  267 DC3A  B5          	OR	L		;
  268 DC3B  28 0F       	JR	Z,SELERR	;
  269 DC3D  01 0002     	LD	BC,2		;
  270 DC40  CD E372     	CALL	SETT		;
  271 DC43  CD E378     	CALL	SETS		;
  272 DC46  CD E387     	CALL	XREAD		;
  273 DC49  B7          	OR	A		;
  274 DC4A  28 06       	JR	Z,LWBT		;
  275 DC4C  3A DA47     SELERR: LD	A,(BOOTD)	; IF BAD READ THEN CUR.LOG.DSK:=BOOTD
  276 DC4F  32 0004     	LD	(CDISK),A	;
  277                   
  278 DC52  3A 0004     LWBT:	LD	A,(CDISK)	;
  279 DC55  E6 0F       	AND	00001111B	; REMOVE USER BITS
  280 DC57  4F          	LD	C,A		;
  281 DC58  FE 02       	CP	2		;
  282 DC5A  D4 DB5A     	CALL	nc,PCHBDS	; PATCH BDOS if current drive on hard disk
  283 DC5D  CD E2C9     	CALL	SELD		;
  284 DC60  3A 0004     	LD	A,(CDISK)	;
  285 DC63  4F          	LD	C,A		;
  286 DC64  21 F350     GOCPM:	LD	HL,WBFLAG	;
  287 DC67  7E          	LD	A,(HL)		;
  288 DC68  36 01       	LD	(HL),01		; IF NOT WARMBOOT THEN GOTO CCP
  289 DC6A  B7          	OR	A		;
  290 DC6B  28 10       	JR	Z,GOCCP		;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  47
CP/M BIOS JUMP TABLE AND BIOS EXTENTIONS 

  291 DC6D  3A C407     	LD	A,(CPMB+7)	; ELSE
  292 DC70  B7          	OR	A		;   GET LENGTH OF CCP INPUT BUFFER
  293 DC71  28 0A       	JR	Z,GOCCP		;   IF LENGTH=0 THEN GO TO CCP
  294 DC73  21 C409     	LD	HL,CPMB+9	;   ELSE
  295 DC76  85          	ADD	A,L		;      IF NOT CW_FLAG THEN
  296 DC77  6F          	LD	L,A		;
  297 DC78  7E          	LD	A,(HL)		;
  298 DC79  B7          	OR	A		;
  299 DC7A  CA C403     	JP	Z,CCPCLR	;                        GO TO CCPCLEAR
  300 DC7D  C3 C400     GOCCP:	JP	CPMB		;         ELSE GOTO CCP
  301                   
  253                   	INCLUDE		SIO.MAC
    2                   ;================================================
    3                   ;= Z80 SIO DRIVER                               =
    4                   ;================================================
    5                   
    6 DC80  FF          PRTFLG:	DB	0FFH	; PRINTER BUSY FLAG (0=BUSY)
    7 DC81  FF          RDRFLG:	DB	0FFH	; READER BUSY FLAG (0=BUSY)
    8 DC82  FF          PTPFLG:	DB	0FFH	; PUNCH BUSY FLAG (0=BUSY)
    9                   
   10 DC83  00          CHARA:	DB	000H	; SIO CHANNEL A RECEIVE BUFFER
   11 DC84  00          CHARB:	DB	000H	; SIO CHANNEL B RECEIVE BUFFER
   12                   
   13 DC85  00          RR0_A:	DB	000H	; SIO CH. A READ REGISTER 0
   14 DC86  00          RR1_A:	DB	000H	; SIO CH. A READ REGISTER 1
   15 DC87  00          RR0_B:	DB	000H	; SIO CH. B READ REGISTER 0
   16 DC88  00          RR1_B:	DB	000H	; SIO CH. B READ REGISTER 1
   17                   
   18                   ;========================================================
   19                   ;= CHANNEL B TRANSMITTER (PRINTER)                      =
   20                   ;========================================================
   21                   
   22 DC89  3A DC80     STLIST:	LD	A,(PRTFLG)	;
   23 DC8C  C9          	RET			;
   24                   
   25 DC8D  3A DC80     LIST:	LD	A,(PRTFLG)	;
   26 DC90  B7          	OR	A		;
   27 DC91  CA DC8D     	JP	Z,LIST		; WHILE printer_busy DO;
   28 DC94  F3          	DI			;
   29 DC95  3E 00       	LD	A,0 		;
   30 DC97  32 DC80     	LD	(PRTFLG),A	; printer_busy := true;
   31 DC9A  3E 05       	LD	A,05H		;
   32 DC9C  D3 0B       	OUT	(SIOBC),A	; (* SELECT WR5 *)
   33 DC9E  3A DA35     	LD	A,(WR5B)	;
   34 DCA1  C6 8A       	ADD	A,8AH		;
   35 DCA3  D3 0B       	OUT	(SIOBC),A	; (*enable RTS,DTR and XMIT*)
   36 DCA5  3E 01       	LD	A,01H		;
   37 DCA7  D3 0B       	OUT	(SIOBC),A	; (* SELECT WR1 *)
   38 DCA9  3E 07       	LD	A,07H		;
   39 DCAB  D3 0B       	OUT	(SIOBC),A	; (*XMIT,EXT.STATUS,STATUS AFFECTS VECTOR *)
   40 DCAD  79          	LD	A,C		;
   41 DCAE  D3 09       	OUT	(SIOBD),A	; outchar(siobd);
   42 DCB0  FB          	EI			;
   43 DCB1  C9          	RET			;
   44                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  48
Z-80 SIO DRIVER 

   46                   
   47                   ;========================================================
   48                   ;= CHANNEL A RECEIVER (READER)                          =
   49                   ;========================================================
   50                   
   51 DCB2  F3          READI:	DI			; PROCEDURE startreader;
   52 DCB3  AF          	XOR	A		; BEGIN
   53 DCB4  32 DC81     	LD	(RDRFLG),A	;  reader_busy := true;
   54 DCB7  3E 05       	LD	A,05H		;
   55 DCB9  D3 0A       	OUT 	(SIOAC),A	; (* SELECT WR5 *)
   56 DCBB  3A DA34     	LD	A,(WR5A)	;
   57 DCBE  C6 8A       	ADD	A,8AH		;
   58 DCC0  D3 0A       	OUT	(SIOAC),A	; (*enab1e RTS,DTR and XMIT*)
   59 DCC2  3E 01       	LD	A,01H		;
   60 DCC4  D3 0A       	OUT	(SIOAC),A	; (* SELECT WR1 *)
   61 DCC6  3E 1B       	LD	A,1BH		;
   62 DCC8  D3 0A       	OUT	(SIOAC),A	; (*enab1e rec,xmit and ext.status*)
   63 DCCA  FB          	EI			;
   64 DCCB  C9          	RET			; END;
   65                   
   66 DCCC  3A DC81     READS:	LD	A,(RDRFLG)	;
   67 DCCF  C9          	RET			;
   68                   
   69 DCD0  CD DCCC     READER: CALL	READS		;
   70 DCD3  B7          	OR	A		;
   71 DCD4  CA DCD0     	JP	Z,READER	; WHILE reader_busy DO;
   72 DCD7  3A DC83     	LD	A,(CHARA)	; readchar(sioad);
   73 DCDA  F5          	PUSH	AF		;
   74 DCDB  CD DCB2     	CALL	READI		; startreader;
   75 DCDE  F1          	POP	AF		;
   76 DCDF  C9          	RET			;
   77                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  49
Z-80 SIO DRIVER 

   79                   
   80                   ;========================================================
   81                   ;= CHANNEL A TRANSMITTER (PUNCH)                        =
   82                   ;========================================================
   83                   
   84 DCE0  3A DC82     PUNCH:	LD	A,(PTPFLG)	;
   85 DCE3  B7          	OR	A		;
   86 DCE4  CA DCE0     	JP	Z,PUNCH		; WHILE punch_busy DO;
   87 DCE7  F3          	DI			;
   88 DCE8  3E 00       	LD	A,0		;
   89 DCEA  32 DC82     	LD	(PTPFLG),A	; punch_busy := true;
   90 DCED  3E 05       	LD	A,05H		;
   91 DCEF  D3 0A       	OUT	(SIOAC),A	; (* SELECT WR5 *)
   92 DCF1  3A DA34     	LD	A,(WR5A)	;
   93 DCF4  C6 8A       	ADD	A,8AH		;
   94 DCF6  D3 0A       	OUT	(SIOAC),A	; (*enab1e DTR,RTS and XMIT*)
   95 DCF8  3E 01       	LD	A,01H		;
   96 DCFA  D3 0A       	OUT	(SIOAC),A	; (* SELECT WR1 *)
   97 DCFC  3E 1B       	LD	A,1BH		;
   98 DCFE  D3 0A       	OUT	(SIOAC),A	; (*enab1e rec,xmit and ext.status*)
   99 DD00  79          	LD	A,C		;
  100 DD01  D3 08       	OUT	(SIOAD),A	; writechar(sioad);
  101 DD03  FB          	EI			;
  102 DD04  C9          	RET			;
  103                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  50
Z-80 SIO DRIVER 

  105                   
  106                   ;========================================================
  107                   ;= SIO VECTORED INTERRUPT ROUTINES                      =
  108                   ;========================================================
  109                   
  110 DD05  ED 73 F34B  TXB:	LD	(SP_SAV),SP	; PROCEDURE TRANSMIT_INT_CH_B;
  111 DD09  31 F620     	LD	SP,ISTACK	;
  112 DD0C  F5          	PUSH	AF		;
  113 DD0D  3E 28       	LD	A,028H		; BEGIN
  114 DD0F  D3 0B       	OUT	(SIOBC),A	;   XMIT_BUF_EMPTY:=FALSE;
  115 DD11  3E FF       	LD	A,0FFH		;   PRINTER_BUSY:=FALSE;
  116 DD13  32 DC80     	LD	(PRTFLG),A	; END;
  117 DD16  F1          	POP	AF		;
  118 DD17  ED 7B F34B  	LD	SP,(SP_SAV)	;
  119 DD1B  FB          	EI			;
  120 DD1C  ED 4D       	RETI			;
  121                   
  122 DD1E  ED 73 F34B  EXTSTB:	LD	(SP_SAV),SP	; PROCEDURE EXTERNAL_STATUS_INT_CH_B;
  123 DD22  31 F620     	LD	SP,ISTACK	;
  124 DD25  F5          	PUSH	AF		;
  125 DD26  DB 0B       	IN	A,(SIOBC)	; BEGIN
  126 DD28  32 DC87     	LD	(RR0_B),A	;   RR0_B:=SIO_CH_B.RR0;
  127 DD2B  3E 10       	LD	A,10H		;   EXTERNAL_STATUS_INT:=FALSE;
  128 DD2D  D3 0B       	OUT	(SIOBC),A	; END;
  129 DD2F  F1          	POP	AF		;
  130 DD30  ED 7B F34B  	LD	SP,(SP_SAV)	;
  131 DD34  FB          	EI			;
  132 DD35  ED 4D       	RETI			;
  133                   
  134 DD37  ED 73 F34B  RCB:	LD	(SP_SAV),SP	; PROCEDURE RECEIVE_INT_CH_B;
  135 DD3B  31 F620     	LD	SP,ISTACK	;
  136 DD3E  F5          	PUSH	AF		;
  137 DD3F  DB 08       	IN	A,(SIOAD)	; BEGIN
  138 DD41  32 DC84     	LD	(CHARB),A	;   CHARB:=READCHAR(SIOBD);
  139 DD44  F1          	POP	AF		; END;
  140 DD45  ED 7B F34B  	LD	SP,(SP_SAV)	;
  141 DD49  FB          	EI			;
  142 DD4A  ED 4D       	RETI			;
  143                   
  144 DD4C  ED 73 F34B  SPECB:	LD	(SP_SAV),SP	; PROCEDURE SPECIAL_RECEIVE_INT_CH_B;
  145 DD50  31 F620     	LD	SP,ISTACK	;
  146 DD53  F5          	PUSH	AF		;
  147 DD54  3E 01       	LD	A,1		; BEGIN
  148 DD56  D3 0B       	OUT	(SIOBC),A	;   RR1_B:=SIO_CH_B.RR1;
  149 DD58  DB 0B       	IN	A,(SIOBC)	;   ERROR_RESET;
  150 DD5A  32 DC88     	LD	(RR1_B),A	; END;
  151 DD5D  3E 30       	LD	A,30H		;
  152 DD5F  D3 0B       	OUT	(SIOBC),A	;
  153 DD61  F1          	POP	AF		;
  154 DD62  ED 7B F34B  	LD	SP,(SP_SAV)	;
  155 DD66  FB          	EI			;
  156 DD67  ED 4D       	RETI			;
  157                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  51
Z-80 SIO DRIVER 

  159                   
  160 DD69  ED 73 F34B  TXA:	LD	(SP_SAV),SP	; PROCEDURE TRANSMIT_INT_CH_A;
  161 DD6D  31 F620     	LD	SP,ISTACK	;
  162 DD70  F5          	PUSH	AF		;
  163 DD71  3E 28       	LD	A,028H		; BEGIN
  164 DD73  D3 0A       	OUT	(SIOAC),A	;   XMIT_BUF_EMPTY:=FALSE;
  165 DD75  3E FF       	LD	A,0FFH		;   PUNCH_BUSY:=FALSE;
  166 DD77  32 DC82     	LD	(PTPFLG),A	; END;
  167 DD7A  F1          	POP	AF		;
  168 DD7B  ED 7B F34B  	LD	SP,(SP_SAV)	;
  169 DD7F  FB          	EI			;
  170 DD80  ED 4D       	RETI			;
  171                   
  172 DD82  ED 73 F34B  EXTSTA:	LD	(SP_SAV),SP	; PROCEDURE EXTERNAL_STATUS_INT_CH_A;
  173 DD86  31 F620     	LD	SP,ISTACK	;
  174 DD89  F5          	PUSH	AF		;
  175 DD8A  DB 0A       	IN	A,(SIOAC)	; BEGIN
  176 DD8C  32 DC85     	LD	(RR0_A),A	;   RR0_A:=SIO_CH_A.RR0;
  177 DD8F  3E 10       	LD	A,10H		;   EXTERNAL_STATUS_INT:=FALSE;
  178 DD91  D3 0A       	OUT	(SIOAC),A	; END;
  179 DD93  F1          	POP	AF		;
  180 DD94  ED 7B F34B  	LD	SP,(SP_SAV)	;
  181 DD98  FB          	EI			;
  182 DD99  ED 4D       	RETI			;
  183                   
  184 DD9B  ED 73 F34B  RCA:	LD	(SP_SAV),SP	; PROCEDURE RECEIVE_INT_CH_A;
  185 DD9F  31 F620     	LD	SP,ISTACK	;
  186 DDA2  F5          	PUSH	AF		;
  187 DDA3  DB 08       	IN	A,(SIOAD)	; BEGIN
  188 DDA5  32 DC83     	LD	(CHARA),A	;   CHARA:=READCHAR(SIOAD);
  189 DDA8  3E FF       	LD	A,0FFH		;   READER_BUSY:=FALSE;
  190 DDAA  32 DC81     	LD	(RDRFLG),A	; END;
  191 DDAD  F1          	POP	AF		;
  192 DDAE  ED 7B F34B  	LD	SP,(SP_SAV)	;
  193 DDB2  FB          	EI			;
  194 DDB3  ED 4D       	RETI			;
  195                   
  196 DDB5  ED 73 F34B  SPECA:	LD	(SP_SAV),SP	; PROCEDURE SPECIAL_RECEIVE_INT_CH_A;
  197 DDB9  31 F620     	LD	SP,ISTACK	;
  198 DDBC  F5          	PUSH	AF		;
  199 DDBD  3E 01       	LD	A,1		; BEGIN
  200 DDBF  D3 0A       	OUT	(SIOAC),A	;   RR1_A:=SIO_CH_A.RR1;
  201 DDC1  DB 0A       	IN	A,(SIOAC)	;   ERROR_RESET;
  202 DDC3  32 DC86     	LD	(RR1_A),A	;   CHAR_RECEIVED:= 0;
  203 DDC6  3E 30       	LD	A,30H		;   FLAG:= TRUE;
  204 DDC8  D3 0A       	OUT	(SIOAC),A	; END;
  205 DDCA  3E 00       	LD	A,0		;
  206 DDCC  32 DC83     	LD	(CHARA),A	;
  207 DDCF  3E FF       	LD	A,0FFH		;
  208 DDD1  32 DC81     	LD	(RDRFLG),A	;
  209 DDD4  F1          	POP	AF		;
  210 DDD5  ED 7B F34B  	LD	SP,(SP_SAV)	;
  211 DDD9  FB          	EI			;
  212 DDDA  ED 4D       	RETI			;
  213                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  52
Z-80 SIO DRIVER 

  215                   
  254                   	INCLUDE		DISPLAY.MAC
INPUT CONVERSION TABLE Z80ASM 1.32 Page  53
DISPLAY DRIVER 

    3                   
    4                   ;================================================
    5                   ;= DISPLAY DRIVER                               =
    6                   ;================================================
    7                   
    8 DDDC  00          GRAPH:	DB	0		; GRAPHICAL MODE FLAG
    9 DDDD  0000        LINTEM:	DW	0		; SAVE AREA FOR ESCDL
   10                   
   11 DDDF  7C          CPLHL:	LD	A,H		; PROCEDURE COMPLEMENT_HL;
   12 DDE0  2F          	CPL			; BEGIN
   13 DDE1  67          	LD	H,A		;   H:=CPL(H);
   14 DDE2  7D          	LD	A,L		;   L:=CPL(L);
   15 DDE3  2F          	CPL			; END;
   16 DDE4  6F          	LD	L,A		;
   17 DDE5  C9          	RET			;
   18                   
   19 DDE6  CD DDDF     NEGHL:	CALL	CPLHL		; PROCEDURE NEGATE_HL;
   20 DDE9  23          	INC	HL		; COMPLEMENT_HL;
   21 DDEA  C9          	RET			; HL:=HL+1;
   22                   
   23 DDEB  2A FFD2     TSTLROW:LD	HL,(RCTAD)	; PROCEDURE TEST_LAST_ROW;
   24 DDEE  7D          	LD	A,L		; BEGIN
   25 DDEF  FE 80       	CP	128		;   IF ROW=1920 THEN Z_FLG := SET
   26 DDF1  C0          	RET	NZ		;               ELSE Z_FLG := RESET;
   27 DDF2  7C          	LD	A,H		; END;
   28 DDF3  FE 07       	CP	7		;
   29 DDF5  C9          	RET			;
   30                   
   31 DDF6  3A DDDC     CONV:	LD	A,(GRAPH)	; PROCEDURE CONVERT_CHAR;
   32 DDF9  B7          	OR	A		; IF GRAPH THEN
   33 DDFA  79          	LD	A,C		;   A:=CHAR
   34 DDFB  C0          	RET	NZ		; ELSE
   35 DDFC  06 00       CON1:	LD	B,0		;   A:=CONVERT(CHAR);
   36 DDFE  09          	ADD	HL,BC		;
   37 DDFF  7E          	LD	A,(HL)		;
   38 DE00  C9          	RET			;
   39                   
   40 DE01  F5          WP75:	PUSH	AF		; PROCEDURE CURSOR_POSITION;
   41 DE02  3E 80       	LD	A,80H		; (* LOAD CURSOR COMMAND *)
   42 DE04  D3 01       	OUT	(DSPLC),A	;
   43 DE06  3A FFD1     	LD	A,(CCTAD)	;
   44 DE09  D3 00       	OUT	(DSPLD),A	; (* X POSITION *)
   45 DE0B  3A FFD4     	LD	A,(CURSY)	;
   46 DE0E  D3 00       	OUT	(DSPLD),A	; (* Y POSITION *)
   47 DE10  F1          	POP	AF		;
   48 DE11  C9          	RET			;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  54
DISPLAY DRIVER 

   50                   
   51                   
   52 DE12  2A FFD2     ROWDN:	LD	HL,(RCTAD)	; PROCEDURE ROW_DOWN;
   53 DE15  11 0050     	LD	DE,80		; BEGIN
   54 DE18  19          	ADD	HL,DE		;   ROW:=ROW+80;
   55 DE19  22 FFD2     	LD	(RCTAD),HL	;   CURSY:=CURSY+1;
   56 DE1C  21 FFD4     	LD	HL,CURSY	;   CURSOR_POSITION(COLUMN,CURSY);
   57 DE1F  34          	INC	(HL)		; END;
   58 DE20  C3 DE01     	JP	WP75		;
   59                   
   60 DE23  2A FFD2     ROWUP:	LD	HL,(RCTAD)	; PROCEDURE ROW_UP;
   61 DE26  11 FFB0     	LD	DE,-80		; BEGIN
   62 DE29  19          	ADD	HL,DE		;   ROW:=ROW-80;
   63 DE2A  22 FFD2     	LD	(RCTAD),HL	;   CURSY:=CURSY-1;
   64 DE2D  21 FFD4     	LD	HL,CURSY	;   CURSOR_POSITION(COLUMN,CURSY);
   65 DE30  35          	DEC	(HL)		; END;
   66 DE31  C3 DE01     	JP	WP75		;
   67                   
   68 DE34  21 0000     ES0H:	LD	HL,0		; PROCEDURE HOME;
   69 DE37  22 FFD2     	LD	(RCTAD),HL	; BEGIN
   70 DE3A  AF          	XOR	A		;   ROW:=0;
   71 DE3B  32 FFD1     	LD	(CCTAD),A	;   COLUMN:=0;
   72 DE3E  32 FFD4     	LD	(CURSY),A	;   CURSY:=0;
   73 DE41  C9          	RET			; END;
   74                   
   75 DE42  B8          CHKDC:	CP	B		; PROCEDURE A_MOD_B;
   76 DE43  D8          	RET	C		; BEGIN
   77 DE44  90          	SUB	B		;   A:=A MOD B;
   78 DE45  C3 DE42     	JP	CHKDC		; END;
   79                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  55
DISPLAY DRIVER 

   81                   
   82 DE48  2A FFD5     FILL:	LD	HL,(LOCBUF)	; PROCEDURE FILL_LINE_WITH_SPACES;
   83 DE4B  54          	LD	D,H		; BEGIN
   84 DE4C  5D          	LD	E,L		;   SOURCE:=LOCBUF;
   85 DE4D  13          	INC	DE		;   DESTINATION:=LOCBUF+1;
   86 DE4E  01 004F     	LD	BC,79		;   COUNT:=79; (SOURCE):='SP';
   87 DE51  36 20       	LD	(HL),32		;   MOVEBYTES(SOURCE,DESTINATION,COUNT);
   88 DE53  ED B0       	LDIR			;   IF BACKGROUND THEN
   89 DE55  3A FFDB     	LD	A,(BGFLG)	;   BEGIN
   90 DE58  FE 00       	CP	0		;     SOURCE:=LOCBBU;
   91 DE5A  C8          	RET	Z		;     DESTINATION:=LOCBBU+1;
   92 DE5B  2A FFDC     	LD	HL,(LOCBBU)	;     COUNT:=9; (* 10 BYTES = 80 BITS *)
   93 DE5E  54          	LD	D,H		;     (SOURCE):='NUL';
   94 DE5F  5D          	LD	E,L		;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
   95 DE60  13          	INC	DE		;   END;
   96 DE61  01 0009     	LD	BC,9		; END;
   97 DE64  36 00       	LD	(HL),0		;
   98 DE66  ED B0       	LDIR			;
   99 DE68  C9          	RET			;
  100                   
  101 DE69  21 F850     SCROLL:	LD	HL,DSPSTR+80	; PROCEDURE SCROLL;
  102 DE6C  11 F800     	LD	DE,DSPSTR	; BEGIN
  103 DE6F  01 0780     	LD	BC,1920 	;   SOURCE:=DISPLAY_START+80;
  104 DE72  ED B0       	LDIR			;   DESTINATION:=DISPLAY_START;
  105 DE74  21 FF80     	LD	HL,DSPSTR+1920  ;   COUNT:=1920;
  106 DE77  22 FFD5     	LD	(LOCBUF),HL	;   MOVEBYTES(SOURCE,DESTINATION,COUNT);
  107 DE7A  3A FFDB     	LD	A,(BGFLG)	;   LOCBUF:=DISRLAY_START+1920;
  108 DE7D  FE 00       	CP	0		;   IF BACKGROUND THEN
  109 DE7F  CA DE48     	JP 	Z,FILL		;   BEGIN
  110 DE82  21 F50A     	LD	HL,BGSTAR+10	;     SOURCE:=BGSTAR+10;
  111 DE85  11 F500     	LD	DE,BGSTAR	;     DESTINATION:=BGSTAR;
  112 DE88  01 00F0     	LD	BC,240		;     COUNT:=240;
  113 DE8B  ED B0       	LDIR			;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
  114 DE8D  21 F5F0     	LD	HL,BGSTAR+240	;     LOCBBU:=BGSTAR+240; (*LAST LINE*)
  115 DE90  22 FFDC     	LD	(LOCBBU),HL	;   END;
  116 DE93  C3 DE48     	JP	FILL		;   FILL_LINE_WITH_SPACES;
  117                   				; END;
  118                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  56
DISPLAY DRIVER 

  120                   
  121 DE96  3E 00       ADDOFF:	LD	A,0		; PROCEDURE BACKGROUND_ADDRESS_CALCULATION;
  122 DE98  06 03       	LD	B,3		; BEGIN
  123 DE9A  CB 3C       ADDOF1:	SRL	H		;   A:=HL MOD 8; (* BIT NUMBER *)
  124 DE9C  CB 1D       	RR	L		;   HL:=HL DIV 8; (* BYTE OFFSET IN BG *)
  125 DE9E  1F          	RRA			; END;
  126 DE9F  05          	DEC	B		;
  127 DEA0  C2 DE9A     	JP	NZ,ADDOF1	;
  128 DEA3  FE 00       	CP	0		;
  129 DEA5  C8          	RET	Z		;
  130 DEA6  06 05       	LD	B,5		;
  131 DEA8  1F          ADDOF2:	RRA			;
  132 DEA9  05          	DEC	B		;
  133 DEAA  C2 DEA8     	JP	NZ,ADDOF2	;
  134 DEAD  C9          	RET			;
  135                   
  136 DEAE  11 F500     CLRBIT:	LD	DE,BGSTAR	; PROCEDURE CLEAR_REST_OF_BITS;
  137 DEB1  19          	ADD	HL,DE		; BEGIN
  138 DEB2  FE 00       	CP	0		;   (* ENTRY:A=BIT NO, HL=BG OFFSET *)
  139 DEB4  47          	LD	B,A		;
  140 DEB5  3E 00       	LD	A,0		;   HL:=BGSTAR+BGOFFSET;
  141 DEB7  C2 DEBD     	JP	NZ,CLRBI1	;   IF BITNO=0 THEN
  142 DEBA  A6          	AND	(HL)		;     (HL):='NUL'
  143 DEBB  77          	LD	(HL),A		;   
  144 DEBC  C9          	RET			;   ELSE
  145 DEBD  37          CLRBI1:	SCF			;     FOR I:=0 TO BITNO DO
  146 DEBE  17          	RLA			;       (HL).I:=0; (* CLEAR BIT #I *)
  147 DEBF  05          	DEC	B		;   
  148 DEC0  C2 DEBD     	JP	NZ,CLRBI1	;     
  149 DEC3  A6          	AND	(HL)		;   
  150 DEC4  77          	LD	(HL),A		;
  151 DEC5  C9          	RET			; END;
  152                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  57
DISPLAY DRIVER 

  154                   
  155 DEC6  3E 00       MOVUP:	LD	A,0		;
  156 DEC8  B9          	CP	C		;
  157 DEC9  CA DECF     	JP	Z,MOVUP2	;
  158 DECC  ED B0       MOVUP1:	LDIR			;
  159 DECE  C9          	RET			;
  160 DECF  B8          MOVUP2:	CP	B		;
  161 DED0  C2 DECC     	JP	NZ,MOVUP1	;
  162 DED3  C9          	RET			;
  163                   
  164 DED4  3E 00       MOVDWN:	LD	A,0		;
  165 DED6  B9          	CP	C		;
  166 DED7  CA DEDD     	JP	Z,MOVDWN2	;
  167 DEDA  ED B8       MOVDWN1:LDDR			;
  168 DEDC  C9          	RET			;
  169 DEDD  B8          MOVDWN2:CP	B		;
  170 DEDE  C2 DEDA     	JP	NZ,MOVDWN1	;
  171 DEE1  C9          	RET			;
  172                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  58
DISPLAY DRIVER 

  174                   
  175                   ;========================================================
  176                   ;= CONTROL CHARACTER TREATMENT                          =
  177                   ;========================================================
  178                   
  179 DEE2  D3 1C       CTLG:	OUT	(BELL),A	; PROCEDURE BELL;
  180 DEE4  C9          	RET			;
  181                   
  182 DEE5  CD DE34     CTLF:	CALL	ES0H		; PROCEDURE START_XY_ADDRESSING;
  183 DEE8  3E 02       	LD	A,2		; HOME;
  184 DEEA  32 FFD7     	LD	(XFLG),A	; XFLG:=2;
  185 DEED  C9          	RET			;
  186                   
  187 DEEE  C9          DUMMY:	RET			; PROCEDURE DUMMY;
  188                   				; BEGIN END;
  189                   
  190 DEEF  3E 00       CTLM:	LD	A,0		; PROCEDURE CARRIAGE_RETURN;
  191 DEF1  32 FFD1     	LD	(CCTAD),A	; COLUMN:=0;
  192 DEF4  C3 DE01     	JP	WP75		; CURSOR_POSITION(COLUMN,CURSY);
  193                   
  194 DEF7  21 FFCF     ESCE:	LD	HL,DSPSTR+1999	; PROCEDURE CLEAR_SCREEN;
  195 DEFA  11 FFCE     	LD	DE,DSPSTR+1998	; BEGIN
  196 DEFD  01 07CF     	LD	BC,1999		;   SOURCE:=DISPLAY_START+1999;
  197 DF00  36 20       	LD	(HL),32		;   DESTINATION:=DISPLAY_START+1999-1;
  198 DF02  ED B8       	LDDR			;   COUNT:=1999;
  199 DF04  CD DE34     	CALL	ES0H		;   (SOURCE):='SP';
  200 DF07  CD DE01     	CALL	WP75		;   MOVEBYTES(SOURCE,DESTINATION,COUNT);
  201 DF0A  3A FFDB     	LD	A,(BGFLG)	;   HOME;
  202 DF0D  FE 00       	CP	0		;   CURSOR_POSITION(COLUMN,CURSY);
  203 DF0F  C8          	RET	Z		;   IF BACKGROUND THEN (* CLEAR FLAGS *)
  204 DF10  AF          	XOR	A		;   BEGIN
  205 DF11  32 FFDB     	LD	(BGFLG),A	;     BACKGROUND:=FALSE;
  206 DF14  21 F5F9     	LD	HL,BGSTAR+249	;     SOURCE:=BGSTAR+240;
  207 DF17  11 F5F8     	LD	DE,BGSTAR+248	;     DESTINATION:=BGSTAR+240-1;
  208 DF1A  01 00F9     	LD	BC,249		;     COUNT:=249;
  209 DF1D  36 00       	LD	(HL),0		;     (SOURCE):='NUL';
  210 DF1F  ED B8       	LDDR			;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
  211 DF21  C9          	RET			;   END;
  212                   				; END;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  59
DISPLAY DRIVER 

  214                   
  215 DF22  11 F800     ESCK:	LD	DE,DSPSTR	; PROCEDURE ERASE_TO_END_OF_LINE;
  216 DF25  2A FFD2     	LD	HL,(RCTAD)	; BEGIN
  217 DF28  19          	ADD	HL,DE		;   SOURCE:=DISPLAY_START_ROW+79;
  218 DF29  11 004F     	LD	DE,79		;   DESTINATION:=DISPLAY_START+ROW+79-1;
  219 DF2C  19          	ADD	HL,DE		;   COUNT:=79-COLUMN;
  220 DF2D  54          	LD	D,H		;   (SOURCE):='SP';
  221 DF2E  5D          	LD	E,L		;   IF COUNT<>0 THEN
  222 DF2F  1B          	DEC	DE		;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
  223 DF30  01 0000     	LD	BC,0		;
  224 DF33  3A FFD1     	LD	A,(CCTAD)	;
  225 DF36  2F          	CPL			;
  226 DF37  3C          	INC	A		;
  227 DF38  C6 4F       	ADD	A,79		;
  228 DF3A  4F          	LD	C,A		;
  229 DF3B  36 20       	LD	(HL),32		;
  230 DF3D  CD DED4     	CALL	MOVDWN		;
  231 DF40  3A FFDB     	LD	A,(BGFLG)	;
  232 DF43  FE 00       	CP	0		;
  233 DF45  C8          	RET	Z		;   IF BACKGROUND THEN
  234 DF46  2A FFD2     	LD	HL,(RCTAD)	;   BEGIN
  235 DF49  16 00       	LD	D,0		;
  236 DF4B  3A FFD1     	LD	A,(CCTAD)	;
  237 DF4E  5F          	LD	E,A		;
  238 DF4F  19          	ADD	HL,DE		;     BGOFFSET:=(ROW+CDLUMN) DIV 8;
  239 DF50  CD DE96     	CALL	ADDOFF		;     BITNO:=(ROW+COLUMN) MOD 8;
  240 DF53  CD DEAE     	CALL	CLRBIT		;     CLRBIT;
  241 DF56  3A FFD1     	LD	A,(CCTAD)	;
  242 DF59  CB 3F       	SRL	A		;     IF COLUMN<79 THEN
  243 DF5B  CB 3F       	SRL	A		;     BEGIN (* MORE BG BYTES TO CLEAR *)
  244 DF5D  CB 3F       	SRL	A		;
  245 DF5F  2F          	CPL			;
  246 DF60  C6 09       	ADD	A,9		;       COUNT:=9-(COLUMN DIV 8);
  247 DF62  F8          	RET	M		;
  248 DF63  4F          	LD	C,A		;
  249 DF64  06 00       	LD	B,0		;       DESTINATION:=BGOFFSET+1+1;
  250 DF66  23          	INC	HL		;       SOURCE:=BGOFFSET+1;
  251 DF67  54          	LD	D,H		;       IF COUNT<>0 THEN
  252 DF68  5D          	LD	E,L		; 	  MOVEBYTES(SOURCE,DESTINATION,COUNT);
  253 DF69  13          	INC	DE		;       END;
  254 DF6A  3E 00       	LD	A,0		;   END;
  255 DF6C  C3 DEC6     	JP	MOVUP		; END;
  256                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  60
DISPLAY DRIVER 

  258                   
  259 DF6F  2A FFD2     ESCY:	LD	HL,(RCTAD)	; PROCEDURE ERASE_TO_END_OF_SCREEN;
  260 DF72  3A FFD1     	LD	A,(CCTAD)	; BEGIN
  261 DF75  4F          	LD	C,A		;   SOURCE:=DISPLAY_START+1999;
  262 DF76  06 00       	LD	B,0		;   DESTINATION:=DISPLAY_START+1999-1;
  263 DF78  09          	ADD	HL,BC		;   COUNT:=1999-(ROW+COLUMN);
  264 DF79  CD DDE6     	CALL	NEGHL		;   (SOURCE):='SP';
  265 DF7C  11 07CF     	LD	DE,1999		;   IF COUNT>O THEN
  266 DF7F  19          	ADD	HL,DE		;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
  267 DF80  44          	LD	B,H		;   IF BACKGROUND THEN
  268 DF81  4D          	LD	C,L		;   BEGIN
  269 DF82  21 FFCF     	LD	HL,DSPSTR+1999	;     BGOFFSET:=(COLUMN+ROW) DIV 8;
  270 DF85  11 FFCE     	LD	DE,DSPSTR+1998	;     BITNO:=(ROW+COLUMN) MOD 8; CLRBIT;
  271 DF88  36 20       	LD	(HL),32		;     COUNT:=248-BGOFFSET;
  272 DF8A  CD DED4     	CALL	MOVDWN		;     SOURCE:=BGSTAR+249;
  273 DF8D  3A FFDB     	LD	A,(BGFLG)	;     DESTINATION:=BGSTAR+249-1;
  274 DF90  FE 00       	CP	0		;     (SOURCE):='NUL';
  275 DF92  C8          	RET	Z		;     IF COUNT<>0 THEN
  276 DF93  2A FFD2     	LD	HL,(RCTAD)	;       MOVEBYTES(SOURCE,DESTINATIDN,COUNT);
  277 DF96  16 00       	LD	D,0		;     END;
  278 DF98  3A FFD1     	LD	A,(CCTAD)	; END;
  279 DF9B  5F          	LD	E,A		;
  280 DF9C  19          	ADD	HL,DE		;
  281 DF9D  CD DE96     	CALL	ADDOFF		;
  282 DFA0  CD DEAE     	CALL	CLRBIT		;
  283 DFA3  CD DDDF     	CALL	CPLHL		;
  284 DFA6  11 F5F9     	LD	DE,BGSTAR+249	;
  285 DFA9  19          	ADD	HL,DE		;
  286 DFAA  3E 80       	LD	A,80H		;
  287 DFAC  A4          	AND	H		;
  288 DFAD  C0          	RET	NZ		;
  289 DFAE  44          	LD	B,H		;
  290 DFAF  4D          	LD	C,L		;
  291 DFB0  62          	LD	H,D		;
  292 DFB1  6B          	LD	L,E		;
  293 DFB2  1B          	DEC	DE		;
  294 DFB3  36 00       	LD	(HL),0		;
  295 DFB5  C3 DED4     	JP	MOVDWN		;
  296                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  61
DISPLAY DRIVER 

  298                   
  299 DFB8  3A FFD1     ESCD:	LD	A,(CCTAD)	; PROCEDURE CURSOR_LEFT;
  300 DFBB  FE 00       	CP	0		; BEGIN
  301 DFBD  CA DFC7     	JP	Z,ESCD1		;   IF COLUNN<>0 THEN
  302 DFC0  3D          	DEC	A		;   BEGIN
  303 DFC1  32 FFD1     	LD	(CCTAD),A	;     COLUMN:=COLUMN-1;
  304 DFC4  C3 DE01     	JP	WP75		;     CURSOR_POSITION(COLUMN,CURSY);
  305 DFC7  3E 4F       ESCD1:	LD	A,79		;   END ELSE
  306 DFC9  32 FFD1     	LD	(CCTAD),A	;   BEGIN
  307 DFCC  2A FFD2     	LD	HL,(RCTAD)	;     COLUMN:=79;
  308 DFCF  7D          	LD	A,L		;     IF ROW<>0 THEN
  309 DFD0  B4          	OR	H		;       ROW_UP
  310 DFD1  C2 DE23     	JP	NZ,ROWUP	;     ELSE
  311 DFD4  21 0780     	LD	HL,1920		;     BEGIN
  312 DFD7  22 FFD2     	LD	(RCTAD),HL	;       ROW:=1920;
  313 DFDA  3E 18       	LD	A,24		;       CURSY:=24;
  314 DFDC  32 FFD4     	LD	(CURSY),A	;       CURSOR_POSITION(COLUMN,CURSY);
  315 DFDF  C3 DE01     	JP	WP75		;     END;
  316                   				;   END ;
  317                   				; END;
  318                   
  319 DFE2  3A FFD1     ESCC:	LD	A,(CCTAD)	; PROCEDURE CURSOR_RIGTH;
  320 DFE5  FE 4F       	CP	79		; BEGIN
  321 DFE7  CA DFF1     	JP 	Z,ESCC1		;   IF COLUMN<>79 THEN
  322 DFEA  3C          	INC	A		;   BEGIN
  323 DFEB  32 FFD1     	LD	(CCTAD),A	;     COLUMN:=COLUMN+1;
  324 DFEE  C3 DE01     	JP	WP75		;     CURSOR_POSITION(COLUMN,CURSY);
  325 DFF1  3E 00       ESCC1:	LD	A,0		;   END ELSE
  326 DFF3  32 FFD1     	LD	(CCTAD),A	;   BEGIN
  327 DFF6  CD DDEB     	CALL	TSTLROW		;     COLUMN:=0;
  328 DFF9  C2 DE12     	JP	NZ,ROWDN	;     IF ROW<>1920 THEN ROW_DOWN
  329 DFFC  CD DE01     	CALL	WP75		;     ELSE
  330 DFFF  C3 DE69     	JP	SCROLL		;     BEGIN
  331                   				;       CURSOR_POSITION(COLUMN,CURSY);
  332                   				;       SCROLL;
  333                   				;     END;
  334                   				;   END;
  335                   				; END;
  336                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  62
DISPLAY DRIVER 

  338                   
  339 E002  CD DFE2     CTAB:	CALL	ESCC		; PROCEDURE TABULATE;
  340 E005  CD DFE2     	CALL	ESCC		;
  341 E008  CD DFE2     	CALL	ESCC		;   FOR I:=1 TO 4 DO CURSOR_RIGHT;
  342 E00B  C3 DFE2     	JP	ESCC		; END;
  343                   
  344 E00E  CD DDEB     ESCB:	CALL	TSTLROW		; PROCEDURE CURSOR_DOWN;
  345 E011  C2 DE12     	JP	NZ,ROWDN	;   IF ROW<>1920 THEN ROW_DOWN
  346 E014  C3 DE69     	JP	SCROLL		;                ELSE SCROLL;
  347                   
  348 E017  2A FFD2     ESCA:	LD	HL,(RCTAD)	; PROCEDURE CURSOR_UP;
  349 E01A  7D          	LD	A,L		;   IF ROW<>0 THEN ROW_UP
  350 E01B  B4          	OR	H		;   ELSE
  351 E01C  C2 DE23     	JP	NZ,ROWUP	;   BEGIN
  352 E01F  21 0780     	LD	HL,1920		;     ROW:=1920;
  353 E022  22 FFD2     	LD	(RCTAD),HL	;     CURSY:=24;
  354 E025  3E 18       	LD	A,24		;     CURSOR_POSITION(COLUMN,CURSY);
  355 E027  32 FFD4     	LD	(CURSY),A	;   END;
  356 E02A  C3 DE01     	JP	WP75		;
  357                   
  358 E02D  CD DE34     ESCH:	CALL	ES0H		; PROCEDURE HOME;
  359 E030  C3 DE01     	JP	WP75		; ES0H;
  360                   				; CURSOR_POSITION(COLUMN,CURSY);
  361                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  63
DISPLAY DRIVER 

  363                   
  364 E033  2A FFD2     ESCDL:	LD	HL,(RCTAD)	; PROCEDURE DELETE_LINE;
  365 E036  44          	LD	B,H		; BEGIN
  366 E037  4D          	LD	C,L		;   SOURCE:=DISPLAY_START+ROW+80;
  367 E038  11 F850     	LD	DE,DSPSTR+80	;   DESTINATION:=DISPLAY_START+ROW;
  368 E03B  19          	ADD	HL,DE		;   COUNT:=1920-ROW;
  369 E03C  22 DDDD     	LD	(LINTEM),HL	;   IF COUNT<>0 THEN  
  370 E03F  11 FFB0     	LD	DE,-80		;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
  371 E042  19          	ADD	HL,DE		;   LOCBUF:=DISPLAY_START+1920;
  372 E043  EB          	EX	DE,HL		;   IF BACKGROUND THEN
  373 E044  60          	LD	H,B		;   BEGIN
  374 E045  69          	LD	L,C		;     BGOFFSET:=ROW DIV 8;
  375 E046  CD DDE6     	CALL	NEGHL		;     BITNO:=ROW MOD 8;
  376 E049  01 0780     	LD	BC,1920		;     SOURCE:=BGSTAR+BGOFFSET+10;
  377 E04C  09          	ADD	HL,BC		;     DESTINATION:=BGSTAR+BGOFFSET;
  378 E04D  44          	LD	B,H		;     COUNT:=240-BGOFFSET;
  379 E04E  4D          	LD	C,L		;     IF COUNT<>0 THEN
  380 E04F  2A DDDD     	LD	HL,(LINTEM)	;       MOVEBYTES(SOURCE,DESTINATION,COUNT);
  381 E052  CD DEC6     	CALL	MOVUP		;     LOCBBU:=BGSTAR+240;
  382 E055  21 FF80     	LD	HL,DSPSTR+1920	;   END;
  383 E058  22 FFD5     	LD	(LOCBUF),HL	;   FILL_LINE_WITH_SPACES;
  384                   				; END ;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  64
DISPLAY DRIVER 

  386                   
  387 E05B  3A FFDB     	LD	A,(BGFLG)	; BACKGROUND HANDLING;
  388 E05E  FE 00       	CP	0		;
  389 E060  CA DE48     	JP	Z,FILL		;
  390 E063  2A FFD2     	LD	HL,(RCTAD)	;
  391 E066  CD DE96     	CALL	ADDOFF		;
  392 E069  44          	LD	B,H		;
  393 E06A  4D          	LD	C,L		;
  394 E06B  11 F50A     	LD	DE,BGSTAR+10	;
  395 E06E  19          	ADD	HL,DE		;
  396 E06F  22 DDDD     	LD	(LINTEM),HL	;
  397 E072  11 FFF6     	LD	DE,-10		;
  398 E075  19          	ADD	HL,DE		;
  399 E076  EB          	EX	DE,HL		;
  400 E077  60          	LD	H,B		;
  401 E078  69          	LD	L,C		;
  402 E079  CD DDE6     	CALL	NEGHL		;
  403 E07C  01 00F0     	LD	BC,240		;
  404 E07F  09          	ADD	HL,BC		;
  405 E080  44          	LD	B,H		;
  406 E081  4D          	LD	C,L		;
  407 E082  2A DDDD     	LD	HL,(LINTEM)	;
  408 E085  CD DEC6     	CALL	MOVUP		;
  409 E088  21 F5F0     	LD	HL,BGSTAR+240	;
  410 E08B  22 FFDC     	LD	(LOCBBU),HL	;
  411 E08E  C3 DE48     	JP	FILL		;
  412                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  65
DISPLAY DRIVER 

  414                   
  415 E091  2A FFD2     ESCIL:	LD	HL,(RCTAD)	; PROCEDURE INSERT_LINE
  416 E094  11 F800     	LD	DE,DSPSTR	; BEGIN
  417 E097  19          	ADD	HL,DE		;   SOURCE:=1919;
  418 E098  22 FFD5     	LD	(LOCBUF),HL	;   DESTINATION:=1999;
  419 E09B  CD DDE6     	CALL	NEGHL		;   COUNT:=1920-ROW;
  420 E09E  11 FF80     	LD	DE,DSPSTR+1920	;   IF COUNT<>0 THEN
  421 E0A1  19          	ADD	HL,DE		;     MOVEBYTES(SOURCE,DESTINATION,COUNT);
  422 E0A2  44          	LD	B,H		;   IF BACKGROUND THEN
  423 E0A3  4D          	LD	C,L		;   BEGIN
  424 E0A4  21 FF7F     	LD	HL,DSPSTR+1919	;     BGOFFSET:=ROW DIV 8;
  425 E0A7  11 FFCF     	LD	DE,DSPSTR+1999	;     BITNO:=ROW MOD 8;
  426 E0AA  CD DED4     	CALL	MOVDWN		;     LOCBBU:=BGSTAR+BGOFFSET;
  427 E0AD  3A FFDB     	LD	A,(BGFLG)	;     SOURCE:=BGSTAR+239;
  428 E0B0  FE 00       	CP	0		;     DESTINATION:=BGSTAR+249;
  429 E0B2  CA DE48     	JP	Z,FILL		;     COUNT:=240-BGOFFSET;
  430 E0B5  2A FFD2     	LD	HL,(RCTAD)	;     IF COUNT<>O THEN
  431 E0B8  CD DE96     	CALL	ADDOFF		;       MOVEBYTES(SOURCE,DESTINATION,COUNT);
  432 E0BB  11 F500     	LD	DE,BGSTAR	;     END;
  433 E0BE  19          	ADD	HL,DE		;
  434 E0BF  22 FFDC     	LD	(LOCBBU),HL	;
  435 E0C2  CD DDE6     	CALL	NEGHL		;
  436 E0C5  11 F5F0     	LD	DE,BGSTAR+240	;
  437 E0C8  19          	ADD	HL,DE		;
  438 E0C9  44          	LD	B,H		;
  439 E0CA  4D          	LD	C,L		;
  440 E0CB  21 F5EF     	LD	HL,BGSTAR+239	;
  441 E0CE  11 F5F9     	LD	DE,BGSTAR+249	;
  442 E0D1  CD DED4     	CALL	MOVDWN		;
  443 E0D4  C3 DE48     	JP	FILL		;
  444                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  66
DISPLAY DRIVER 

  446                   
  447 E0D7  3E 02       ESCSB:	LD	A,2		; PROCEDURE SET_BACKGROUND;
  448 E0D9  32 FFDB     	LD	(BGFLG),A	;
  449 E0DC  C9          	RET			;
  450                   
  451 E0DD  3E 01       ESCSF:	LD	A,1		; PROCEDURE SET_FOREGROUND;
  452 E0DF  32 FFDB     	LD	(BGFLG),A	;
  453 E0E2  C9          	RET			;
  454                   
  455 E0E3  21 F800     ESCCF:	LD	HL,DSPSTR	; PROCEDURE CLEAR_FOREGROUND;
  456 E0E6  11 F500     	LD	DE,BGSTAR	; BEGIN
  457 E0E9  06 FA       	LD	B,250		;   HL:=DISPLAY_START;
  458 E0EB  1A          ESCCF1: LD	A,(DE)		;   DE:=BGSTAR;
  459 E0EC  0E 08       	LD	C,8		;   FOR B:=250 DOWNTO 1 DO
  460 E0EE  FE 00       	CP	0		;   BEGIN
  461 E0F0  C2 E0FD     	JP	NZ,ESCCF3	;     IF (DE)=0 THEN
  462 E0F3  36 20       ESCCF2:	LD	(HL),32		;     FOR C:=8 DOWNTO 1 DO
  463 E0F5  23          	INC	HL		;     BEGIN
  464 E0F6  0D          	DEC	C		;       (HL):='SP';
  465 E0F7  C2 E0F3     	JP	NZ,ESCCF2	;       HL:=HL+1;
  466 E0FA  C3 E108     	JP	ESCCF5		;     END
  467 E0FD  1F          ESCCF3:	RRA			;     ELSE
  468 E0FE  DA E103     	JP	C,ESCCF4	;       FOR C:=8 DOWN TO 1 DO
  469 E101  36 20       	LD	(HL),32		;       BEGIN
  470 E103  23          ESCCF4:	INC	HL		;         IF (DE) AND (1 SHIFT (8-C))=1 THEN
  471 E104  0D          	DEC	C		;           (HL):='SP';
  472 E105  C2 E0FD     	JP	NZ,ESCCF3	;         HL:=HL+1;
  473 E108  13          ESCCF5:	INC	DE		;       END;  
  474 E109  05          	DEC	B		;   END;
  475 E10A  C2 E0EB     	JP	NZ,ESCCF1	; END;
  476 E10D  C9          	RET			;
  477                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  67
DISPLAY DRIVER 

  479                   
  480                   ;=======================================================
  481                   ;= CONTROL CHARACTER JUMP TABLE                        =
  482                   ;=======================================================
  483                   
  484 E10E  DEEE        TAB1:	DW	DUMMY 		; DUMMY;
  485 E110  E091        	DW	ESCIL		; INSERT_LINE;
  486 E112  E033        	DW	ESCDL		; DELETE_LINE;
  487 E114  DEEE        	DW	DUMMY		; DUMMY;
  488 E116  DEEE        	DW	DUMMY		; DUMMY;
  489 E118  DFB8        	DW	ESCD		; CURSOR_LEFT;
  490 E11A  DEE5        	DW	CTLF		; START_XY_ADDRESSING;
  491 E11C  DEE2        	DW	CTLG		; BELL;
  492 E11E  DFB8        	DW	ESCD		; CURSOR_LEFT;
  493 E120  E002        	DW	CTAB		; TABULATION;
  494 E122  E00E        	DW	ESCB		; CURSOR_DOWN;
  495 E124  DEEE        	DW	DUMMY		; DUMMY;
  496 E126  DEF7        	DW	ESCE		; CLEAR_SCREEN;
  497 E128  DEEF        	DW	CTLM		; CARRIAGE_RETURN;
  498 E12A  DEEE        	DW	DUMMY		; DUMMY;
  499 E12C  DEEE        	DW	DUMMY		; DUMMY;
  500 E12E  DEEE        	DW	DUMMY		; DUMMY;
  501 E130  DEEE        	DW	DUMMY		; DUMMY;
  502 E132  DEEE        	DW	DUMMY		; DUMMY;
  503 E134  DEEE        	DW	DUMMY		; DUMMY;
  504 E136  E0D7        	DW	ESCSB		; SET_BACKGROUND;
  505 E138  E0DD        	DW	ESCSF		; SET_FOREGROUND;
  506 E13A  E0E3        	DW	ESCCF		; CLEAR_FOREGROUND;
  507 E13C  DEEE        	DW	DUMMY		; DUMMY;
  508 E13E  DFE2        	DW	ESCC		; CURSOR_RIGHT;
  509 E140  DEEE        	DW	DUMMY		; DUMMY;
  510 E142  E017        	DW	ESCA		; CURSOR_UP;
  511 E144  DEEE        	DW	DUMMY		; DUMMY;
  512 E146  DEEE        	DW	DUMMY		; DUMMY;
  513 E148  E02D        	DW	ESCH		; CURSOR_HOME;
  514 E14A  DF22        	DW	ESCK		; ERASE_TO_END_OF_LINE;
  515 E14C  DF6F        	DW	ESCY		; ERASE_TO_END_OF_SCREEN;
  516                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  68
DISPLAY DRIVER 

  518                   
  519 E14E  3E 00       SPECC:	LD	A,0		;PROCEDURE CONTROL_CHAR;
  520 E150  32 FFD7     	LD	(XFLG),A	;BEGIN
  521 E153  3A FFDA     	LD	A,(USHER)	;  CANSEL POSSIBLE X-Y ADDRESSING
  522 E156  07          	RLCA			;
  523 E157  E6 3E       	AND	3EH		;  OFFSET := CHAR * 2;
  524 E159  4F          	LD	C,A		;
  525 E15A  06 00       	LD	B,0		;
  526 E15C  21 E10E     	LD	HL,TAB1		;
  527 E15F  09          	ADD	HL,BC		;
  528 E160  5E          	LD	E,(HL)		;
  529 E161  23          	INC	HL		;
  530 E162  56          	LD	D,(HL)		; JR (TABLE + OFFSET)
  531 E163  EB          	EX	DE,HL		;
  532 E164  E9          	JP	(HL)		;END;
  533                   
  534                   ;=======================================================
  535                   ;= END OF CONTROL CHARACTER TREATMENT                  =
  536                   ;=======================================================
  537                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  69
DISPLAY DRIVER 

  539                   
  540                   ;================================================
  541                   ;= X-Y ADDRESSING                               =
  542                   ;================================================
  543                   
  544 E165  3A FFDA     XYADD:	LD	A,(USHER)	; PROCEDURE XYADDRESS;
  545 E168  E6 7F       	AND	127		; BEGIN
  546 E16A  D6 20       	SUB	32		;   CHAR:=(CHAR AND 127)-32; XFLG:=XFLG-1;
  547 E16C  21 FFD7     	LD	HL,XFLG		;   IF XFLG>O THEN ADR0:=CHAR
  548 E16F  35          	DEC	(HL)		;   ELSE (* LAST BYTE OF ADDRESS *)
  549 E170  CA E177     	JP	Z,XYADD1	;   BEGIN
  550 E173  32 FFDE     	LD	(ADR0),A	;     IF ADRMDDE=0 THEN
  551 E176  C9          	RET			;     BEGIN (* XY MODE *)
  552 E177  57          XYADD1:	LD	D,A		;       CURSY:=CHAR MOD 25;
  553 E178  3A FFDE     	LD	A,(ADR0)	;       ROW:=ROW+CHAR*80;
  554 E17B  67          	LD	H,A		;       COLUMN:=ADR0 MOD 80;
  555 E17C  3A DA33     	LD	A,(ADRMOD)	;     END
  556 E17F  B7          	OR	A		;     ELSE (* YX MODE *)
  557 E180  CA E184     	JP 	Z,XYADD2	;     BEGIN
  558 E183  EB          	EX	DE,HL		;       CURSY:=ADR0 MOD 25;
  559 E184  7C          XYADD2:	LD	A,H		;       ROW:=ROW+ADR0*80;
  560 E185  06 50       	LD	B,80		;       COLUMN:=CHAR MOD 80;
  561 E187  CD DE42     	CALL	CHKDC		;     END;
  562 E18A  32 FFD1     	LD	(CCTAD),A	;   END;
  563 E18D  7A          	LD	A,D		; END;
  564 E18E  06 19       	LD	B,25		;
  565 E190  CD DE42     	CALL	CHKDC		;
  566 E193  32 FFD4     	LD	(CURSY),A	;
  567 E196  B7          	OR	A		;
  568 E197  CA DE01     	JP	Z,WP75		;
  569 E19A  2A FFD2     	LD	HL,(RCTAD)	;
  570 E19D  11 0050     	LD	DE,80		;
  571 E1A0  19          XYADD3:	ADD	HL,DE		;
  572 E1A1  3D          	DEC	A		;
  573 E1A2  C2 E1A0     	JP	NZ,XYADD3	;
  574 E1A5  22 FFD2     	LD	(RCTAD),HL	;
  575 E1A8  C3 DE01     	JP	WP75		;
  576                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  70
DISPLAY DRIVER 

  578                   
  579                   ;================================================
  580                   ;= NORMAL CHARACTER TREATMENT                   =
  581                   ;================================================
  582                   
  583 E1AB  2A FFD2     DISPL:	LD	HL,(RCTAD)	; PROCEDURE DISPLAY_CHARACTER;
  584 E1AE  16 00       	LD	D,0		; BEGIN
  585 E1B0  3A FFD1     	LD	A,(CCTAD)	;   LOCAD:=ROW+COLUMN;
  586 E1B3  5F          	LD	E,A		;
  587 E1B4  19          	ADD	HL,DE		;
  588 E1B5  22 FFD8     	LD	(LOCAD),HL	;
  589 E1B8  3A FFDA     	LD	A,(USHER)	;
  590 E1BB  FE C0       	CP	192		;
  591 E1BD  DA E1C2     	JP	C,DISPL1	;   IF CHAR > 192 THEN
  592 E1C0  D6 C0       	SUB	192		;     CHAR := CHAR -192;
  593 E1C2  4F          DISPL1:	LD	C,A		;
  594 E1C3  FE 80       	CP	128		;
  595 E1C5  DA E1D1     	JP	C,DISPL2	;   IF CHAR > 128 THEN
  596 E1C8  E6 04       	AND	4		;
  597 E1CA  32 DDDC     	LD	(GRAPH),A	;     GRAPH := TRUE
  598 E1CD  79          	LD	A,C		;
  599 E1CE  C3 E1D7     	JP	DISPL3		;
  600 E1D1  21 F680     DISPL2:	LD	HL,OUTCON	;   ELSE
  601 E1D4  CD DDF6     	CALL	CONV		;     CONVERT(CHAR);
  602 E1D7  2A FFD8     DISPL3:	LD	HL,(LOCAD)	; (DISPLAY_START+LOCAD):=CHAR;
  603 E1DA  11 F800     	LD	DE,DSPSTR	;
  604 E1DD  19          	ADD	HL,DE		;
  605 E1DE  77          	LD	(HL),A		;
  606 E1DF  CD DFE2     	CALL	ESCC		; CURSOR_RIGTH;
  607                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  71
DISPLAY DRIVER 

  609                   
  610 E1E2  3A FFDB     	LD	A,(BGFLG)	;   IF BACKGROUND THEN
  611 E1E5  FE 02       	CP	2		;   BEGIN
  612 E1E7  C0          	RET	NZ		;     BGOFFSET:=LOCAD DIV 8;
  613 E1E8  2A FFD8     	LD	HL,(LOCAD)	;     BITNO:=LOCAD MOD 8;
  614 E1EB  CD DE96     	CALL	ADDOFF		;     BGADDR:=BGSTAR+BGOFFSET;
  615 E1EE  11 F500     	LD	DE,BGSTAR	;     (BBADDR):=(BGADDR) OR (1 SHIFT BITNO);
  616 E1F1  19          	ADD	HL,DE		;
  617 E1F2  FE 00       	CP	0		;
  618 E1F4  47          	LD	B,A		;
  619 E1F5  3E 01       	LD	A,1		;
  620 E1F7  C2 E1FD     	JP	NZ,DISPL4	;
  621 E1FA  B6          	OR	(HL)		;
  622 E1FB  77          	LD	(HL),A		;
  623 E1FC  C9          	RET			;
  624 E1FD  07          DISPL4:	RLCA			;
  625 E1FE  05          	DEC	B		;
  626 E1FF  C2 E1FD     	JP	NZ,DISPL4	;
  627 E202  B6          	OR	(HL)		;
  628 E203  77          	LD	(HL),A		;   END;
  629 E204  C9          	RET			; END;
  630                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  72
DISPLAY DRIVER 

  632                   
  633 E205  F3          CONOUT:	DI			; PROCEDURE CONSOLE_OUTPUT;
  634 E206  E5          	PUSH	HL		; BEGIN
  635 E207  21 0000     	LD	HL,0		;   IF XFLG<>0 THEN
  636 E20A  39          	ADD	HL,SP		;     XYADD
  637 E20B  31 F680     	LD	SP,STACK	;   ELSE
  638 E20E  FB          	EI			;     IF CHAR<32 THEN
  639 E20F  E5          	PUSH	HL		; 	SPECC
  640 E210  F5          	PUSH	AF		;     ELSE
  641 E211  C5          	PUSH	BC		;       DISPLAY_CHARACTER;
  642 E212  D5          	PUSH	DE		;     END;
  643 E213  79          	LD	A,C		;
  644 E214  32 FFDA     	LD	(USHER),A	;
  645 E217  3A FFD7     	LD	A,(XFLG)	;
  646 E21A  B7          	OR	A		;
  647 E21B  CA E224     	JP	Z,CONOU1	;
  648 E21E  CD E165     	CALL	XYADD		;
  649 E221  C3 E235     	JP	CONOU3		;
  650 E224  3A FFDA     CONOU1:	LD	A,(USHER)	;
  651 E227  FE 20       	CP	32		;
  652 E229  D2 E232     	JP	NC,CONOU2	;
  653 E22C  CD E14E     	CALL	SPECC		;
  654 E22F  C3 E235     	JP	CONOU3		;
  655 E232  CD E1AB     CONOU2:	CALL	DISPL		;
  656 E235  D1          CONOU3:	POP	DE		;
  657 E236  C1          	POP	BC		;
  658 E237  F1          	POP	AF		;
  659 E238  E1          	POP	HL		;
  660 E239  F3          	DI			;
  661 E23A  F9          	LD	SP,HL		;
  662 E23B  E1          	POP	HL		;
  663 E23C  FB          	EI			;
  664 E23D  C9          	RET			;
  665                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  73
DISPLAY DRIVER 

  667                   
  668                   ;===============================================================
  669                   ;= INTEL 8275 DISPLAY CONTROLLER INTERRUPT ROUTINE             =
  670                   ;===============================================================
  671                   
  672 E23E  ED 73 F34B  DSPITR:	LD	(SP_SAV),SP	; SAVE ACCUMULATOR AND FLAGS
  673 E242  31 F620     	LD	SP,ISTACK	; SAVE REGISTERS
  674 E245  F5          	PUSH	AF		;
  675 E246  C5          	PUSH	BC		;
  676 E247  D5          	PUSH	DE		; ESTABLISH LOCAL STACK
  677 E248  E5          	PUSH	HL		; SAVE GLOBAL STACK POINTER
  678 E249  DB 01       	IN	A,(DSPLC)	;
  679 E24B  3E 06       	LD	A,6		;
  680 E24D  D3 FA       	OUT	(DMAMAS),A	; SET DMA CH2 MASK;
  681 E24F  3E 07       	LD	A,7		;
  682 E251  D3 FA       	OUT	(DMAMAS),A	; SET DMA CH3 MASK;
  683 E253  D3 FC       	OUT	(DMACBC),A	; CLEAR DMA BYTECOUNTER;
  684 E255  21 F800     	LD	HL,DSPSTR	;
  685 E258  7D          	LD	A,L		;
  686 E259  D3 F4       	OUT	(DMAAD2),A	; SET DMA CH2 LOW ADDRESS;
  687 E25B  7C          	LD	A,H		;
  688 E25C  D3 F4       	OUT	(DMAAD2),A	; SET DMA CH2 HIGH ADDRESS;
  689 E25E  21 07CF     	LD	HL,1999		;
  690 E261  7D          	LD	A,L		;
  691 E262  D3 F5       	OUT	(DMACN2),A	; SET DMA CH2 LOW BYTECOUNT;
  692 E264  7C          	LD	A,H		;
  693 E265  D3 F5       	OUT	(DMACN2),A	; SET DMA CH2 HIGH BYTECOUNT;
  694 E267  3E 00       	LD	A,0		;
  695 E269  D3 F7       	OUT	(DMACN3),A	; SET DMA CH3 LOW BYTE COUNT;
  696 E26B  D3 F7       	OUT	(DMACN3),A	; SET DMA CH3 HIGH BYTE COUNT;
  697 E26D  3E 02       	LD	A,2		;
  698 E26F  D3 FA       	OUT	(DMAMAS),A	; CLEAR CH2 MASK;
  699 E271  3E 03       	LD	A,3		;
  700 E273  D3 FA       	OUT	(DMAMAS),A	; CLEAR CH3 MASK;
  701 E275  3E D7       	LD	A,0D7H		;
  702 E277  D3 0E       	OUT	(CTCCH2),A	; SET CTC CH2 MODE;
  703 E279  3E 01       	LD	A,1		;
  704 E27B  D3 0E       	OUT	(CTCCH2),A	; SET CTC CH2 COUNT;
  705                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  74
DISPLAY DRIVER 

  707                   
  708 E27D  21 FFFC     	LD	HL,RTC0		; REAL TIME CLOCK
  709 E280  34          	INC	(HL)		;
  710 E281  C2 E290     	JP	NZ,AFB11	;
  711 E284  23          	INC	HL		;
  712 E285  34          	INC	(HL)		;
  713 E286  C2 E290     	JP	NZ,AFB11	;
  714 E289  23          	INC	HL		;
  715 E28A  34          	INC	(HL)		;
  716 E28B  C2 E290     	JP	NZ,AFB11	;
  717 E28E  23          	INC	HL		;
  718 E28F  34          	INC	(HL)		;
  719 E290  2A FFDF     AFB11:	LD	HL,(EXCNT0)	; EXIT ROUTINE 0 COUNTER
  720 E293  7D          	LD	A,L		;
  721 E294  B4          	OR	H		;
  722 E295  CA E2A1     	JP	Z,AFB12		;
  723 E298  2B          	DEC	HL		;
  724 E299  7D          	LD	A,L		;
  725 E29A  B4          	OR	H		;
  726 E29B  22 FFDF     	LD	(EXCNT0),HL	;
  727 E29E  CC FFE5     	CALL	Z,EXROUT	;
  728 E2A1  2A FFE1     AFB12:	LD	HL,(EXCNT1)	; EXIT ROUTINE 1 COUNTER
  729 E2A4  7D          	LD	A,L		;
  730 E2A5  B4          	OR	H		;
  731 E2A6  CA E2B2     	JP	Z,AFB13		;
  732 E2A9  2B          	DEC	HL		;
  733 E2AA  7D          	LD	A,L		;
  734 E2AB  B4          	OR	H		;
  735 E2AC  22 FFE1     	LD	(EXCNT1),HL	;
  736 E2AF  CC E63E     	CALL	Z,FDSTOP	;
  737 E2B2  2A FFE3     AFB13:	LD	HL,(DELCNT)	;
  738 E2B5  7D          	LD	A,L		;
  739 E2B6  B4          	OR	H		;
  740 E2B7  CA E2BE     	JP	Z,AFB14		;
  741 E2BA  2B          	DEC	HL		;
  742 E2BB  22 FFE3     	LD	(DELCNT),HL	;
  743 E2BE  E1          AFB14:	POP	HL		;
  744 E2BF  D1          	POP	DE		; RESTORE GLOBAL STACKPOINTER
  745 E2C0  C1          	POP	BC		; RESTORE REGISTERS
  746 E2C1  F1          	POP	AF		; RESTORE ACCUMULATOR AND FLAGS
  747 E2C2  ED 7B F34B  	LD	SP,(SP_SAV)	;
  748 E2C6  FB           	EI			;
  749 E2C7  ED 4D       	RETI			;
  750                   
  255                   	INCLUDE		FLOPPY.MAC
    2                   
    3                   ;========================================================
    4                   ;= FLOPPY DISK DRIVER                                   =
    5                   ;========================================================
    6                   
    7         0000      WRALL	EQU	0		; WRITE TO ALLOCATED SECTOR.
    8         0001      WRDIR	EQU	1		; WRITE TO DIRECTORY SECTOR.
    9         0002      WRUAL	EQU	2		; WRITE TO UNALLOCATED SECTOR (FIRST SECTOR
   10                   				; NEW DATA BLOCK).
   11                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  75
FLOPPY DISK DRIVER 

   13                   
   14                   ;================================================
   15                   ;= PROCEDURE SECTION                            =
   16                   ;================================================
   17                   
   18                   	;SELECT DISK DRIVE
   19                   	;ENTRY: C=DRIVE NUMBER  
   20                   	;EXIT : HL=DISK PARAMETER HEADER
   21 E2C9  21 0000     SELD:	LD	HL,0		; PROCEDURE SELECT_DISK;
   22 E2CC  39          	ADD	HL,SP		;
   23 E2CD  31 F680     	LD	SP,STACK	; SP := LOCAL_STACK;
   24 E2D0  E5          	PUSH	HL		;
   25 E2D1  21 0000     	LD	HL,0		; ERROR CODE
   26 E2D4  3A F334     	LD	A,(DRNO)	; DRIVE OK?
   27 E2D7  B9          	CP	C		; CY IF SO
   28 E2D8  DA E360     	JP	C,RSELD		; RET IF ERROR
   29 E2DB  79          	LD	A,C		;
   30 E2DC  32 F312     	LD	(SEKDSK),A	; INIT. SEEK DISK WITH NEW DRIVE NO.
   31 E2DF  01 0010     	LD	BC,10H		; INIT. DPH LENGTH
   32 E2E2  11 DA37     	LD	DE,FD0		; GET FD0 ADDRESS
   33 E2E5  21 0000     	LD	HL,00H		; INIT. DPH OFFSET
   34 E2E8  B7          SELD10:	OR	A		;
   35 E2E9  CA E2F2     	JP	Z,SELD20	;
   36 E2EC  13          	INC	DE		; DE:=DE+DRIVE_NO
   37 E2ED  09          	ADD	HL,BC		; HL:=HL+(DRIVE_NO.*DPH_LENGTH)
   38 E2EE  3D          	DEC	A		;
   39 E2EF  C3 E2E8     	JP	SELD10		;
   40 E2F2  4D          SELD20:	LD	C,L		;
   41 E2F3  44          	LD	B,H		;
   42 E2F4  EB          	EX	DE,HL		;
   43 E2F5  7E          	LD	A,(HL)		;
   44 E2F6  21 F332     	LD	HL,CFORM	;
   45 E2F9  BE          	CP	(HL)		;
   46 E2FA  CA E30C     	JP	Z,SELN		;
   47 E2FD  F5          	PUSH	AF		; IF: NEW_FORMAT # CURRENT_FORMAT THEN
   48 E2FE  C5          	PUSH	BC		;       IF: HOST_WRITE # 0 THEN
   49 E2FF  3A F322     	LD	A,(HSTWRT)	;           WRITE BUFFER TO DISK
   50 E302  B7          	OR	A		;     ELSE:
   51 E303  C4 E50A     	CALL	NZ,WRTHST	; ELSE:
   52 E306  AF          	XOR 	A		;
   53 E307  32 F322     	LD	(HSTWRT),A	;
   54 E30A  C1          	POP	BC		;
   55 E30B  F1          	POP	AF		;
   56 E30C  32 F332     SELN:	LD	(CFORM),A	; CURRENT_FORMAT := FORMAT(DRIVE_NO);
   57 E30F  CD E365     	CALL	GFPA		; SET NEW FLOPRY_DISK_PARMS ADDRESS
   58 E312  22 F330     	LD	(FORM),HL	;
   59 E315  23          	INC	HL		;
   60 E316  23          	INC	HL		;
   61 E317  23          	INC	HL		;
   62 E318  23          	INC	HL		;
   63 E319  7E          	LD	A,(HL)		; INIT. NUMBER OF TRACKS ON ONE DISK PAGE
   64 E31A  32 F333     	LD 	(EOTV),A	;
   65 E31D  C5          	PUSH	BC		;
   66 E31E  3A F332     	LD	A,(CFORM)	;
   67 E321  E6 F8       	AND	11111000B	; REMOVE POSITION BITS
   68 E323  B7          	OR	A		;
   69 E324  17          	RLA			;
   70 E325  5F          	LD	E,A		;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  76
FLOPPY DISK DRIVER 

   71 E326  16 00       	LD	D,0		;
   72 E328  21 EA9C     	LD	HL,FSPA00	;
   73 E32B  19          	ADD	HL,DE		; INIT. ACTUAL DISK_PARMS_BLOCK
   74 E32C  11 F351     	LD	DE,DPBLCK	;
   75 E32F  01 0010     	LD	BC,10H		;
   76 E332  ED B0       	LDIR			;
   77 E334  2A F351     	LD	HL,(DPBLCK)	; SET ADDRESS OF DRBXX (XX=0,08,16,,56,64)
   78 E337  01 000D     	LD	BC,13		; REL. TO START
   79 E33A  09          	ADD	HL,BC		; ADDRESS OF OFFSET WORD
   80 E33B  EB          	EX	DE,HL		;
   81 E33C  21 EA8C     	LD	HL,TRKOFF	; TRACK OFFSET TABLE
   82 E33F  06 00       	LD	B,0		;
   83 E341  3A F312     	LD	A,(SEKDSK)	; BC: SEEK DISK NO.
   84 E344  4F          	LD	C,A		;
   85 E345  09          	ADD	HL,BC		;
   86 E346  09          	ADD	HL,BC		; HL= ADDRESS OF OFFSET VALUE IN OFFSET TB
   87 E347  01 0002     	LD	BC,2		; NO OF BYTES TO MOVE
   88 E34A  ED B0       	LDIR			;
   89 E34C  C1          	POP	BC		;
   90 E34D  21 EB74     	LD	HL,DPBASE	;
   91 E350  09          	ADD	HL,BC		; GET ADR. OF ACTUAL DISK_PARMS_HEADER
   92 E351  EB          	EX	DE,HL		;
   93 E352  21 000A     	LD	HL,10		;
   94 E355  19          	ADD	HL,DE		;
   95 E356  EB          	EX	DE,HL		;
   96 E357  3A F351     	LD	A,(DPBLCK)	; INIT. DISK_PARMS_HEADER WITH
   97 E35A  12          	LD	(DE),A		; ACTUAL DISK_PARMS_BLOCK
   98 E35B  13          	INC	DE		;
   99 E35C  3A F352     	LD	A,(DPBLCK+1)	;
  100 E35F  12          	LD	(DE),A		;
  101 E360  EB          RSELD:	EX	DE,HL		; HL:=DPH(DISK)
  102 E361  E1          	POP	HL		;
  103 E362  F9          	LD	SP,HL		;
  104 E363  EB          	EX	DE,HL		;
  105 E364  C9          	RET			;
  106                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  77
FLOPPY DISK DRIVER 

  108                   
  109 E365  21 EB2D     GFPA:	LD	HL,FDF1		;
  110 E368  3A F332     	LD	A,(CFORM)	;
  111 E36B  E6 F8       	AND	11111000B	; REMOVE POSITION BITS
  112 E36D  5F          	LD	E,A		;
  113 E36E  16 00       	LD	D,0		;
  114 E370  19          	ADD	HL,DE		;
  115 E371  C9          	RET			;
  116                   
  117                   ;SETTRACK
  118                   ;ENTRY: BC=TRACK NUMBER
  119 E372  60          SETT:	LD	H,B		;
  120 E373  69          	LD	L,C		;
  121 E374  22 F313     	LD	(SEKTRK),HL	;
  122 E377  C9          	RET			;
  123                   
  124                   ;SETSECTOR
  125                   ;ENTRY: BC=SECTOR NUMBER
  126 E378  69          SETS:	LD	L,C		;
  127 E379  60          	LD	H,B		;
  128 E37A  22 F315     	LD	(SEKSEC),HL	;
  129 E37D  C9          	RET			;
  130                   
  131                   ;SET DMA ADDRESS
  132                   ;ENTRY: BC=DMA ADDRESS
  133 E37E  60          SETD:	LD	H,B		;
  134 E37F  69          	LD	L,C		;
  135 E380  22 F32E     	LD	(DMAADR),HL	;
  136 E383  C9          	RET			;
  137                   
  138                   ;TRANSLATE SECTOR NUMBER
  139                   ;ENTRY: BC=SECTOR NUMBER
  140 E384  60          SECTRA:	LD	H,B		;
  141 E385  69          	LD	L,C		;
  142 E386  C9          	RET			;
  143                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  78
FLOPPY DISK DRIVER 

  145                   
  146                   ;READ THE SELECTED CP/M SECTOR
  147                   ;ENTRY:
  148                   ;EXIT : A=RESULT (0 OK,1 HARD ERROR)
  149                   
  150 E387  AF          XREAD:	XOR	A		;PATCHES FROM DIGITAL
  151 E388  32 F323     	LD	(UNACNT),A	;
  152 E38B  3E 01       	LD	A,1		;
  153 E38D  32 F32C     	LD	(READOP),A	; READ OPERATION
  154 E390  32 F32B     	LD	(RSFLAG),A	; MUST READ DATA
  155 E393  3E 02       	LD	A,WRUAL		;
  156 E395  32 F32D     	LD	(WRTYPE),A	; TREAT AS UNALLOCATED
  157 E398  C3 E436     	JP	RWOPER		; TO PERFORM THE READ
  158                   
  159                   ;WRITE THE SELECTED CP/M SECTOR
  160                   ;ENTRY:
  161                   ;EXIT : C=WRITETYPE A=RESULT
  162                   
  163 E39B  AF          XWRITE:	XOR	A		;
  164 E39C  32 F32C     	LD	(READOP),A	; NOT A READ OPERATION
  165 E39F  79          	LD	A,C		; WRITE TYPE IN C
  166 E3A0  32 F32D     	LD	(WRTYPE),A	;
  167 E3A3  FE 02       	CP	WRUAL		; WRITE UNALLOCATED?
  168 E3A5  C2 E3C0     	JP	NZ,CHKUNA	; CHECK FOR UNALLOCATED
  169                   
  170                   ;WRITE TO UNALLOCATED, SET PARAMETERS
  171                   
  172 E3A8  3A F353     	LD	A,(CPMRBP)	; UNACNT := BLKSIZE/128;
  173 E3AB  32 F323     	LD	(UNACNT),A	;
  174 E3AE  3A F312     	LD	A,(SEKDSK)	; UNADSK := SEKDSK;
  175 E3B1  32 F324     	LD	(UNADSK),A	;
  176 E3B4  2A F313     	LD	HL,(SEKTRK)	; UNATRK := SEKTRK;
  177 E3B7  22 F325     	LD	(UNATRK),HL	;
  178 E3BA  2A F315     	LD	HL,(SEKSEC)	; UNASEC := SEKSEC;
  179 E3BD  22 F327     	LD	(UNASEC),HL	;
  180                   
  181                   ;CHECK FOR WRITE TO UNALLOCATED SECTOR
  182                   
  183 E3C0  3A F323     CHKUNA:	LD	A,(UNACNT)	; ANY UNALLOCATED REMAIN?
  184 E3C3  B7          	OR	A		;
  185 E3C4  CA E42C     	JP	Z,ALLOC		; SKIP IF NOT
  186                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  79
FLOPPY DISK DRIVER 

  188                   
  189                   ;MORE UNALLOCATED RECORDS REMAIN
  190                   
  191 E3C7  3D          	DEC	A		; UNACNT := UNACNT -1;
  192 E3C8  32 F323     	LD	(UNACNT),A	;
  193 E3CB  3A F312     	LD	A,(SEKDSK)	; SAME DISK?
  194 E3CE  21 F324     	LD	HL,UNADSK	;
  195 E3D1  BE          	CP	(HL)		; SEKDSH=UNADSK?
  196 E3D2  C2 E42C     	JP	NZ,ALLOC	; SKIP IF NOT
  197                   
  198                   ;DISKS ARE THE SAME
  199                   
  200 E3D5  21 F325     	LD	HL,UNATRK	; SAME TRACK?
  201 E3D8  CD E4FE     	CALL	TRKCMP		; SEKTRK=UNATRK?
  202 E3DB  C2 E42C     	JP	NZ,ALLOC	; SKIP IF NOT
  203                   
  204                   ;TRACKS ARE THE SAME
  205                   
  206 E3DE  3A F315     	LD	A,(SEKSEC)	; SAME SECTOR?
  207 E3E1  21 F327     	LD	HL,UNASEC	;
  208 E3E4  BE          	CP	(HL)		; SEKSEC=UNASEC?
  209 E3E5  C2 E42C     	JP	NZ,ALLOC	; SKIP IF NOT
  210 E3E8  3A F316     	LD	A,(SEKSEC+1)	;
  211 E3EB  23          	INC	HL		;
  212 E3EC  BE          	CP	(HL)		; COMPARE MSB
  213 E3ED  C2 E42C     	JP	NZ,ALLOC	;
  214                   
  215                   ;MATCH, MOVE TO NEXT SECTOR FOR FUTURE REFERENCE
  216                   
  217 E3F0  2A F327     	LD	HL,(UNASEC)	;
  218 E3F3  23          	INC	HL		;
  219 E3F4  22 F327     	LD	(UNASEC),HL	; UNASEC:=UNASEC+1
  220 E3F7  EB          	EX	DE,HL		;
  221 E3F8  21 F354     	LD	HL,CPMSPT	; GET SECTORS PER TRACK
  222 E3FB  C5          	PUSH	BC		;
  223 E3FC  4E          	LD	C,(HL)		;
  224 E3FD  23          	INC	HL		;
  225 E3FE  46          	LD	B,(HL)		;
  226 E3FF  EB          	EX	DE,HL		;
  227 E400  A7          	AND	A		; RESET CARRY
  228 E401  ED 42       	SBC	HL,BC		; END OF TRACK
  229 E403  C1          	POP	BC		;
  230 E404  DA E414     	JP	C,NOOVF		; SKIP IF NO OVERFLOW
  231                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  80
FLOPPY DISK DRIVER 

  233                   
  234                   ;OVERFLOW TO NEXT TRACK
  235 E407  21 0000     	LD	HL,00		; UNASEC:=0
  236 E40A  22 F327     	LD	(UNASEC),HL	;
  237 E40D  2A F325     	LD	HL,(UNATRK)	;
  238 E410  23          	INC	HL		;
  239 E411  22 F325     	LD	(UNATRK),HL	; UNATRK:=UNATRK+1
  240                   
  241                   ;MATCH FOUND, MARK AS UNNECESSARY READ
  242                   
  243 E414  AF          NOOVF:	XOR	A		;
  244 E415  32 F32B     	LD	(RSFLAG),A	; RSFLAG:=0
  245 E418  3A F315     	LD	A,(SEKSEC)	;
  246 E41B  21 F356     	LD	HL,SECMSK	;
  247 E41E  A6          	AND	(HL)		;
  248 E41F  BE          	CP	(HL)		;
  249 E420  3E 00       	LD	A,0		;
  250 E422  C2 E426     	JP	NZ,SETMSK	;
  251 E425  3C          	INC	A		;
  252 E426  32 F329     SETMSK:	LD	(UNAMSK),A	;
  253 E429  C3 E436     	JP	RWOPER		; TO PERFORM THE WRITE
  254                   
  255                   ;NOT AN UNALLOCATED RECORD, REQUIRES PRE-READ
  256                   
  257 E42C  AF          ALLOC:	XOR	A		;
  258 E42D  32 F323     	LD	(UNACNT),A	; UNACNT:=0
  259 E430  3A F356     	LD	A,(SECMSK)	;
  260 E433  32 F32B     	LD	(RSFLAG),A	; RSFLAG:=1
  261                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  81
FLOPPY DISK DRIVER 

  263                   
  264                   ; COMMON CODE FOR READ AND WRITE FOLLOWS
  265                   
  266 E436  21 0000     RWOPER:	LD	HL,0		;
  267 E439  39          	ADD	HL,SP		;
  268 E43A  31 F680     	LD	SP,STACK	; ESTABLISH LOCAL STACK
  269 E43D  E5          	PUSH	HL		; SAVE OLD SP
  270 E43E  3A F357     	LD	A,(SECSHF)	; COMPUTE HOST SECTOR
  271 E441  47          	LD	B,A		;
  272 E442  2A F315     	LD	HL,(SEKSEC)	;
  273 E445  05          RSECS:	DEC	B		;
  274 E446  CA E450     	JP	Z,SETSH		;
  275 E449  CB 3C       	SRL	H		; HOST_SECTOR := SEEK_SECTOR DIVIDED
  276 E44B  CB 1D       	RR	L		; WITH SECTOR SHIFT CONSTANT
  277 E44D  C3 E445     	JP	RSECS		;
  278 E450  22 F31F     SETSH:	LD	(SEKHST),HL	; HOST SECTOR TO SEEK
  279                   
  280                   ;ACTIVE HOST SECTOR?
  281 E453  21 F321     	LD	HL,HSTACT	; HOST ACTIVE FLAG
  282 E456  7E          	LD	A,(HL)		;
  283 E457  36 01       	LD	(HL),1		; ALWAYS BECOMES 1
  284 E459  B7          	OR	A		; WAS IT ALREADY?
  285 E45A  CA E489     	JP	Z,FILHST	; FILL HOST IF NOT
  286                   
  287                   ;HOST BUFFER ACTIVE, SAME AS SEEK BUFFER?
  288                   
  289 E45D  3A F312     	LD	A,(SEKDSK)	;
  290 E460  21 F317     	LD	HL,HSTDSK	; SAME DISK?
  291 E463  BE          	CP	(HL)		; SEKDSK=HSTDSK?
  292 E464  C2 E482     	JP	NZ,NOMATC	;
  293                   
  294                   ;SAME DISK, SAME TRACK?
  295                   
  296 E467  21 F318     	LD	HL,HSTTRK	;
  297 E46A  CD E4FE     	CALL	TRKCMP		; SEKTRK=HSTTRK
  298 E46D  C2 E482     	JP	NZ,NOMATC	;
  299                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  82
FLOPPY DISK DRIVER 

  301                   
  302                   ;SAME DISK, SAME TRACK, SAME SECTOR?
  303                   
  304 E470  3A F31F     	LD	A,(SEKHST)	;
  305 E473  21 F31A     	LD	HL,HSTSEC	; SEKHST=HSTSEC?
  306 E476  BE          	CP	(HL)		;
  307 E477  C2 E482     	JP	NZ,NOMATC	; LSB COMPARE
  308 E47A  3A F320     	LD	A,(SEKHST+1)	;
  309 E47D  23          	INC	HL		;
  310 E47E  BE          	CP	(HL)		; MSB COMPARE
  311 E47F  CA E4A6     	JP	Z,MATCH		; SKIP IF MATCH
  312                   
  313                   ;PROPER DISK, BUT NOT CORRECT SECTOR
  314                   
  315 E482  3A F322     NOMATC:	LD	A,(HSTWRT)	; HOST WRITTEN?
  316 E485  B7          	OR	A		;
  317 E486  C4 E50A     	CALL	NZ,WRTHST	; WRITE HOST BUFFER TO DISK
  318                   
  319                   ;MAY HAVE TO FILL THE HOST BUFFER
  320                   
  321 E489  3A F312     FILHST:	LD	A,(SEKDSK)	;
  322 E48C  32 F317     	LD	(HSTDSK),A	;
  323 E48F  2A F313     	LD	HL,(SEKTRK)	;
  324 E492  22 F318     	LD	(HSTTRK),HL	;
  325 E495  2A F31F     	LD	HL,(SEKHST)	;
  326 E498  22 F31A     	LD	(HSTSEC),HL	;
  327 E49B  3A F32B     	LD	A,(RSFLAG)	; NEAD TO READ?
  328 E49E  B7          	OR	A		;
  329 E49F  C4 E517     	CALL	NZ,RDHST	; YES, IF 1
  330 E4A2  AF          	XOR	A		;
  331 E4A3  32 F322     	LD	(HSTWRT),A	; NO PENDING WRITE
  332                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  83
FLOPPY DISK DRIVER 

  334                   
  335                   ;COPY DATA TO OR FROM BUFFER
  336                   
  337 E4A6  3A F315     MATCH:	LD	A,(SEKSEC)	; MASK BUFFER NUMBER
  338 E4A9  21 F356     	LD	HL,SECMSK	; LEAST SIGNIF BITS
  339 E4AC  A6          	AND	(HL)		; TO POINT OUT POSISTION IN HOST BUFFER
  340 E4AD  6F          	LD	L,A		; READY TO SHIFT
  341 E4AE  26 00       	LD	H,00H		;
  342 E4B0  29          	ADD	HL,HL		; SHIFT LEFT 7
  343 E4B1  29          	ADD	HL,HL		;
  344 E4B2  29          	ADD	HL,HL		;
  345 E4B3  29          	ADD	HL,HL		;
  346 E4B4  29          	ADD	HL,HL		;
  347 E4B5  29          	ADD	HL,HL		;
  348 E4B6  29          	ADD	HL,HL		; BUFF_OFFSET:=128*(SEEKSEC AND SECMASK);
  349                   
  350                   ;HL HAS RELATIVE HOST BUFFER ADDRESS
  351                   
  352 E4B7  11 EE81     	LD	DE,HSTBUF	;
  353 E4BA  19          	ADD	HL,DE		; HL:=HOST BUFFER ADDRESS
  354 E4BB  EB          	EX	DE,HL		; NOW IN DE
  355 E4BC  2A F32E     	LD	HL,(DMAADR)	; GET/PUT CP/M DATA
  356 E4BF  01 0080     	LD	BC,128		; LENGTH OF MOVE
  357 E4C2  EB          	EX	DE,HL		;
  358 E4C3  3A F32C     	LD	A,(READOP)	; WHICH WAY?
  359 E4C6  B7          	OR	A		;
  360 E4C7  C2 E4D0     	JP	NZ,RWMOVE	; SKIP IF READ
  361                   
  362                   ;WRITE OPERATION, MARK AND SWITCH DIRECTION
  363                   
  364 E4CA  3E 01       	LD	A,1		; HOSTWRT:=1;
  365 E4CC  32 F322     	LD	(HSTWRT),A	;
  366 E4CF  EB          	EX	DE,HL		; SOURCE/DEST SWAP
  367                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  84
FLOPPY DISK DRIVER 

  369                   
  370                   ;BC INITIALLY 128, HL IS SOURCE, DE IS DEST
  371                   
  372 E4D0  ED B0       RWMOVE:	LDIR			;
  373                   
  374                   ;DATA HAS BEEN MOVED TO/FROM HOST BUFFER
  375                   
  376 E4D2  3A F32D     	LD	A,(WRTYPE)	; WRITE TYPE
  377 E4D5  FE 01       	CP	WRDIR		; TO DIRECTORY?
  378 E4D7  21 F32A     	LD	HL,ERFLAG	; IN CASE OF ERRORS
  379 E4DA  7E          	LD	A,(HL)		;
  380 E4DB  F5          	PUSH	AF		;
  381 E4DC  B7          	OR	A		;
  382 E4DD  CA E4E4     	JP	Z,RRWOPX	;
  383 E4E0  AF          	XOR	A		;
  384 E4E1  32 F321     	LD	(HSTACT),A	; DO: SET HOST_ACTIVE:=FALSE
  385 E4E4  F1          RRWOPX:	POP	AF		;
  386 E4E5  36 00       	LD	(HL),0		;
  387 E4E7  C2 E4FB     	JP	NZ,RRWOP	; NO FURTHER PROCESSING
  388                   
  389                   ;CLEAR HOST BUFFER FOR DIRECTORY WRITE
  390                   
  391 E4EA  B7          	OR	A		; ERRORS?
  392 E4EB  C2 E4FB     	JP	NZ,RRWOP	; SKIP IF NOT SO
  393 E4EE  AF          	XOR	A		;
  394 E4EF  32 F322     	LD	(HSTWRT),A	; BUFFER WRITTEN
  395 E4F2  CD E50A     	CALL	WRTHST		;
  396 E4F5  21 F32A     	LD	HL,ERFLAG	;
  397 E4F8  7E          	LD	A,(HL)		;
  398 E4F9  36 00       	LD	(HL),0		;
  399                   
  400 E4FB  E1          RRWOP:	POP	HL		; RETURN:
  401 E4FC  F9          	LD	SP,HL		; SP:=GLOBAL_SP;
  402 E4FD  C9          	RET			;
  403                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  85
FLOPPY DISK DRIVER 

  405                   
  406                   ;UTILITY SUBROUTINE FOR 16-BIT COMPARE
  407                   ;HL=UNATRK OR HSTTRK, COMPARE WITH SEKTRK
  408                   
  409 E4FE  EB          TRKCMP:	EX	DE,HL		;
  410 E4FF  21 F313     	LD	HL,SEKTRK	;
  411 E502  1A          	LD	A,(DE)		; LOW BYTE COMPARE
  412 E503  BE          	CP	(HL)		; SAME?
  413 E504  C0          	RET	NZ		; RETURN IF NOT
  414                   
  415                   ;LOW BYTES EQUAL, TEST HIGH LS
  416                   
  417 E505  13          	INC	DE		;
  418 E506  23          	INC	HL		;
  419 E507  1A          	LD	A,(DE)		;
  420 E508  BE          	CP	(HL)		; SETS FLAGS
  421 E509  C9          	RET			;
  422                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  86
FLOPPY DISK DRIVER 

  424                   
  425                   ;==========================================================
  426                   ;= WRITEHOST performs the physical write to the host disk.=
  427                   ;==========================================================
  428 E50A  3A F35B     WRTHST:	LD	A,(DSKTYP)	;   IF: DISK TYPE := HARD
  429 E50D  B7          	OR	A		; THEN: GOTO HARD WRITE HOST
  430 E50E  C2 E801     	JP	NZ,HWRHST	; ELSE:
  431 E511  CD E52E     	CALL	CHKTRK		;
  432 E514  C3 E5F6     	JP	SECWR		;
  433                   
  434                   ;==========================================================
  435                   ;= READHOST performs the physical read fhom the host disk =
  436                   ;==========================================================
  437 E517  3A F329     RDHST:	LD	A,(UNAMSK)	;
  438 E51A  B7          	OR	A		;
  439 E51B  C2 E521     	JP	NZ,RCHECK	; IF UNAMSK THEN FORCE PRE_READ;
  440 E51E  32 F323     	LD	(UNACNT),A	;
  441 E521  3A F35B     RCHECK:	LD	A,(DSKTYP)	;   IF: DISK TYPE := HARD
  442 E524  B7          	OR	A		; THEN: GOTO HARD READ HOST
  443 E525  C2 E81C     	JP	NZ,HRDHST	; ELSE:
  444 E528  CD E52E     	CALL	CHKTRK		;
  445 E52B  C3 E5AC     	JP	SECRD		;
  446                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  87
FLOPPY DISK DRIVER 

  448                   
  449                   ;=============================================================================
  450                   ;= CHECK HOST DISK AND TRACK EQUAL TO LAST HOST AND DISK                     = 
  451                   ;=                                                                           =
  452                   ;=   S U P P O R T S   O N L Y   2 5 6   S E C T O R S   A N D   T R A C K S =
  453                   ;=============================================================================
  454 E52E  3A F31A     CHKTRK:	LD	A,(HSTSEC)	;
  455 E531  4F          	LD	C,A		; SECTOR:=HSTSEC;
  456 E532  3A F333     	LD	A,(EOTV)	; HEADNO:=0;
  457 E535  47          	LD	B,A		;
  458 E536  3D          	DEC	A		;
  459 E537  B9          	CP	C		;
  460 E538  3A F317     	LD	A,(HSTDSK)	;
  461 E53B  D2 E549     	JP	NC,SET1		; IF HSTSEC>EOTV-1 THEN END;
  462 E53E  F6 04       	OR	4		; BEGIN
  463 E540  32 F339     	LD	(DSKNO),A	;   HEADNO:=1;
  464 E543  79          	LD	A,C		;   SECTOR:=SECTOR-EOTV;
  465 E544  90          	SUB	B		; END;
  466 E545  4F          	LD	C,A		;
  467 E546  C3 E54C     	JP	SET2		;
  468 E549  32 F339     SET1:	LD	(DSKNO),A	;
  469 E54C  06 00       SET2:	LD	B,0		;
  470 E54E  2A F358     	LD	HL,(TRANTB)	; TRANSLATE SECTOR
  471 E551  09          	ADD 	HL,BC		;
  472 E552  7E          	LD	A,(HL)		;
  473 E553  32 F33D     	LD	(ACSEC),A	; ACTUAL_SECTOR := TRANSLATED_SECTOR
  474 E556  3A F318     	LD	A,(HSTTRK)	;
  475 E559  32 F33C     	LD	(ACTRA),A	; ACTUAL_TRACK := HOST_TRACK
  476 E55C  21 EE81     	LD	HL,HSTBUF	;
  477 E55F  22 F33A     	LD	(DSKAD),HL	;
  478 E562  3A F317     	LD	A,(HSTDSK)	;   IF: HOST_DISK := LAST_DISK THEN
  479 E565  21 F31C     	LD	HL,LSTDSK	;
  480 E568  BE          	CP	(HL)		;         IF: HOST_TRACK := LAST_TRACK THEN
  481 E569  C2 E57C     	JP	NZ,SEEKT	;
  482 E56C  3A F318     	LD	A,(HSTTRK)	;             END
  483 E56F  21 F31D     	LD	HL,LSTTRK	;
  484 E572  BE          	CP	(HL)		;       ELSE:
  485 E573  C2 E57C     	JP	NZ,SEEKT	;
  486 E576  3A F319     	LD	A,(HSTTRK+1)	; ELSE:
  487 E579  23          	INC	HL		;
  488 E57A  BE          	CP	(HL)		; COMPARE MSB
  489 E57B  C8          	RET	Z		;
  490                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  88
FLOPPY DISK DRIVER 

  492                   
  493 E57C  3A F317     SEEKT:	LD	A,(HSTDSK)	; LAST_DISK := HOST_DISK
  494 E57F  32 F31C     	LD	(LSTDSK),A	;
  495 E582  2A F318     	LD	HL,(HSTTRK)	; LAST_TRACK := HOST_TRACK
  496 E585  22 F31D     	LD	(LSTTRK),HL	;
  497 E588  CD E73A     	CALL	CLFIT		; CLEAR FLOPPY INTERRURT FLAG
  498 E58B  CD E704     	CALL	FLO7		; SEEK DRIVE_NO, HEAD AND SECTOR
  499 E58E  CD E741     	CALL	WFITR		; AWAIT FLOPPY INTERRUPT
  500 E591  3A F339     	LD	A,(DSKNO)	;
  501 E594  E6 03       	AND	3		;
  502 E596  C6 20       	ADD	A,32		; REG. BC := COMPLETION CODE
  503 E598  B8          	CP	B		; IF STATUS=SEEK_END THEN
  504 E599  C8          	RET	Z		;   RETURN;
  505 E59A  CD E73A     RECA:	CALL	CLFIT		;
  506 E59D  CD E6BB     	CALL	FLO4		; RECALIBRATE;
  507 E5A0  C5          	PUSH	BC		;
  508 E5A1  CD E741     	CALL 	WFITR		;
  509 E5A4  CD E704     	CALL	FLO7		; SEEK(ACTRA);
  510 E5A7  CD E741     	CALL	WFITR		;
  511 E5AA  C1          	POP	BC		;
  512 E5AB  C9          	RET			; RETURN;
  513                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  89
FLOPPY DISK DRIVER 

  515                   
  516 E5AC  3E 0A       SECRD:	LD	A,10		;
  517 E5AE  32 F33E     	LD	(REPET),A	;
  518 E5B1  CD E620     RPSC:	CALL	FDSTAR		;
  519 E5B4  CD E73A     	CALL	CLFIT		;
  520 E5B7  2A F330     	LD	HL,(FORM)	;
  521 E5BA  4E          	LD	C,(HL)		;
  522 E5BB  23          	INC	HL		;
  523 E5BC  46          	LD	B,(HL)		;
  524 E5BD  23          	INC	HL		;
  525 E5BE  CD E779     	CALL	FLPW		;
  526 E5C1  CD E616     	CALL	RFDAT		;
  527 E5C4  CD E750     	CALL	WATIR		;
  528 E5C7  0E 00       	LD	C,0		;
  529 E5C9  21 F33F     SECCH:	LD	HL,RSTAB	;
  530 E5CC  7E          	LD	A,(HL)		;
  531 E5CD  E6 F8       	AND	0F8H		;
  532 E5CF  C8          	RET	Z		;
  533 E5D0  E6 08       SCRP:	AND	8		;
  534 E5D2  C2 E5EC     	JP	NZ,SCR1		;
  535 E5D5  3A F33E     	LD	A,(REPET)	;
  536 E5D8  3D          	DEC	A		;
  537 E5D9  32 F33E     	LD	(REPET),A	;
  538 E5DC  CA E5EC     	JP	Z,SCR1		;
  539 E5DF  FE 05       	CP	5		;
  540 E5E1  CC E59A     	CALL	Z,RECA		;
  541 E5E4  AF          	XOR	A		;
  542 E5E5  B9          	CP	C		;
  543 E5E6  CA E5B1     	JP	Z,RPSC		;
  544 E5E9  C3 E5FB     	JP	RPSW		;
  545 E5EC  79          SCR1:	LD	A,C		;
  546 E5ED  32 F321     	LD	(HSTACT),A	;
  547 E5F0  3E 01       	LD	A,1		;
  548 E5F2  32 F32A     	LD	(ERFLAG),A	;
  549 E5F5  C9          	RET			;
  550                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  90
FLOPPY DISK DRIVER 

  552                   
  553 E5F6  3E 0A       SECWR:	LD	A,10		;
  554 E5F8  32 F33E     	LD	(REPET),A	;
  555 E5FB  CD E620     RPSW:	CALL	FDSTAR		;
  556 E5FE  CD E73A     	CALL	CLFIT		;
  557 E601  2A F330     	LD	HL,(FORM)	;
  558 E604  4E          	LD	C,(HL)		;
  559 E605  23          	INC	HL		;
  560 E606  46          	LD	B,(HL)		;
  561 E607  23          	INC	HL		;
  562 E608  CD E758     	CALL	FLPR		;
  563 E60B  CD E61B     	CALL	WFDAT		;
  564 E60E  CD E750     	CALL	WATIR		;
  565 E611  0E 01       	LD	C,1		;
  566 E613  C3 E5C9     	JP	SECCH		;
  567                   
  568 E616  3E 06       RFDAT:	LD	A,6		;
  569 E618  C3 E783     	JP	GNCOM		;
  570                   
  571 E61B  3E 05       WFDAT:	LD	A,5		;
  572 E61D  C3 E783     	JP	GNCOM		;
  573                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  91
FLOPPY DISK DRIVER 

  575                   
  576 E620  DB 14       FDSTAR:	IN	A,(SW1)		; PROCEDURE START_FLOPPY_MOTOR;
  577 E622  E6 80       	AND	80H		; BEGIN
  578 E624  C8          	RET	Z		;   IF MINI_DRIVE THEN BEGIN
  579 E625  F3          	DI			;   BEGIN
  580 E626  2A FFE1     	LD	HL,(EXCNT1)	;     STOPPED:=STOP_TIMER=0;
  581 E629  7D          	LD	A,L		;     STOP_TIMER:=FD_TIME_OUT;
  582 E62A  B4          	OR	H		;     IF STOPPED THEN
  583 E62B  2A FFE7     	LD	HL,(FDTIMO)	;     BEGIN
  584 E62E  22 FFE1     	LD	(EXCNT1),HL	;       START_MOTOR;
  585 E631  FB          	EI			;       WAITD(50); (* WAIT 1 SEC *)
  586 E632  C0          	RET	NZ		;     END;
  587 E633  3E 01       	LD	A,1		;   END;
  588 E635  D3 14       	OUT	(SW1),A		; END;
  589 E637  21 0032     	LD	HL,50		;
  590 E63A  CD E648     	CALL	WAITD		;
  591 E63D  C9          	RET			;
  592                   
  593 E63E  DB 14       FDSTOP:	IN	A,(SW1)		; PROCEDURE STOP_FLOPPY_MOTOR;
  594 E640  E6 80       	AND	80H		; BEGIN (* CALLED WHEN STOP_IIMER REACH 0 *)
  595 E642  C8          	RET	Z		;   IF MINI_DRIVE THEN
  596 E643  3E 00       	LD	A,0		;     STOP_MOTOR;
  597 E645  D3 14       	OUT	(SW1),A		; END;
  598 E647  C9          	RET			;
  599                   
  600 E648  22 FFE3     WAITD:	LD	(DELCNT),HL	; PROCEDURE WAITD;
  601 E64B  2A FFE3     WAIT10:	LD	HL,(DELCNT)	;
  602 E64E  7D          	LD	A,L		;
  603 E64F  B4          	OR	H		;
  604 E650  C2 E64B     	JP	NZ,WAIT10	;
  605 E653  C9          	RET			;
  606                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  92
FLOPPY DISK DRIVER 

  608                   
  609 E654  3A F322     XHOME:	LD	A,(HSTWRT)	;PATCH FROM DIG. CHECK FOR PENDING WRITE
  610 E657  B7          	OR	A		;
  611 E658  20 03       	JR	NZ,XHOM01	;
  612 E65A  32 F321     	LD	(HSTACT),A	;CLEAR HOST ACTIVE FLAG
  613                   				;END PATCH FROM DIGITAL.
  614 E65D  3A F35B     XHOM01:	LD	A,(DSKTYP)	;   IF: DISK TYPE := HARD
  615 E660  A7          	AND	A		; THEN:
  616 E661  CA E68A     	JP	Z,XHOM20	;
  617 E664  3A F312     	LD	A,(SEKDSK)	;
  618 E667  32 F31C     	LD	(LSTDSK),A	;       LAST_DISK:=SEEK_DISK
  619 E66A  2A F351     	LD	HL,(DPBLCK)	;
  620 E66D  11 000D     	LD	DE,13		;       GET TRACK OFFSET IN DISK PARMS. BLOCK
  621 E670  19          	ADD	HL,DE		;
  622 E671  5E          	LD	E,(HL)		;
  623 E672  23          	INC	HL		;
  624 E673  56          	LD	D,(HL)		;
  625 E674  ED 53 F31D  	LD	(LSTTRK),DE	;       LAST_TRACK:=TRACK_OFFSET
  626 E678  CD E87C     	CALL	STSKFL		;       SET UP TASK FILE TO WD1000
  627 E67B  CD E8DF     	CALL	HDSEEK		;       POSITION HEADS
  628 E67E  D0          	RET	NC		;         IF: NO COMMAND ISSUED
  629 E67F  CD E8F1     	CALL	WAITHD		;       THEN: END
  630 E682  DB 67       XHOM10:	IN	A,(HDSTRG)	;       ELSE:
  631 E684  E6 10       	AND	10H		;       AWAIT HARD DISK INTERRUPT
  632 E686  CA E682     	JP	Z,XHOM10	;       AWAIT SEEK COMPLETE
  633 E689  C9          	RET			;       END.
  634 E68A  CD E620     XHOM20:	CALL	FDSTAR		; ELSE:
  635 E68D  3A F312     	LD	A,(SEKDSK)	;
  636 E690  32 F339     	LD	(DSKNO),A	;
  637 E693  32 F31C     	LD	(LSTDSK),A	;
  638 E696  AF          	XOR	A		;
  639 E697  32 F31D     	LD	(LSTTRK),A	; LASTTRACK:=0
  640 E69A  32 F31E     	LD	(LSTTRK+1),A	;
  641 E69D  CD E73A     	CALL	CLFIT		; CLEAR FLOPPY INTERRUPT
  642 E6A0  CD E6BB     	CALL	FLO4		; RECALIBRATE FLOPPY
  643 E6A3  CD E741     	CALL	WFITR		; AWAIT FLOPPY INTERRUPT
  644 E6A6  C9          	RET			;
INPUT CONVERSION TABLE Z80ASM 1.32 Page  93
FLOPPY DISK DRIVER 

  646                   
  647                   				; PROCEDURE WAIT_READY_WRITE;
  648 E6A7  DB 04       FLO2:	IN	A,(FDC)		;
  649 E6A9  E6 C0       	AND	0C0H		;
  650 E6AB  FE 80       	CP	080H		;
  651 E6AD  C2 E6A7     	JP	NZ,FLO2		;
  652 E6B0  C9          	RET			;
  653                   
  654                   				; PROCEDURE WAIT_READY_READ;
  655 E6B1  DB 04       FLO3:	IN	A,(FDC)		;
  656 E6B3  E6 C0       	AND	0C0H		;
  657 E6B5  FE C0       	CP	0C0H		;
  658 E6B7  C2 E6B1     	JP	NZ,FLO3		;
  659 E6BA  C9          	RET			;
  660                   
  661                   				; PROCEDURE RECALIBRATE;
  662 E6BB  CD E6A7     FLO4:	CALL	FLO2		;    WAIT_READY_WRITE;
  663 E6BE  3E 07       	LD	A,7		;
  664 E6C0  D3 05       	OUT	(FDD),A		;    RECALIBRATE;
  665 E6C2  CD E6A7     	CALL	FLO2		;    WAIT_READY_WRITE;
  666 E6C5  3A F339     	LD	A,(DSKNO)	;
  667 E6C8  E6 03       	AND	3		;
  668 E6CA  D3 05       	OUT	(FDD),A		;    SELECT_DRIVE;
  669 E6CC  C9          	RET			;
  670                   
  671                   				; PROCEDURE SENSE_DRIVE_STATUS;
  672 E6CD  CD E6A7     FLO5:	CALL	FLO2		; WAIT_READY_WRITE;
  673 E6D0  3E 04       	LD	A,4		;
  674 E6D2  D3 05       	OUT	(FDD),A		;
  675 E6D4  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  676 E6D7  3A F339     	LD	A,(DSKNO)	;
  677 E6DA  E6 03       	AND	3		;
  678 E6DC  D3 05       	OUT	(FDD),A		; SELECT_DRIVE;
  679 E6DE  CD E6B1     	CALL	FLO3		; WAIT_READY_READ;
  680 E6E1  DB 05       	IN	A,(FDD)		;
  681 E6E3  32 F33F     	LD	(RSTAB),A	; RSTAB:=INTERRUPT_REGISTER;
  682 E6E6  C9          	RET			;
  683                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  94
FLOPPY DISK DRIVER 

  685                   
  686                   				; PROCEDURE SENSE_INTERRUPT_STATUS;
  687 E6E7  CD E6A7     FLO6:	CALL	FLO2		; WAIT_READY_WRITE;
  688 E6EA  3E 08       	LD	A,8		;
  689 E6EC  D3 05       	OUT	(FDD),A		; SENSE_INT;
  690 E6EE  CD E6B1     	CALL	FLO3		; WAIT_READY_READ;
  691 E6F1  DB 05       	IN	A,(FDD)		;
  692 E6F3  32 F33F     	LD	(RSTAB),A	; RSTAB:=STATUS_REGISTER_0;
  693 E6F6  E6 C0       	AND	0C0H		;
  694 E6F8  FE 80       	CP	080H		;
  695 E6FA  C8          	RET	Z		;
  696 E6FB  CD E6B1     	CALL	FLO3		; WAIT_READY_READ;
  697 E6FE  DB 05       	IN	A,(FDD)		;
  698 E700  32 F340     	LD	(RSTAB+1),A	; RSTAB1:=STATUS_REGISTER_1;
  699 E703  C9          	RET			;
  700                   
  701                   				; PROCEDURE SEEK;
  702 E704  CD E6A7     FLO7:	CALL	FLO2		; WAIT_READY_WRITE;
  703 E707  3E 0F       	LD	A,15		;
  704 E709  D3 05       	OUT	(FDD),A		; SEEK;
  705 E70B  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  706 E70E  3A F339     	LD	A,(DSKNO)	; SELECT_DRIVE_AND_HEAD;
  707 E711  E6 03       	AND	3		;
  708 E713  D3 05       	OUT	(FDD),A		;
  709 E715  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  710 E718  3A F33C     	LD	A,(ACTRA)	;
  711 E71B  D3 05       	OUT	(FDD),A		; SELECT_CYLINDER;
  712 E71D  C9          	RET			;
  713                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  95
FLOPPY DISK DRIVER 

  715                   
  716                   				; PROCEDURE READ_RESULT;
  717 E71E  21 F33F     RSULT:	LD	HL,RSTAB	; FOR D:=7 DOWNTO 0 DO
  718 E721  16 07       	LD	D,7		; BEGIN
  719 E723  CD E6B1     RSL1:	CALL	FLO3		;   WAIT_READY_READ;
  720 E726  DB 05       	IN	A,(FDD)		;   RESULT_TABLE(D):=READCHAR(FDD);
  721 E728  77          	LD	(HL),A		;
  722 E729  23          	INC	HL		;
  723 E72A  3E 04       	LD	A,4		;
  724 E72C  3D          RSL2:	DEC	A		;   DELAY;
  725 E72D  C2 E72C     	JP	NZ,RSL2		;
  726 E730  DB 04       	IN	A,(FDC)		;
  727 E732  E6 10       	AND	10H		;
  728 E734  C8          	RET	Z		;
  729 E735  15          	DEC	D		;
  730 E736  C2 E723     	JP	NZ,RSL1		;
  731 E739  C9          	RET			; END;
  732                   
  733 E73A  F3          CLFIT:	DI			; PROCEDURE CLEAR_FLOPPY_INTERRUPT;
  734 E73B  AF          	XOR	A		;
  735 E73C  32 F34F     	LD	(FL_FLG),A	;
  736 E73F  FB          	EI			;
  737 E740  C9          	RET			;
  738                   
  739 E741  CD E750     WFITR:	CALL	WATIR		; PROCEDURE WAIT_CLEAR_FD_INTERRUPT;
  740 E744  3A F33F     	LD	A,(RSTAB)	;
  741 E747  47          	LD	B,A		;
  742 E748  3A F340     	LD	A,(RSTAB+1)	;
  743 E74B  4F          	LD	C,A		;
  744 E74C  CD E73A     	CALL	CLFIT		;
  745 E74F  C9          	RET			;
  746                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  96
FLOPPY DISK DRIVER 

  748                   
  749 E750  3A F34F     WATIR:	LD	A,(FL_FLG)	; PROCEDURE WAIT_FD_INTERRUPT;
  750 E753  B7          	OR	A		;
  751 E754  CA E750     	JP	Z,WATIR		;
  752 E757  C9          	RET			;
  753                   
  754 E758  3E 05       FLPR:	LD	A,5		; PROCEDURE START_DMA_READ;  
  755 E75A  F3          	DI			;
  756 E75B  D3 FA       	OUT	(DMAMAS),A	; SET_CH1_MASK;
  757 E75D  3E 49       	LD	A,49H		; MODE:=READ;
  758 E75F  D3 FB       FLFW:	OUT	(DMAMOD),A	; SELECT_MODE;
  759 E761  D3 FC       	OUT	(DMACBC),A	; CLEAR_BYTECOUNTER;
  760 E763  3A F33A     	LD	A,(DSKAD+0)	;
  761 E766  D3 F2       	OUT	(DMAAD1),A	; SET_LOW_ADDRESS;
  762 E768  3A F33B     	LD	A,(DSKAD+1)	;
  763 E76B  D3 F2       	OUT	(DMAAD1),A	; SET_HIGH_ADDRESS;
  764 E76D  79          	LD	A,C		;
  765 E76E  D3 F3       	OUT	(DMACN1),A 	; SET_LOW_COUNT;
  766 E770  78          	LD	A,B		;
  767 E771  D3 F3       	OUT	(DMACN1),A	; SET_HIGH_COUNT;
  768 E773  3E 01       	LD	A,1		;
  769 E775  D3 FA       	OUT	(DMAMAS),A	; CLEAR_CH1_MASK;
  770 E777  FB          	EI			;
  771 E778  C9          	RET			;
  772                   
  773 E779  3E 05       FLPW:	LD	A,5		; PROCEDURE START_DMA_WRITE;
  774 E77B  F3          	DI			;
  775 E77C  D3 FA       	OUT 	(DMAMAS),A	; SET_CH1_MASK;
  776 E77E  3E 45       	LD	A,45H		; MODE:=WRITE;
  777 E780  C3 E75F     	JP	FLFW		; GOTO START_DMA_COMMON;
  778                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  97
FLOPPY DISK DRIVER 

  780                   
  781 E783  F5          GNCOM:	PUSH	AF		; PROCEDURE GENERAL_COMMAND;
  782 E784  F3          	DI			;
  783 E785  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  784 E788  F1          	POP	AF		;
  785 E789  46          	LD	B,(HL)		;
  786 E78A  23          	INC	HL		;
  787 E78B  80          	ADD	A,B		; ADD MF/FMF TO COMMAND;
  788 E78C  D3 05       	OUT	(FDD),A		;
  789 E78E  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  790 E791  3A F339     	LD	A,(DSKNO)	;
  791 E794  D3 05       	OUT	(FDD),A		; SELECT_HEAD_AND_DRIVE;
  792 E796  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  793 E799  3A F33C     	LD	A,(ACTRA)	;
  794 E79C  D3 05       	OUT	(FDD),A		; SELECT_CYLINDER;
  795 E79E  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  796 E7A1  3A F339     	LD	A,(DSKNO)	;
  797 E7A4  1F          	RRA			;
  798 E7A5  1F          	RRA			;
  799 E7A6  E6 03       	AND	3		;
  800 E7A8  D3 05       	OUT	(FDD),A		; SELECT_HEAD;
  801 E7AA  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  802 E7AD  3A F33D     	LD	A,(ACSEC)	;
  803 E7B0  D3 05       	OUT	(FDD),A		; SELECT_SECTOR;
  804 E7B2  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  805 E7B5  7E          	LD	A,(HL)		;
  806 E7B6  23          	INC	HL		;
  807 E7B7  D3 05       	OUT	(FDD),A		; SELECT_NUMBER_TYPE;
  808 E7B9  CD E6A7     	CALL	FLO2		; WAIT_READY_WRITE;
  809 E7BC  7E          	LD	A,(HL)		;
  810 E7BD  23          	INC	HL		;
  811 E7BE  D3 05       	OUT	(FDD),A		; SELECT_FINAL_SECTOR;
  812 E7C0  CD E6A7     	CALL	FLO2		;
  813 E7C3  7E          	LD 	A,(HL)		;
  814 E7C4  D3 05       	OUT	(FDD),A		; SELECT_GAP_LENGTH;
  815 E7C6  CD E6A7     	CALL	FLO2		;
  816 E7C9  3A F35A     	LD	A,(DTLV)	;
  817 E7CC  D3 05       	OUT	(FDD),A		; SELECT_DATA_LENGTH;
  818 E7CE  FB          	EI			;
  819 E7CF  C9          	RET			;
  820                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  98
FLOPPY DISK DRIVER 

  822                   
  823                   ;========================================================
  824                   ;= UP765 FLOPPY DISK CONTROLLER INTERRUPT ROUTINE       =
  825                   ;========================================================
  826                   
  827 E7D0  ED 73 F34B  FLITR:	LD	(SP_SAV),SP	; SAVE ACCUMULATOR AND FLAGS
  828 E7D4  31 F620     	LD	SP,ISTACK	; SAVE REGISTERS
  829 E7D7  F5          	PUSH	AF		;
  830 E7D8  C5          	PUSH	BC		;
  831 E7D9  D5          	PUSH	DE		; ESTABLISH LOCAL STACK
  832 E7DA  E5          	PUSH	HL		; SAVE GLOBAL STACK POINTER
  833 E7DB  3E FF       	LD	A,0FFH		;
  834 E7DD  32 F34F     	LD	(FL_FLG),A	; FLOPPY_BUSY:=FALSE;  
  835 E7E0  3E 05       	LD	A,5		;
  836 E7E2  3D          FITX:	DEC	A		;
  837 E7E3  C2 E7E2     	JP	NZ,FITX		;
  838 E7E6  DB 04       	IN	A,(FDC)		;
  839 E7E8  E6 10       	AND	16		;
  840 E7EA  C2 E7F3     	JP	NZ,FIT1		;
  841 E7ED  CD E6E7     	CALL	FLO6		; SENSE_INTERRUPT_STATUS;
  842 E7F0  C3 E7F6     	JP	FIT2		;
  843 E7F3  CD E71E     FIT1:	CALL	RSULT		; READ_RESULT;
  844 E7F6  E1          FIT2:	POP	HL		;
  845 E7F7  D1          	POP	DE		; RESTORE GLOBAL STACKPOINTER
  846 E7F8  C1          	POP	BC		; RESTORE REGISTERS
  847 E7F9  F1          	POP	AF		; RESTORE ACCUMULATOR AND FLAGS
  848 E7FA  ED 7B F34B  	LD	SP,(SP_SAV)	;
  849 E7FE  FB          	EI			;
  850 E7FF  ED 4D       	RETI			;
  851                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page  99
FLOPPY DISK DRIVER 

  853                   
  256                   	INCLUDE		HARDDSK.MAC
    2                   ;=============================================================================
    3                   ;=      HARD DISK PHYSICAL WRITE (MEMORY => DISK)                            =
    4                   ;=============================================================================
    5                   ;
    6 E801  CD E837     HWRHST:	CALL	CHKPOS		; CHECK HEAD POSISTION
    7 E804  D4 E87C     	CALL	NC,STSKFL	;   IF: HEAD POSISTION NOT OK
    8 E807  CD E8FD     	CALL	WDCRDY		; THEN: SET UP TASK FILE TO WD1000
    9 E80A  D0          	RET	NC		; ELSE:
   10 E80B  2A F330     	LD	HL,(FORM)	;   IF: WD1000 NOT READY
   11 E80E  4E          	LD	C,(HL)		; THEN: END
   12 E80F  23          	INC	HL		; ELSE: GET CURRENT FORMAT TABLE ADDRESS
   13 E810  46          	LD	B,(HL)		;       GET DMA XFER. COUNT
   14 E811  CD E91C     	CALL	DMA0RD		; SET UP DMA READ (MEM => DISK)
   15 E814  3E 30       	LD	A,WRTCMD	;
   16 E816  D3 67       	OUT	(HCMDRG),A	; ELSE: ISSUE WRITE COMMAND
   17 E818  CD E8F1     	CALL	WAITHD		;       AWAIT COMPLETION
   18 E81B  C9          	RET			; END
   19                   
   20                   ;=============================================================================
   21                   ;=      HARD DISK PHYSICAL READ (DISK => MEMORY)                             =
   22                   ;=============================================================================
   23                   ;
   24 E81C  CD E837     HRDHST:	CALL	CHKPOS		; CHECK HEAD POSISTION
   25 E81F  D4 E87C     	CALL	NC,STSKFL	;   IF: HEAD POSISTION NOT OK
   26 E822  CD E8FD     	CALL	WDCRDY		; THEN: SET UP TASK FILE TO WD1000
   27 E825  D0          	RET	NC		; ELSE:
   28 E826  2A F330     	LD	HL,(FORM)	;   IF: WD1000 NOT READY
   29 E829  4E          	LD	C,(HL)		; THEN: END
   30 E82A  23          	INC	HL		; ELSE: GET CURRENT FORMAT TABLE ADDRESS
   31 E82B  46          	LD	B,(HL)		;       GET DMA XFER. COUNT
   32 E82C  CD E912     	CALL	DMA0WR		;       SET UP DMA READ (DISK => MEM)
   33 E82F  3E 28       	LD	A,RDCMD		;
   34 E831  D3 67       	OUT	(HCMDRG),A	; ELSE: ISSUE READ COMMAND
   35 E833  CD E8F1     	CALL	WAITHD		;       AWAIT COMPLETION
   36 E836  C9          	RET			; END
   37                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 100
WINCHESTER DISK DRIVER 

   39                   
   40                   ;=============================================================================
   41                   ;=      CHECK DISK HEAD POSISTION                                            =
   42                   ;=============================================================================
   43                   ;
   44 E837  21 EE81     CHKPOS:	LD	HL,HSTBUF	; INIT. XFER ADR. WITH HOST BUFFER
   45 E83A  22 F33A     	LD	(DSKAD),HL	;
   46 E83D  3A F317     	LD	A,(HSTDSK)	;
   47 E840  21 F31C     	LD	HL,LSTDSK	;   IF: HOST_DISK:=LAST_DISK
   48 E843  BE          	CP	(HL)		; THEN:
   49 E844  C2 E85B     	JP	NZ,CHKP10	;
   50 E847  3A F318     	LD	A,(HSTTRK)	;
   51 E84A  21 F31D     	LD	HL,LSTTRK	;        IF: HOST_TRACK:=LAST_TRACK
   52 E84D  BE          	CP	(HL)		;      THEN: RESET CARRY FLAG
   53 E84E  C2 E85B     	JP	NZ,CHKP10	;            END
   54 E851  3A F319     	LD	A,(HSTTRK+1)	;      ELSE:
   55 E854  23          	INC	HL		;
   56 E855  BE          	CP	(HL)		; ELSE:
   57 E856  C2 E85B     	JP	NZ,CHKP10	;
   58 E859  A7          	AND	A		;
   59 E85A  C9          	RET			;
   60 E85B  3A F317     CHKP10:	LD	A,(HSTDSK)	;
   61 E85E  32 F31C     	LD	(LSTDSK),A	;       LAST_DISK:=HOST_DISK
   62 E861  2A F318     	LD	HL,(HSTTRK)	;
   63 E864  22 F31D     	LD	(LSTTRK),HL	;       LAST_TRACK:=HOST_TRACK
   64 E867  CD E87C     	CALL	STSKFL		;       SET UP TASK FILE
   65 E86A  CD E8DF     	CALL	HDSEEK		;       POSITION HEADS
   66 E86D  D2 E87A     	JP 	NC,CHKP30	;   IF: SEEK COMMAND ISSUED
   67 E870  CD E8F1     	CALL	WAITHD		; THEN: AWAIT COMPLETION
   68 E873  DB 67       CHKP20:	IN	A,(HDSTRG)	;       READ STATUS REGISTER
   69 E875  E6 10       	AND	10H		;       AWAIT SEEK COMPLETION
   70 E877  CA E873     	JP	Z,CHKP20	;
   71 E87A  37          CHKP30:	SCF			; ELSE: SET CARRY FLAG
   72 E87B  C9          	RET			; END
   73                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 101
WINCHESTER DISK DRIVER 

   75                   
   76                   ;=============================================================================
   77                   ;=      SET UP TASK FILE TO WD1000                                           =
   78                   ;=============================================================================
   79                   ;
   80 E87C  2A F330     STSKFL:	LD	HL,(FORM)	; SET CURRENT FORMAT TABLE ADR.
   81 E87F  11 FFFF     	LD	DE,-1		;
   82 E882  EB          	EX	DE,HL		;
   83 E883  19          	ADD	HL,DE		; GET ADR. OF END_OF_PAGE
   84 E884  AF          	XOR	A		; INIT. HEAD NO.
   85 E885  4E          	LD	C,(HL)		; GET END_OF_PAGE
   86 E886  06 00       	LD	B,00H		;
   87 E888  2A F31A     	LD	HL,(HSTSEC)	; GET SECTOR NO.
   88 E88B  A7          STSK10:	AND	A		;
   89 E88C  ED 42       	SBC	HL,BC		; A:=HEAD_NO:=INT(HOST_SECTOR/END_OF_PAGE)
   90 E88E  DA E895     	JP	C,STSK20	;
   91 E891  3C          	INC	A		; HL:=SECTOR:=HOST_SECTOR-HEAD_NO*END_OF_PAGE
   92 E892  C3 E88B     	JP	STSK10		;
   93 E895  09          STSK20:	ADD	HL,BC		;
   94 E896  F5          	PUSH	AF		;
   95 E897  7D          	LD	A,L		;
   96 E898  D3 63       	OUT	(HSECNO),A	;
   97 E89A  3A F31C     	LD	A,(LSTDSK)	;
   98 E89D  0E 00       	LD	C,0		;
   99 E89F  21 F335     	LD	HL,UNK1		;
  100 E8A2  96          	SUB	(HL)		;
  101 E8A3  21 F336     	LD	HL,UNK2		;
  102 E8A6  BE          	CP	(HL)		;
  103 E8A7  DA E8BD     	JP	C,STSK30	;
  104 E8AA  96          	SUB	(HL)		;
  105 E8AB  0C          	INC	C		;
  106 E8AC  21 F337     	LD	HL,UNK3		;
  107 E8AF  BE          	CP	(HL)		;
  108 E8B0  DA E8BD     	JP	C,STSK30	;
  109 E8B3  96          	SUB	(HL)		;
  110 E8B4  0C          	INC	C		;
  111 E8B5  21 F338     	LD	HL,UNK4		;
  112 E8B8  BE          	CP	(HL)		;
  113 E8B9  DA E8BD     	JP	C,STSK30	;
  114 E8BC  0C          	INC	C		;
  115 E8BD  CB 21       STSK30:	SLA	C		;
  116 E8BF  CB 21       	SLA	C		;
  117 E8C1  CB 21       	SLA	C		;
  118 E8C3  F1          	POP	AF		;
  119 E8C4  B1          	OR	C		;
  120 E8C5  21 0005     STSK40:	LD	HL,5		;
  121 E8C8  19          	ADD	HL,DE		; GET ADR. OF SECTOR SIZE IN FORMAT TABLE
  122 E8C9  B6          	OR	(HL)		; LOGICAL OR SECTOR SIZE ON
  123 E8CA  D3 66       	OUT	(HSZDHD),A	; INIT. SIZE, DISK AND HEAD NO. IN TASK FILE
  124 E8CC  2A F31D     	LD	HL,(LSTTRK)	; SET TRACK NO.
  125 E8CF  7D          	LD	A,L		;
  126 E8D0  D3 64       	OUT	(HCYLLO),A	; INIT. CYLINDER LOW IN TASK FILE
  127 E8D2  7C          	LD	A,H		;
  128 E8D3  E6 03       	AND	3		; MASK OF 5 MSB BITS
  129 E8D5  D3 65       	OUT	(HCYLHI),A	; INIT. CYLINDER HIGH IN TASK FILE
  130 E8D7  21 0006     	LD	HL,6		;
  131 E8DA  19          	ADD	HL,DE		; GET WRITE PRECOMP ADR. IN FORMAT TABLE
  132 E8DB  7E          	LD	A,(HL)		;
INPUT CONVERSION TABLE Z80ASM 1.32 Page 102
WINCHESTER DISK DRIVER 

  133 E8DC  D3 61       	OUT	(HWPCMP),A	; INIT. WRITE PRECOMR IN TASK FILE
  134 E8DE  C9          	RET			; END
  135                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 103
WINCHESTER DISK DRIVER 

  137                   
  138                   ;=============================================================================
  139                   ;=	HARD DISK SEEK ROUTINE                                               =
  140                   ;=============================================================================
  141                   ;
  142 E8DF  2A F330     HDSEEK:	LD	HL,(FORM)	; 	GET CURRENT FORMAT TABLE ADR.
  143 E8E2  11 0005     	LD	DE,5		;
  144 E8E5  19          	ADD	HL,DE		; 	GET ADR. OF DISK STEP RATE
  145 E8E6  3E 70       	LD	A,SEEKCM	; 	LOGICAL OR SEEK CMD. WITH STEP RATE
  146 E8E8  B6          	OR	(HL)		;
  147 E8E9  CD E8FD     	CALL	WDCRDY		;   IF: WD CONTROLLER READY
  148 E8EC  D0          	RET	NC		; THEN: END
  149 E8ED  D3 67       	OUT	(HCMDRG),A	; ELSE: ISSUE SEEK COMMAND
  150 E8EF  37          	SCF			; 	SET CARRY FLAG
  151 E8F0  C9          	RET			; END.
  152                   
  153                   ;=============================================================================
  154                   ;=	AWAIT COMPLETION OF HARD DISK OPERATION                              =
  155                   ;=============================================================================
  156                   ;
  157 E8F1  3A F34D     WAITHD:	LD	A,(HD_FLG)	; AWAIT HARD DISK INT.
  158 E8F4  B7          	OR	A		;
  159 E8F5  CA E8F1     	JP	Z,WAITHD	;
  160 E8F8  AF          	XOR	A		; RESET FLAG
  161 E8F9  32 F34D     	LD	(HD_FLG),A	;
  162 E8FC  C9          	RET			; END
  163                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 104
WINCHESTER DISK DRIVER 

  165                   
  166                   ;=============================================================================
  167                   ;=	CHECK WD1000 FOR READY TO ACCEPT NEW COMMAND                         =
  168                   ;=============================================================================
  169                   ;
  170 E8FD  F5          WDCRDY:	PUSH	AF		; SAVE REGISTERS
  171 E8FE  DB 67       	IN	A,(HDSTRG)	; READ WD STATUS REG.
  172 E900  E6 50       	AND	50H		; MASK OF READY,SEEK COMP. AND WRITE FAULT
  173 E902  FE 50       	CP	50H		; TEST FOR READY AND SEEK COMP. IS TRUE
  174 E904  CA E90F     	JP	Z,WDCR10	; AND WRITE FAULT IS FALSE
  175 E907  3E BB       	LD	A,0BBH		;   IF: NOT O.K.
  176 E909  32 F32A     	LD	(ERFLAG),A	; THEN: SET ERROR FLAG
  177 E90C  F1          	POP	AF		;	RESTORE REGISTERS
  178 E90D  A7          	AND	A		;	RESET CARRY FLAG TO INDICATE NOT READY
  179 E90E  C9          	RET			;	END
  180 E90F  F1          WDCR10:	POP	AF		; ELSE: RESTORE REGISTERS
  181 E910  37          	SCF			;	SET CARRY FLAG TO INDICATE READY
  182 E911  C9          	RET			; END
  183                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 105
WINCHESTER DISK DRIVER 

  185                   
  186                   ;=============================================================================
  187                   ;=	INITIALIZE DMA CHANNEL 0 TO WRITE (DISK => MEMORY)                   =
  188                   ;=============================================================================
  189                   ;
  190 E912  3E 04       DMA0WR:	LD	A,04H		;
  191 E914  F3          	DI			;
  192 E915  D3 FA       	OUT	(DMAMAS),A	; SET CHANNEL 0 MASK
  193 E917  3E 44       	LD	A,44H		; MODE:=WRITE
  194 E919  C3 E923     	JP	DMA010		; GOTO DMA0 LABEL 10
  195                   
  196                   ;=============================================================================
  197                   ;=	INITIALIZE DMA CHANNEL 0 TO READ (MEMORY => DISK)                    =
  198                   ;=============================================================================
  199                   ;
  200 E91C  3E 04       DMA0RD:	LD	A,04H		;
  201 E91E  F3          	DI			;
  202 E91F  D3 FA       	OUT	(DMAMAS),A	; SET CHANNEL 0 MASK
  203 E921  3E 48       	LD	A,48H		; MODE:=READ
  204 E923  D3 FB       DMA010:	OUT	(DMAMOD),A	; SELECT DMA MODE
  205 E925  D3 FC       	OUT	(DMACBC),A	; CLEAR BYTE POINTER
  206 E927  3A F33A     	LD	A,(DSKAD)	;
  207 E92A  D3 F0       	OUT	(DMAAD0),A	; SET LOW ADDRESS  
  208 E92C  3A F33B     	LD	A,(DSKAD+1)	;
  209 E92F  D3 F0       	OUT	(DMAAD0),A	; SET HIGH ADDRESS
  210 E931  79          	LD	A,C		;
  211 E932  D3 F1       	OUT	(DMACN0),A	; SET LOW COUNT
  212 E934  78          	LD	A,B		;
  213 E935  D3 F1       	OUT	(DMACN0),A	; SET HIGH COUNT
  214 E937  3E 00       	LD	A,00H		;
  215 E939  D3 FA       	OUT	(DMAMAS),A	; CLEAR CHANNEL 0 MASK
  216 E93B  FB          	EI			;
  217 E93C  C9          	RET			; END
  218                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 106
WINCHESTER DISK DRIVER 

  220                   
  221                   ;=============================================================================
  222                   ;= 	WD1000 HARD DISK RESTORE ROUTINE                                     =
  223                   ;=	DESCRIPTION: THE RESTORE ROUTINE PERFORMS A RESTORE OF THE R/W HEADS =
  224                   ;=	             (POSITIONS TO TRACK 0)                                  =
  225                   ;=	ENTRY: A:= SIZE/DRIVE/HEAD                                           =
  226                   ;=	       B:= STEPPING RATE                                             =
  227                   ;=                                                                           =
  228                   ;= 	THE ROUTINE IS USED IN THE COLD START.                               =
  229                   ;=============================================================================
  230                   
  231 E93D  D3 66       HRDRST:	OUT	(HSZDHD),A	; OUTPUT SIZE/DRIVE/HEAD
  232 E93F  AF          	XOR	A		; A=0
  233 E940  D3 61       	OUT	(HWPCMP),A	;
  234 E942  D3 62       	OUT	(HSECCT),A	;
  235 E944  D3 63       	OUT	(HSECNO),A	;
  236 E946  D3 64       	OUT	(HCYLLO),A	;
  237 E948  D3 65       	OUT	(HCYLHI),A	;
  238 E94A  3E 10       	LD	A,10H		; RESTORE COMMAND
  239 E94C  B0          	OR	B		; ADD STEPPING RATE
  240 E94D  D3 67       	OUT	(HCMDRG),A	; OUTPUT RESTORE COMMAND
  241 E94F  C9          	RET			; RETURN
  242                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 107
WINCHESTER DISK DRIVER 

  244                   
  245                   ;=============================================================================
  246                   ;=	WD1000 HARD DISK FORMAT ROUTINE.                                     =
  247                   ;=                                                                           =
  248                   ;=	DESCRIPTION: THE FORMAT ROUTINE FORMATS ONE TRACK, SPECIFIED BY      =
  249                   ;=	             THE FOLLOWING PARAMETERS.                               =
  250                   ;=                                                                           =
  251                   ;=	ENTRY: A:= SIZE/DRIVE/HEAD                                           =
  252                   ;=	       B:= WRITE PRECOMPRESED                                        =
  253                   ;=	       C:= SECTOR COUNT                                              =
  254                   ;=	       D:= CYLINDER HIGH                                             =
  255                   ;=	       E:= CYLINDER LOW                                              =
  256                   ;=	       DMAADR:= POINTER TO FORMAT INFORMATIONS                       =
  257                   ;=                                                                           =
  258                   ;= 	EXIT:  A:= 0 => FORMAT OK. A:= 1 => FORMAT ERROR                     =
  259                   ;=                                                                           =
  260                   ;=============================================================================
  261                   ;
  262 E950  D3 66       HRDFMT:	OUT	(HSZDHD),A	; INIT. SIZE/DRIVE/HEAD
  263 E952  78          	LD	A,B		;
  264 E953  D3 61       	OUT	(HWPCMP),A	; INIT. WRITE PRECOMRRESED
  265 E955  79          	LD	A,C		;
  266 E956  D3 62       	OUT	(HSECCT),A	; INIT. SECTOR COUNT
  267 E958  7B          	LD	A,E		;
  268 E959  D3 64       	OUT	(HCYLLO),A	; INIT. CYLINDER LOW
  269 E95B  7A          	LD	A,D		;
  270 E95C  D3 65       	OUT	(HCYLHI),A	; INIT. CYLINDER HIGH
  271 E95E  2A F32E     	LD	HL,(DMAADR)	;
  272 E961  22 F33A     	LD	(DSKAD),HL	; INIT. DMA XFER ADR.
  273 E964  CD E8FD     	CALL	WDCRDY		;   IF: WD1000 READY
  274 E967  D2 E97C     	JP	NC,HRDF10	; THEN: SET UP DMA0 TO READ (MEM => DISK)
  275 E96A  01 01FF     	LD	BC,511		; 	INIT. DMA XFER. COUNT
  276 E96D  CD E91C     	CALL	DMA0RD		;
  277 E970  3E 50       	LD	A,FMTCMD	;
  278 E972  D3 67       	OUT	(HCMDRG),A	;	ISSUE FORMAT COMMAND
  279 E974  CD E8F1     	CALL	WAITHD		;	AWAIT COMPLETION
  280 E977  3A F32A     	LD	A,(ERFLAG)	;
  281 E97A  A7          	AND	A		;	  IF: FORMAT OK.
  282 E97B  C8          	RET	Z		;	THEN: END
  283 E97C  AF          HRDF10:	XOR	A		;	ELSE:
  284 E97D  32 F32A     	LD	(ERFLAG),A	; ELSE: RESET ERROR FLAG
  285 E980  3E 01       	LD	A,1		; 	SIGNAL ERROR TO CALLER
  286 E982  C9          	RET
  287                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 108
WINCHESTER DISK DRIVER 

  289                   
  290                   ;=============================================================================
  291                   ; 	WD1000 HARD DISK CONTROLLER INTERRUPT ROUTINE                        =
  292                   ;=============================================================================
  293                   ;
  294 E983  ED 73 F34B  HDITR:	LD	(SP_SAV),SP	; SAVE OLD STACK POINTER
  295 E987  31 F620     	LD	SP,ISTACK	; INIT. NEW STACK POINTER
  296 E98A  F5          	PUSH	AF		;
  297 E98B  C5          	PUSH	BC		; SAVE REGISTERS
  298 E98C  D5          	PUSH	DE		;
  299 E98D  E5          	PUSH	HL		;
  300 E98E  3E FF       	LD	A,0FFH		;
  301 E990  32 F34D     	LD	(HD_FLG),A	; HD_BUSY_FLAG:=FALSE
  302 E993  DB 67       	IN	A,(HDSTRG)	; READ STATUS
  303 E995  32 F347     	LD	(MHDTSR),A	; UPDATE MIRROW
  304 E998  E6 01       	AND	01H		;
  305 E99A  CA E9AE     	JP	Z,HDIT10	;   IF: ERROR
  306 E99D  DB 61       	IN	A,(HDERRG)	; THEN: READ ERROR REG.
  307 E99F  32 F348     	LD	(MHDERR),A	;	UPDATE MIRROW
  308 E9A2  2A F349     	LD	HL,(HERRCT)	;
  309 E9A5  23          	INC	HL		; 	ERROR_COUNT:=ERROR_COUNT+1
  310 E9A6  22 F349     	LD	(HERRCT),HL	;
  311 E9A9  3E BB       	LD	A,0BBH		;
  312 E9AB  32 F32A     	LD	(ERFLAG),A	; 	SET ERROR FLAG
  313 E9AE  E1          HDIT10:	POP	HL		; ELSE:
  314 E9AF  D1          	POP	DE		;
  315 E9B0  C1          	POP	BC		;	RESTORE REGISTERS
  316 E9B1  F1          	POP	AF		;
  317 E9B2  ED 7B F34B  	LD	SP,(SP_SAV)	; 	RESTORE STACK POINTER
  318 E9B6  FB          	EI			;
  319 E9B7  ED 4D       	RETI			; END
  320                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 109
WINCHESTER DISK DRIVER 

  322                   
  257                   	INCLUDE		DISKTAB.MAC
INPUT CONVERSION TABLE Z80ASM 1.32 Page 110
DISK DEFINITION TABLES 

    3                   
    4                   ;===============================================
    5                   ;= SECTOR TRANSLATION TALES                    =
    6                   ;===============================================
    7                   
    8 E9B9  01 07 0D 13 TRAN0:	DB	1,7,13,19	; 8" SS 128 B/S
    9 E9BD  19 05 0B 11 	DB	25,5,11,17	;
   10 E9C1  17 03 09 0F 	DB	23,3,9,15	;   IBM std.
   11 E9C5  15 02 08 0E 	DB	21,2,8,14	; skeew factor 6
   12 E9C9  14 1A 06 0C 	DB	20,26,6,12	;
   13 E9CD  12 18 04 0A 	DB	18,24,4,10	;
   14 E9D1  10 16       	DB	16,22		;
   15                   
   16 E9D3  01 05 09 0D TRAN8:	DB	1,5,9,13	; 8" DD 512 B/S
   17 E9D7  02 06 0A 0E 	DB	2,6,10,14	;
   18 E9DB  03 07 0B 0F 	DB	3,7,11,15	; skeew factor 4
   19 E9DF  04 08 0C    	DB	4,8,12		;
   20                   
   21 E9E2  01 03 05 07 TRAN16:	DB	1,3,5,7		; 5.25" DD 512 B/S
   22 E9E6  09 02 04 06 	DB	9,2,4,6		;
   23 E9EA  08          	DB	8		; skeew factor 2
   24                   
   25 E9EB  01 02 03 04 TRAN24:	DB	1,2,3,4		; 8" DD 255 B/S
   26 E9EF  05 06 07 08 	DB	5,6,7,8		;
   27 E9F3  09 0A 0B 0C 	DB	9,10,11,12	; no translation done
   28 E9F7  0D 0E 0F 10 	DB	13,14,15,16	;
   29 E9FB  11 12 13 14 	DB	17,18,19,20	;
   30 E9FF  15 16 17 18 	DB	21,22,23,24	;
   31 EA03  19 1A       	DB	25,26		;
   32                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 111
DISK DEFINITION TABLES 

   34                   
   35                   	IFDEF	MINI		; IF MINI SYSTEM THEN
   36                   ;================================================
   37                   ;= DISK PARAMETER BLOCKS FOR 5.25" FLOPPY DISKS =
   38                   ;================================================
   39                   
   40                   ;************** DS/DD 512 B/S ************** UNUSED
   41 EA05  0020        DPB0:	DW	32	; SEC: CP/M SECTORS PR. TRACK
   42 EA07  03          	DB	3	; BSH: BLS (DATA ALLOCATION BLOCK SIZE) SHIFT FACTOR
   43 EA08  07          	DB	7	; ELM: BSH AND BLM DETERMINES BLS=1024 BYTES
   44 EA09  00          	DB	0	; EXM: EXTENT MASK
   45 EA0A  0090        	DW	144	; DSM: STORAGE CAPACITY(TRK*SEC*SECLEN/BLS)
   46 EA0C  003F        	DW	63	; DRM: DIRECTORY ENTRIES-1. OCCUPIES 64*32/1024 BLOCKS
   47 EA0E  C0 00       	DB	192,0	; ALQ,AL1: ONE BIT FOR EACH RESERVED DIRECTORY BLOCK
   48 EA10  0010        	DW	16	; CKS: SIZE OF DIRECTORY CHECK VECTOR(64/4).
   49 EA12  0000        	DW	0	; OFF: NUMBER OF RESERVED TRACKS AT DISK START
   50                   
   51                   ;************** DD 512 B/S ************** track 0   NO skeew
   52 EA14  0040        DPB8:	DW	64		; SEC
   53 EA16  04          	DB	4		; BSH
   54 EA17  0F          	DB	15		; ELM: ELS=2048 BYTES
   55 EA18  01          	DB	1		; EXM
   56 EA19  0090        	DW	144		; DSM
   57 EA1B  007F        	DW	127		; DRM
   58 EA1D  C0 00       	DB	11000000b,0	; AL0,AL1
   59 EA1F  0020        	DW	32		; CKS
   60 EA21  0000        	DW	0		; OFF
   61                   
   62                   ;************** DD 512 B/S ************** data area
   63 EA23  0048        DPB16:	DW	72		; SEC
   64 EA25  04          	DB	4		; BSH
   65 EA26  0F          	DB	15		; ELM: bls = 2048 bytes
   66 EA27  01          	DB	1		; EXM
   67 EA28  0086        	DW	134		; DSM
   68 EA2A  007F        	DW	127		; DRM
   69 EA2C  C0 00       	DB	11000000b,0	; AL0,AL1
   70 EA2E  0020        	DW	32		; CKS
   71 EA30  0002        	DW	2		; OFF
   72                   
   73                   ;************** 8" DD 512 B/S ************** MAXI  data area
   74 EA32  0078        DPB24:	DW	120		; SECTORS
   75 EA34  04          	DB	4		; BSH
   76 EA35  0F          	DB	15		; BLM
   77 EA36  00          	DB	0		; EXM
   78 EA37  01D7        	DW	471		; DSM
   79 EA39  007F        	DW	127		; DRM
   80 EA3B  C0 00       	DB	192,0		; AL0,AL1
   81 EA3D  0020        	DW	32		; CKS
   82 EA3F  0002        	DW	2		; OFF
   83                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 112
DISK DEFINITION TABLES 

   85                   	ELSE			; ELSE
  136                   	ENDIF			; END IF MINI ELSE MAXI
INPUT CONVERSION TABLE Z80ASM 1.32 Page 113
DISK DEFINITION TABLES 

  138                   
  139                   ;=============================================================================
  140                   ;= DISK PARAMETER BLOCKS FOR HARD DISK TYPE                                  =
  141                   ;=============================================================================
  142                   
  143                   ; *** HARD DISK 1,1MB (MAXI) UNIT
  144 EA41  0180        DPB32:	DW	384		; CP/M SECTS PER TRACK
  145 EA43  04          	DB	4		; BSH (2K BLOCK)
  146 EA44  0F          	DB	15		; BLM
  147 EA45  00          	DB	0		; EXM
  148 EA46  01C1        	DW	449		; DSM (DISK CAPACITY = MAXI FLOPPY)
  149 EA48  007F        	DW	127		; DRM (DIR ENTRIES)
  150 EA4A  C0 00       	DB	11000000B,0	; AL0,AL1 (RESERVED DIR BLOCKS)
  151 EA4C  0000        	DW	0		; CKS (0 FOR FIXED MEDIA)
  152 EA4E  0003        	DW	3		; OFF (OFFSET TO TRACK O)
  153                   
  154                   ; *** HARD DISK 0,8MB (MINI) UNIT (SAME SPACE RESERVED AS FOR MAXI UNIT)
  155 EA50  0180        DPB40:	DW	384		; SECT/TRACK
  156 EA52  04          	DB	4		; BSH
  157 EA53  0F          	DB	15		; BLM
  158 EA54  01          	DB	1		; EXM
  159 EA55  0086        	DW	134		; DSM (DISK CAPACITY = MINI FLOPPY)
  160 EA57  007F        	DW	127		; DRM
  161 EA59  C0 00       	DB	11000000B,0	; AL0,AL1
  162 EA5B  0000        	DW	0		; CKS
  163 EA5D  0003        	DW	3		; OFF
  164                   
  165                   ; *** HARD DISK 2MB UNIT
  166 EA5F  0180        DPB48:	DW	384		; SECT/TRACK
  167 EA61  05          	DB	5		; BSH   (4K BLOCK 2**5 RECORDS)
  168 EA62  1F          	DB	31		; BLM
  169 EA63  01          	DB	1		; EXM
  170 EA64  01EB        	DW	491		; DSM   ( CAP = 4K*(491+1) = 1968KBYTES )
  171 EA66  01FF        	DW	511		; DRM   ( DIR ENTRIES =1 )
  172 EA68  F0 00       	DB	11110000B,0	; AL0,AL1 (4BLKS = 16K RESERVED)
  173 EA6A  0000        	DW	0		; CKS
  174 EA6C  001B        	DW	27 + 0		; OFF   ( OFFSET = TRACK0 + MINI/MAXI)
  175                   
  176                   ; *** HARD DISK 4MB UNIT
  177 EA6E  0180        DPB56:	DW	384		; SECTS/TRACK
  178 EA70  06          	DB	6		; BSH   (8K BLOCK 2**6)
  179 EA71  3F          	DB	63		; BLM
  180 EA72  03          	DB	3		; EXM
  181 EA73  01EB        	DW	491		; DSM   ( CAP = 8K*(497+1) = 3984KBYTES )
  182 EA75  01FF        	DW	511		; DRM
  183 EA77  C0 00       	DB	11000000B,0	; AL0,AL1
  184 EA79  0000        	DW	0		; CKS
  185 EA7B  001B        	DW	27 + 0		; OFF
  186                   
  187                   ; *** HARD DISK 8MB UNIT
  188 EA7D  0180        DPB64:	DW	384		; SECTS/TRACK
  189 EA7F  07          	DB	7		; BSH   (16K BLOCK 2**7)
  190 EA80  7F          	DB	127		; ELM
  191 EA81  07          	DB	7		; EXM
  192 EA82  01EE        	DW	494		; DSM   ( CAP = 16K*(497+1) = 7968KBYTES )
  193 EA84  01FF        	DW	511		; DRM
  194 EA86  80 00       	DB	10000000B,0	; AL0,AL1
  195 EA88  0000        	DW	0		; CKS
INPUT CONVERSION TABLE Z80ASM 1.32 Page 114
DISK DEFINITION TABLES 

  196 EA8A  001B        	DW	27		; OFF   ( FIXED AT 27 )
  197                   
  198                   ;=============================================================================
  199                   ;=	TRACK OFFSET TABLE                                                   =
  200                   ;=	ENTRY = DISKNO * 2                                                   =
  201                   ;=============================================================================
  202                   
  203 EA8C  0002        TRKOFF: DW	2		; FLOPPY DISK A OFFSET
  204 EA8E  0002        	DW	2		;   -     -   B   -
  205 EA90  0003        	DW	3		; HARD DISK   C   -
  206 EA92  001B        	DW	27		;   -   -     D   -
  207 EA94  0000        	DW	0		;   -   -     E OFFSET IS FILLED DURING INIT
  208 EA96  0000        	DW	0		;   -   -     F DO.
  209 EA98  0000        	DW	0		;   -   -     G DO.
  210 EA9A  0000        	DW	0		;   FILLS ONE TO MUCH
  211                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 115
DISK DEFINITION TABLES 

  213                   
  214                   	IFDEF	MINI		; IF MINI VERSION THEN
  215                   
  216                   ;================================================
  217                   ;= FLOPPY SYSTEM PARAMETERS FOR 5,25" FLOPPY    =
  218                   ;================================================
  219                   
  220                   ;************** SS 512 B/S ************** UNSED
  221 EA9C  EA05        FSPA00:	DW	DPB0		; DISK PARAMETER BLOCK
  222 EA9E  08          	DB	8		; CP/M RECORDS PR. BLS BLOCK
  223 EA9F  0010        	DW	16		; CP/M SECTORS PR. TRACK
  224 EAA1  00          	DB	0		; SECTOR MASK
  225 EAA2  01          	DB	1		; SECTOR SHIFT COUNT
  226 EAA3  E9EB        	DW	TRAN24		; SECTOR TRANSLATION TABLE (no translation)
  227 EAA5  80          	DB	128		; DATA LENGTH
  228 EAA6  00          	DB	0		; DISK TYPE (0:=FLP, FF:=HARD)
  229 EAA7    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  230                   
  231                   ;************** DD 256 B/S *************** track 0
  232 EAAC  EA14        FSPA08:	DW	DPB8		; DISK PARAMETER BLOCK
  233 EAAE  10          	DB	16		; CP/M RECORDS PR. BLS BLOCK
  234 EAAF  0020        	DW	32		; CP/M SECTORS PR. TRACK
  235 EAB1  01          	DB	1		; SECTOR MASK
  236 EAB2  02          	DB	2		; SECTOR SHIFT COUNT
  237 EAB3  E9EB        	DW	TRAN24		; SECTOR TRANSLATION TABLE (no translation)
  238 EAB5  FF          	DB	255		; DATA LENGTH
  239 EAB6  00          	DB	0		; DISK TYPE (0:=FLP, FF:=HARD)
  240 EAB7    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  241                   
  242                   ;************** DD 512 B/S **************
  243 EABC  EA23        FSPA16:	DW	DPB16		; DISK PARAMETER BLOCK
  244 EABE  10          	DB	16		; CP/M RECORDS PR. BLS BLOCK
  245 EABF  0048        	DW	72		; CP/M SECTORS PR. TRACK
  246 EAC1  03          	DB	3		; SECTOR MASK
  247 EAC2  03          	DB	3		; SECTOR SHIFT COUNT
  248 EAC3  E9E2        	DW	TRAN16		; SECTOR TRANSLATION TABLE
  249 EAC5  FF          	DB	255		; DATA LENGTH
  250 EAC6  00          	DB	0		; DISK TYPE (0:=FLP, FF:=HARD)
  251 EAC7    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  252                   
  253                   ;************** 8" DD 512 B/S ************
  254 EACC  EA32        FSPA24:	DW	DPB24		; DISK PARAMETER BLOCK
  255 EACE  10          	DB	16		; CP/M RECORDS PR. BLS BLOCK
  256 EACF  0078        	DW	120		; CR/M SECTORS PR. TRACK
  257 EAD1  03          	DB	3		; SECTOR MASK
  258 EAD2  03          	DB	3		; SECTOR SHIFT COUNT
  259 EAD3  E9D3        	DW	TRAN8		; SECTOR TRANSLATION TABLE
  260 EAD5  FF          	DB	255		; DATA LENGTH
  261 EAD6  00          	db	0		; DISK TYPE (0 := FPL, FF := HARD)
  262 EAD7    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  263                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 116
DISK DEFINITION TABLES 

  265                   	ELSE			; ELSE
  318                   	ENDIF			; END IF MINI ELSE MAXI VERSION;
INPUT CONVERSION TABLE Z80ASM 1.32 Page 117
DISK DEFINITION TABLES 

  320                   
  321                   ;=============================================================================
  322                   ;= DISK SYSTEM PARAMETERS FOR HARD DISK                                      =
  323                   ;=============================================================================
  324                   
  325                   ;*** 1 MB LOGICAL HARD DISK UNIT ***
  326 EADC  EA41        FSPA32:	DW	DPB32		; DISK PARAM BLOCK
  327 EADE  10          	DB	16		; CP/M RECORDS PER BLOCK
  328 EADF  0180        	DW	384		; CP/M SECTORS PER TRACK
  329 EAE1  03          	DB	3		; SECTOR MASK
  330 EAE2  03          	DB	3		; SECTOR SHIFT COUNT
  331 EAE3  0000        	DW	0		; SECTOR TRANSLATION TABEL(NOT USED)
  332 EAE5  00          	DB	0		; DATA LENGTH (NOT USED)
  333 EAE6  FF          	DB	0FFH		; DISK TYPE (0:=FLP,FF:=HARD DSK)
  334 EAE7    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  335                   
  336                   ;*** 0,3 MB LOGICAL HARD DISK UNIT ***
  337 EAEC  EA50        FSPA40:	DW	DPB40		; DISK PARAM BLOCK
  338 EAEE  10          	DB	16		; CP/M RECORDS PER BLOCK
  339 EAEF  0180        	DW	384		; CP/M SECTORS PER TRACK
  340 EAF1  03          	DB	3		; SECTOR MASK
  341 EAF2  03          	DB	3		; SECTOR SHIFT COUNT
  342 EAF3  0000        	DW	0		; SECTOR TRANSLATION TABLE
  343 EAF5  00          	DB	0		; DATA LENGTH (NOT USED)
  344 EAF6  FF          	DB	0FFH		; DISK TYPE (0:=FLP,FF:=HARD DSK)
  345 EAF7    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  346                   
  347                   ;*** 2 MB LOGICAL HARD DISK UNIT ***
  348 EAFC  EA5F        FSPA48:	DW	DPB48		; DISK PARAM BLOCK
  349 EAFE  20          	DB	32		; CP/M RECORDS PER BLOCK
  350 EAFF  0180        	DW	384		; CP/M SECTORS PER TRACK
  351 EB01  03          	DB	3		; SECTOR MASK
  352 EB02  03          	DB	3		; SECTOR SHIFT COUNT
  353 EB03  0000        	DW	0		; SECTOR TRANSLATION TABEL
  354 EB05  00          	DB	0		; DATA LENGTH (NOT USED)
  355 EB06  FF          	DB	0FFH		; DISK TYPE (0:=FLP, FF:= HARD DSK)
  356 EB07    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  357                   
  358                   ;*** 4 MB LOGICAL HARD DISK UNIT ***
  359 EB0C  EA6E        FSPA56:	DW	DPB56		; DISK PARAM BLOCK
  360 EB0E  40          	DB	64		; CP/M RECORDS PER BLOCK
  361 EB0F  0180        	DW	384		; CP/M SECTORS PER TRACK
  362 EB11  03          	DB	3		; SECTOR MASK
  363 EB12  03          	DB	3		; SECTOR SHIFT COUNT
  364 EB13  0000        	DW	0		; SECTOR TRANSLATION TABEL
  365 EB15  00          	DB	0		; DATA LENGTH (NOT USED)
  366 EB16  FF          	DB	0FFH		; DISK TYPE (O:=FLP, FF:= HARD DSK)
  367 EB17    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  368                   
  369                   ;*** 8 MB LOGICAL HARD DISK UNIT ***
  370 EB1C  EA7D        PSPA64:	DW	DPB64		; DISK PARAM BLOCK
  371 EB1E  80          	DB	128		; CP/M RECORDS PER BLOCK
  372 EB1F  0180        	DW	384		; CP/M SECTORS PER TRACK
  373 EB21  03          	DB	3		; SECTOR MASK  
  374 EB22  03          	DB	3		; SECTOR SHIFT COUNT
  375 EB23  0000        	DW	0		; SECTOR TRANSLATION TABEL
  376 EB25  00          	DB	0		; DATA LENGTH (NOT USED)
  377 EB26  FF          	DB	0FFH		; DISK TYPE (0:=FLP, FF:=HARD DSK)
INPUT CONVERSION TABLE Z80ASM 1.32 Page 118
DISK DEFINITION TABLES 

  378 EB27    0005      	DS	5		; FILLER TO OBTAIN 16 BYTE LENGTH
  379                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 119
DISK DEFINITION TABLES 

  381                   
  382                   	IFDEF	MINI		; IF MINI VERSION THEN
  383                   ;================================================
  384                   ;= FLOPPY FORMAT PARAMETERS FOR 5,25" FLOPPY    =
  385                   ;================================================
  386                   
  387                   ;************** SS 512 B/S ************** track 0 side 0
  388 EB2C  20          	DB	32		; PHYSICAL SECTORS PR. TRACK
  389 EB2D  007F        FDF1:	DW	127		; DMA COUNT
  390 EB2F  00          	DB	0		; MF
  391 EB30  00          	DB	0		; N
  392 EB31  10          	DB	16		; END OF TRACK
  393 EB32  07          	DB	7		; GAP LENGTH
  394 EB33  24          	DB	36		; TRACKS
  395                   
  396                   ;************** DD 256 B/S **************
  397 EB34  20          	DB	32		; PHYSICAL SECTORS PR. TRACK
  398 EB35  00FF        FDF2:	DW	255		; DMA COUNT
  399 EB37  40          	DB 	64		; MF
  400 EB38  01          	DB	1		; N
  401 EB39  10          	DB	16		; END OF TRACK
  402 EB3A  0E          	DB	14		; GAP LENGTH
  403 EB3B  24          	DB	36		; TRACKS
  404                   
  405                   ;************** DD 512 B/S **************
  406 EB3C  12          	DB	18		; PHYSICAL SECTORS PR. TRACK
  407 EB3D  01FF        FDF3:	DW	511		; DMA COUNT
  408 EB3F  40          	DB	64		; MF
  409 EB40  02          	DB	2		; N
  410 EB41  09          	DB	9		; END OF TRACK
  411 EB42  1B          	DB	27		; GAP LENGTH
  412 EB43  24          	DB	36		; TRACKS
  413                   
  414                   ;************** 8" DD 512 B/S ***********
  415 EB44  1E          	DB	30		; PHYSICAL SECTORS PR. TRACK
  416 EB45  01FF        FDF4:	DW	511		; DMA COUNT
  417 EB47  40          	DB	64		; MF
  418 EB48  02          	DB	2		; N
  419 EB49  0F          	DB	15		; END OF TRACK
  420 EB4A  1B          	DB	27		; GAP LENGTH
  421 EB4B  4D          	DB	77		; TRACKS
  422                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 120
DISK DEFINITION TABLES 

  424                   
  425                   	ELSE			; ELSE
  468                   	ENDIF			; END IF MINI ELSE MAXI VERSION;
  469                   
  470                   ;=============================================================================
  471                   ;= DISK FORMAT TABLES FOR HARD DISK                                          =
  472                   ;=============================================================================
  473                   
  474                   ;*** 1 MB LOGICAL HARD DISK UNIT ***
  475 EB4C  10          	DB	16		; SECTORS PER DISK PAGE
  476 EB4D  01FF        FDF5:	DW	511		; DMA TRANSFER COUNT
  477 EB4F  0018        	DW	24		; TRACK OCCUPIED BY UNIT
  478 EB51  00          	DB	00H		; STEP RATE
  479 EB52  20          	DB	20H		; SECTOR SIZE (00H:=256,20H:=512,60H:=128)
  480 EB53  00          	DB	00H		; WRITE PRECOMPRESSED
  481                     
  482                   ;*** O,3 MB LOGICAL HARD DISK UNIT ***
  483 EB54  10          	DB	16		; SECTORS PER DISK PAGE
  484 EB55  01FF        FDF6:	DW	511		; DMA TRANSFER COUNT
  485 EB57  0018        	DW	24		; TRACK OCCUPIED BY UNIT
  486 EB59  00          	DB	00H		; STEP RATE
  487 EB5A  20          	DB	20H		; SECTOR SIZE (512 BYTES)
  488 EB5B  00          	DB	00H		; WRITE PRECOMPRESSED
  489                   
  490                   ;*** 2 MB LOGICAL HARD DISK UNIT ***
  491 EB5C  10          	DB	16		; SECTORS PER DISK PAGE
  492 EB5D  01FF        FDF7:	DW	511		; DMA TRANSFER COUNT
  493 EB5F  0029        	DW	41		; TRACK OCCUPIED BY UNIT
  494 EB61  00          	DB	00H		; STEP RATE
  495 EB62  20          	DB	20H		; SECTOR SIZE (512 BYTES)
  496 EB63  00          	DB	00H		; WRITE PRECOMPRESSED
  497                   
  498                   ;*** 4 MB LOGICAL HARD DISK UNIT ***
  499 EB64  10          	DB	16		; SECTORS PER DISK PAGE
  500 EB65  01FF        FDF8:	DW	511		; DMA TRANSFER COUNT
  501 EB67  0053        	DW	83		; TRACK OCCUPIED BY UNIT
  502 EB69  00          	DB	00H		; STEP RATE
  503 EB6A  20          	DB	20H		; SECTOR SIZE (512 BYTES)
  504 EB6B  00          	DB	00H		; WRITE PRECOMPRESSED
  505                   
  506                   ;*** 8 MB LOGICAL HARD DISK UNIT ***
  507 EB6C  10          	DB	16		; SECTORS PER DISK PAGE
  508 EB6D  01FF        FDF9:	DW	511		; DMA TRANSFER COUNT
  509 EB6F  00A6        	DW	166		; TRACK OCCUPIED BY UNIT
  510 EB71  00          	DB	00H		; STEP RATE
  511 EB72  20          	DB	20H		; SECTOR SIZE (512 BYTES)
  512 EB73  00          	DB	00H		; WRITE PRECOMPRESSED
  513                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 121
DISK DEFINITION TABLES 

  515                   
  516                   ;=============================================================================
  517                   ;= DISK PARAMETER HEADERS                                                    =
  518                   ;=============================================================================
  519                   
  520                   ;*** DRIVE 0 ***
  521 EB74  0000        DPBASE:	DW	0		; TRANSLATION TABLE
  522 EB76  0000        	DW	0		; BDOS SCRATCH PAD
  523 EB78  0000        	DW	0		; BDOS SCRATCH PAD
  524 EB7A  0000        	DW	0		; BDOS SCRATCH PAD
  525 EB7C  F081        	DW	DIRBF		; 128 BYTE AREA FOR DIRECTORY OPEARTIONS
  526 EB7E  EA14        	DW	DPB8		; DISK PARAMETER BLOCK
  527 EB80  F148        	DW	CHK0		; AREA USED TO CHECK FOR DISK CHANGE
  528 EB82  F101        	DW	ALL0		; BDOS DISK STORAGE ALLOCATION INFORMATION
  529                   
  530                   ;*** DRIVE 1 FLOPPY DRIVE ***
  531 EB84  0000        	DW	0		; TRANSLATION TABLE
  532 EB86  0000        	DW	0		; BDOS SCRATCH PAD
  533 EB88  0000        	DW 	0		; -    -       -
  534 EB8A  0000        	DW 	0		; -    -       -
  535 EB8C  F081        	DW	DIRBF		; 128 BYTE AREA FOR DIRECTORY OPERATIONS
  536 EB8E  EA14        	DW	DPB8		; DISK PARAMETER BLOCK
  537 EB90  F1AF        	DW	CHK1		; AREA USED TO CHECK FOR DISK CHANGE
  538 EB92  F168        	DW	ALL1		; BDOS DISK STORAGE ALLOCATION INFORMATION
  539                   
  540                   ;*** DRIVE 2 HARD DISK (FLOPPY) DRIVE
  541 EB94  0000        	DW	0		; TRANS
  542 EB96  0000        	DW	0		; SCRATCH
  543 EB98  0000        	DW	0		;    -
  544 EB9A  0000        	DW	0		;    -
  545 EB9C  F081        	DW	DIRBF		; 128 BYTE DIRECTORY AREA
  546 EB9E  EA50        	DW	DPB40		; DISK PARAM BLOCK (INIT=MAXI DRIVE)
  547 EBA0  0000        	DW	0		; CHECK VECTOR (NOT USED -FIXED MEDIA)
  548 EBA2  F1CF        	DW	ALVHD		; ALLOCATION VECTOR
  549                   
  550                   ;*** DRIVE 3 HARD DISK (2,4 OR 8 MB UNIT)
  551 EBA4  0000        	DW	0		; TRANS
  552 EBA6  0000        	DW	0		; SCRATCH
  553 EBA8  0000        	DW	0		;    -
  554 EBAA  0000        	DW	0		;    -
  555 EBAC  F081        	DW	DIRBF		; DIRECTORY
  556 EBAE  EA7D        	DW	DPB64		; DISK PARAM BLOCK (INIT= 8MB UNIT)
  557 EBB0  0000        	DW	0		; CHECK VECTOR
  558 EBB2  F216        	DW	ALVHD+71	; ALLWAYS FIXED POSITION
  559                   
  560                   ;*** DRIVE 4 HARD DISK (2 OR 4 MB UNIT)
  561 EBB4  0000        	DW	0		; TRNS
  562 EBB6  0000        	DW	0		; SCRTCH
  563 EBB8  0000        	DW	0		;
  564 EBBA  0000        	DW	0		;
  565 EBBC  F081        	DW	DIRBF		; DIRECT.
  566 EBBE  EA6E        	DW	DPB56		; DPB (INIT = 4MB UNIT)
  567 EBC0  0000        	DW	0		; CHK
  568 EBC2  F255        	DW	ALVHD+71+63	; ALLOC. BASE +HD UNIT1 +HD UNIT 2
  569                   
  570                   ;*** DRIVE 5 HARD DISK (2 OR 4 MB UNIT)
  571 EBC4  0000        	DW	0		;
  572 EBC6  0000        	DW	0		;
INPUT CONVERSION TABLE Z80ASM 1.32 Page 122
DISK DEFINITION TABLES 

  573 EBC8  0000        	DW	0		;
  574 EBCA  0000        	DW	0		;
  575 EBCC  F081        	DW	DIRBF		; DIR
  576 EBCE  EA6E        	DW	DPB56		; DPB (INIT = 4MB UNIT)
  577 EBD0  0000        	DW	0		; CHK
  578 EBD2  F294        	DW	ALVHD+71+63+63	; ALL.VECTOR BASE+HDU1+HDU2+HDU3
  579                   
  580                   ;*** DRIVE 5 HARD DISK (ONLY 2 MB UNIT POSSIBLE)
  581 EBD4  0000        	DW	0		;
  582 EBD6  0000        	DW	0		;
  583 EBD8  0000        	DW	0		;
  584 EBDA  0000        	DW	0		;
  585 EBDC  F081        	DW	DIRBF		;
  586 EBDE  EA5F        	DW	DPB48		; DPB (INIT = 2 MB UNIT)
  587 EBE0  0000        	DW	0		; CHK
  588 EBE2  F2D3        	DW	ALVHD+71+63+63+63 ; HDU1+HDU2+HDU3+HDU4
  589                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 123
DISK DEFINITION TABLES 

  591                   
  258                   	INCLUDE		INTTAB.MAC
    1 EBE4  FB          DUMITR:	EI			; DUMMY INTERRUPT ROUTINE
    2 EBE5  ED 4D       	RETI			;
    3                   
    4 EBE7    0019      	DS	256-($ AND 255)	;
    5                   ;================================================
    6                   ;= INTERRUPT TABLE                              =
    7                   ;================================================
    8 EC00  EBE4        ITRTAB:	DW	DUMITR		; CTC 1 : CH. 0 := SIO CH. A BAUDRATE
    9 EC02  EBE4        	DW 	DUMITR		;         CH. 1 := SIO CH. B BAUDRATE
   10 EC04  E23E        	DW	DSPITR		;         CH. 2 := DISPLAY
   11 EC06  E7D0        	DW	FLITR		;         CH. 3 := FLOPPY
   12 EC08  E983        	DW	HDITR 		; CTC 2 : CH. 0 := WD1000
   13 EC0A  EBE4        	DW	DUMITR		;         CH. 1 := NOT USED
   14 EC0C  EBE4        	DW	DUMITR		;         CH. 2 := NOT USED
   15 EC0E  EBE4        	DW	DUMITR		;         CH. 3 := NOT USED
   16 EC10  DD05        	DW	TXB		; SIO : CH. B TRANSMITTER
   17 EC12  DD1E        	DW	EXTSTB		;       CH. B EXTERNAL STATUS
   18 EC14  DD37        	DW	RCB		;       CH. B RECEIVER
   19 EC16  DD4C        	DW	SPECB		;       CH. B SPECIAL RECEIVE
   20 EC18  DD69        	DW	TXA		;       CH. A TRANSMITTER
   21 EC1A  DD82        	DW	EXTSTA		;       CH. A EXTERNAL STATUS
   22 EC1C  DD9B        	DW	RCA		;       CH. A RECEIVER
   23 EC1E  DDB5        	DW	SPECA		;       CH. A SPECIAL RECEIVE
   24 EC20  EC43        	DW	KEYIT		; PIO : CH. A := KEYBOARD
   25 EC22  EC58        	DW	PARIN		;       CH. B := PARALLEL OUT
   26                   
   27 EC24  EC00        CITAB:	DW	ITRTAB		;
   28                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 124
INTTAB  MAC

   30                   
  259                   	INCLUDE		PIO.MAC
    2                   ;=========================================================
    3                   ;= Z80 PIO DRIVER                                        =
    4                   ;=========================================================
    5                   
    6 EC26  00          KEYFLG:DB	0		; KEYBOARD BUSY FLAG (0=BUSY)
    7 EC27  00          PARFLG:DB	0		; CHANNEL B BUSY FLAG (0=BUSY)
    8                   
    9                   ;=========================================================
   10                   ;= CHANNEL A (KEYBOARD)                                  =
   11                   ;=========================================================
   12                   
   13 EC28  3A EC26     CONST:	LD	A,(KEYFLG)	;
   14 EC2B  C9          	RET
   15                   
   16 EC2C  3A EC26     CONIN:	LD	A,(KEYFLG)	;
   17 EC2F  B7          	OR	A		;
   18 EC30  CA EC2C     	JP	Z,CONIN		; WHILE KEYBOARD_BUSY DO;
   19 EC33  F3          	DI			;
   20 EC34  AF          	XOR	A		;
   21 EC35  32 EC26     	LD	(KEYFLG),A	; KEYBOARD_BUSY:=TRUE;
   22 EC38  FB          	EI			;
   23 EC39  DB 10       	IN	A,(PIOAD)	; A := CONVERT(CHAR);
   24 EC3B  4F          	LD	C,A		;
   25 EC3C  21 F700     	LD	HL,INCONV	;
   26 EC3F  CD DDFC     	CALL	CON1		;
   27 EC42  C9          	RET			;
   28                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 125
Z-80 PIO DRIVER 

   30                   
   31                   ;=========================================================
   32                   ;= CHANNEL A (KEYBOARD) INTERRUPT ROUTINE                =
   33                   ;=========================================================
   34                   
   35 EC43  ED 73 F34B  KEYIT:	LD	(SP_SAV),SP	; SAVE ACCUMULATOR AND FLAGS
   36 EC47  31 F620     	LD	SP,ISTACK	;
   37 EC4A  F5          	PUSH	AF		;
   38 EC4B  3E FF       	LD	A,0FFH		;
   39 EC4D  32 EC26     	LD	(KEYFLG),A	;
   40 EC50  F1          	POP	AF		; RESTORE ACCUMULATOR AND FLAGS
   41 EC51  ED 7B F34B  	LD	SP,(SP_SAV)	;
   42 EC55  FB          	EI			;
   43 EC56  ED 4D       	RETI			;
   44                   
   45                   ;=========================================================
   46                   ;= CHANNEL B INTERRUPT ROUTINE                           =
   47                   ;=========================================================
   48                   
   49 EC58  ED 73 F34B  PARIN:	LD	(SP_SAV),SP	; SAVE ACCUMULATOR AND FLAGS
   50 EC5C  31 F620     	LD	SP,ISTACK	;
   51 EC5F  F5          	PUSH	AF		;
   52 EC60  3E FF       	LD	A,0FFH		;
   53 EC62  32 EC27     	LD	(PARFLG),A	;
   54 EC65  F1          	POP	AF		; RESTORE ACCUMULATOR AND FLAGS
   55 EC66  ED 7B F34B  	LD	SP,(SP_SAV)	;
   56 EC6A  FB          	EI			;
   57 EC6B  ED 4D       	RETI			;
   58                   
INPUT CONVERSION TABLE Z80ASM 1.32 Page 126
Z-80 PIO DRIVER 

   60                   
  260                   
BIOS.Z80 - Missing .DEPHASE Line 00261
END
  261                   END
 1 Error(s) Detected.
 6125 Absolute Bytes. 503 Symbols Detected.
INPUT CONVERSION TABLE Z80ASM 1.32 Page 127
Symbol Table:

F33D  ACSEC            F33C  ACTRA            DE9A  ADDOF1
DEA8  ADDOF2           DE96  ADDOFF           FFDE  ADR0
DA33  ADRMOD           E290  AFB11            E2A1  AFB12
E2B2  AFB13            E2BE  AFB14            F101  ALL0
F168  ALL1             E42C  ALLOC            F1CF  ALVHD
CC06  BDOS             001C  BELL             FFDB  BGFLG
F500  BGSTAR           9000  BIAS             DA00  BIOS
DB74  BOOT             DB90  BOOT04           DBBA  BOOT1
DA47  BOOTD            D96D  BOOTDPB          DAF0  BOPLP
DAEA  BOTERR           DA71  BOTMSG           0080  BUFF
0280  CBOOT            C403  CCPCLR           FFD1  CCTAD
0004  CDISK            F332  CFORM            DC83  CHARA
DC84  CHARB            F148  CHK0             F1AF  CHK1
DE42  CHKDC            E85B  CHKP10           E873  CHKP20
E87A  CHKP30           E837  CHKPOS           E52E  CHKTRK
E3C0  CHKUNA           D8FB  CHK_CON          EC24  CITAB
E73A  CLFIT            DB00  CLOCK            DB0E  CLOCK1
DEBD  CLRBI1           DEAE  CLRBIT           DDFC  CON1
EC2C  CONIN            E224  CONOU1           E232  CONOU2
E235  CONOU3           E205  CONOUT           EC28  CONST
DDF6  CONV             D580  CONVTA           D501  COUNT0
D503  COUNT1           D505  COUNT2           D507  COUNT3
D545  COUNT4           DDDF  CPLHL            C400  CPMB
1600  CPML             F353  CPMRBP           F354  CPMSPT
E002  CTAB             0044  CTC2C0           0045  CTC2C1
0046  CTC2C2           0047  CTC2C3           000C  CTCCH0
000D  CTCCH1           000E  CTCCH2           000F  CTCCH3
DEE5  CTLF             DEE2  CTLG             DEEF  CTLM
FFD4  CURSY            FFE3  DELCNT           F081  DIRBF
E1AB  DISPL            E1C2  DISPL1           E1D1  DISPL2
E1D7  DISPL3           E1FD  DISPL4           E923  DMA010
E91C  DMA0RD           E912  DMA0WR           00F0  DMAAD0
00F2  DMAAD1           00F4  DMAAD2           00F6  DMAAD3
F32E  DMAADR           00F8  DMAC             00FC  DMACBC
00F1  DMACN0           00F3  DMACN1           00F5  DMACN2
00F7  DMACN3           00FA  DMAMAS           00FB  DMAMOD
00FF  DMAMSK           00F9  DMAREQ           00FD  DMATMP
D51C  DMODE0           D51D  DMODE1           D51E  DMODE2
D51F  DMODE3           EA05  DPB0             EA23  DPB16
EA32  DPB24            EA41  DPB32            EA50  DPB40
EA5F  DPB48            EA6E  DPB56            EA7D  DPB64
EA14  DPB8             EB74  DPBASE           F351  DPBLCK
F334  DRNO             F33A  DSKAD            F339  DSKNO
F35B  DSKTYP           E23E  DSPITR           0001  DSPLC
0000  DSPLD            F800  DSPSTR           F35A  DTLV
F361  DUM              EBE4  DUMITR           DEEE  DUMMY
EE80  ENDPRG           F333  EOTV             F32A  ERFLAG
DE34  ES0H             E017  ESCA             E00E  ESCB
DFE2  ESCC             DFF1  ESCC1            E0E3  ESCCF
E0EB  ESCCF1           E0F3  ESCCF2           E0FD  ESCCF3
E103  ESCCF4           E108  ESCCF5           DFB8  ESCD
DFC7  ESCD1            E033  ESCDL            DEF7  ESCE
E02D  ESCH             E091  ESCIL            DF22  ESCK
E0D7  ESCSB            E0DD  ESCSF            DF6F  ESCY
FFDF  EXCNT0           FFE1  EXCNT1           DAF3  EXIT
FFE5  EXROUT           DD82  EXTSTA           DD1E  EXTSTB
DA37  FD0              DA38  FD1              DA41  FD10
DA42  FD11             DA43  FD12             DA44  FD13
INPUT CONVERSION TABLE Z80ASM 1.32 Page 128
Symbol Table:

DA46  FD15             DA39  FD2              DA3A  FD3
DA3B  FD4              DA3C  FD5              DA3D  FD6
DA3E  FD7              DA3F  FD8              DA40  FD9
0004  FDC              0005  FDD              EB2D  FDF1
EB35  FDF2             EB3D  FDF3             EB45  FDF4
EB4D  FDF5             EB55  FDF6             EB5D  FDF7
EB65  FDF8             EB6D  FDF9             DA45  FDI4
D524  FDPROG           E620  FDSTAR           E63E  FDSTOP
FFE7  FDTIMO           E489  FILHST           DE48  FILL
E7F3  FIT1             E7F6  FIT2             E7E2  FITX
E75F  FLFW             E7D0  FLITR            E6A7  FLO2
E6B1  FLO3             E6BB  FLO4             E6CD  FLO5
E6E7  FLO6             E704  FLO7             E758  FLPR
E779  FLPW             F34F  FL_FLG           0050  FMTCMD
F330  FORM             EA9C  FSPA00           EAAC  FSPA08
EABC  FSPA16           EACC  FSPA24           EADC  FSPA32
EAEC  FSPA40           EAFC  FSPA48           EB0C  FSPA56
E365  GFPA             E783  GNCOM            DC7D  GOCCP
DC64  GOCPM            DDDC  GRAPH            0067  HCMDRG
0065  HCYLHI           0064  HCYLLO           0060  HDDARG
DAB9  HDERR            0061  HDERRG           E9AE  HDIT10
E983  HDITR            D8F0  HDOK             E8DF  HDSEEK
0067  HDSTRG           F34D  HD_FLG           D91A  HD_OFF
F34E  HD_OFL           D8A3  HD_RDY           D895  HD_TMR
F349  HERRCT           E97C  HRDF10           E950  HRDFMT
E81C  HRDHST           E93D  HRDRST           0062  HSECCT
0063  HSECNO           F321  HSTACT           EE81  HSTBUF
F317  HSTDSK           F31A  HSTSEC           F318  HSTTRK
F322  HSTWRT           0066  HSZDHD           0061  HWPCMP
E801  HWRHST           D547  IBOOTD           D96F  IDT
D977  IDT1             D984  IDT2             D7E1  IFD0
D7EC  IFD1             D7ED  IFD2             D7D3  IFDX
D7DC  IFDY             F700  INCONV           D52F  INFD0
D530  INFD1            D539  INFD10           D53A  INFD11
D53B  INFD12           D53C  INFD13           D53D  INFD14
D53E  INFD15           D531  INFD2            D532  INFD3
D533  INFD4            D534  INFD5            D535  INFD6
D536  INFD7            D537  INFD8            D538  INFD9
D53F  INFDXX           D885  INI050           D88B  INI060
D923  INI61            D930  INI62            D947  INI63
D99A  INI66            D9A8  INI67            D9AC  INI68
D9BC  INI70            D721  INIT             0003  IOBYTE
F620  ISTACK           EC00  ITRTAB           EC26  KEYFLG
EC43  KEYIT            DB4B  LINSE1           DB16  LINSEL
DDDD  LINTEM           DC8D  LIST             FFD8  LOCAD
FFDC  LOCBBU           FFD5  LOCBUF           F31C  LSTDSK
F31D  LSTTRK           DC52  LWBT             E4A6  MATCH
F348  MHDERR           F347  MHDTSR           0000  MINI
D500  MODE0            D502  MODE1            D504  MODE2
D506  MODE3            D544  MODE4            D546  MODE5
DED4  MOVDWN           DEDA  MOVDWN1          DEDD  MOVDWN2
DEC6  MOVUP            DECC  MOVUP1           DECF  MOVUP2
0038  MSIZE            DA36  MTYPE            D541  NDT1
D540  NDTAB            DDE6  NEGHL            E482  NOMATC
E414  NOOVF            002C  NSECTS           F680  OUTCON
D520  PAR1             D521  PAR2             D522  PAR3
D523  PAR4             EC27  PARFLG           EC58  PARIN
D84C  PATCH1           D89A  PATCH2           DB5A  PCHBDS
INPUT CONVERSION TABLE Z80ASM 1.32 Page 129
Symbol Table:

DB6B  PCHFIX           DA6F  PCHSAV           0012  PIOAC
0010  PIOAD            0013  PIOBC            0011  PIOBD
DADD  PRMSG            DC80  PRTFLG           D508  PSIOA
D511  PSIOB            EB1C  PSPA64           DC82  PTPFLG
DCE0  PUNCH            DD9B  RCA              DD37  RCB
E521  RCHECK           FFD2  RCTAD            0028  RDCMD
E517  RDHST            DC81  RDRFLG           DBF1  RDSEC
DCD0  READER           DCB2  READI            F32C  READOP
DCCC  READS            E59A  RECA             F33E  REPET
DB19  RESLIN           E616  RFDAT            DE12  ROWDN
DE23  ROWUP            E5B1  RPSC             E5FB  RPSW
DC85  RR0_A            DC87  RR0_B            DC86  RR1_A
DC88  RR1_B            E4FB  RRWOP            E4E4  RRWOPX
E445  RSECS            E360  RSELD            F32B  RSFLAG
E723  RSL1             E72C  RSL2             F33F  RSTAB
0010  RSTCMD           E71E  RSULT            FFFC  RTC0
FFFD  RTC1             FFFE  RTC2             FFFF  RTC3
E4D0  RWMOVE           E436  RWOPER           E5EC  SCR1
DE69  SCROLL           E5D0  SCRP             E5C9  SECCH
F356  SECMSK           E5AC  SECRD            F357  SECSHF
E384  SECTRA           E5F6  SECWR            0070  SEEKCM
E57C  SEEKT            F312  SEKDSK           F31F  SEKHST
F315  SEKSEC           F313  SEKTRK           E2C9  SELD
E2E8  SELD10           E2F2  SELD20           DC4C  SELERR
E30C  SELN             E549  SET1             E54C  SET2
E37E  SETD             E426  SETMSK           E378  SETS
E450  SETSH            DB53  SETSIG           E372  SETT
DA8D  SIGNON           000A  SIOAC            0008  SIOAD
000B  SIOBC            0009  SIOBD            DDB5  SPECA
DD4C  SPECB            E14E  SPECC            F34B  SP_SAV
F680  STACK            D480  START            DC89  STLIST
D52D  STPTIM           E88B  STSK10           E895  STSK20
E8BD  STSK30           E8C5  STSK40           E87C  STSKFL
0014  SW1              E10E  TAB1             E9B9  TRAN0
E9E2  TRAN16           E9EB  TRAN24           E9D3  TRAN8
F358  TRANTB           E4FE  TRKCMP           EA8C  TRKOFF
DDEB  TSTLROW          DD69  TXA              DD05  TXB
F323  UNACNT           F324  UNADSK           F329  UNAMSK
F327  UNASEC           F325  UNATRK           F335  UNK1
F336  UNK2             F337  UNK3             F338  UNK4
FFDA  USHER            E64B  WAIT10           E648  WAITD
E8F1  WAITHD           E750  WATIR            F350  WBFLAG
DBBD  WBOOT            DBC9  WBOOT5           DA03  WBOTE
E90F  WDCR10           E8FD  WDCRDY           E61B  WFDAT
E741  WFITR            DAB0  WMESS            DE01  WP75
DA34  WR5A             DA35  WR5B             0000  WRALL
0001  WRDIR            0030  WRTCMD           E50A  WRTHST
F32D  WRTYPE           0002  WRUAL            FFD7  XFLG
E65D  XHOM01           E682  XHOM10           E68A  XHOM20
E654  XHOME            E387  XREAD            E39B  XWRITE
E165  XYADD            E177  XYADD1           E184  XYADD2
E1A0  XYADD3           D52C  XYFLG
INPUT CONVERSION TABLE Z80ASM 1.32 Page 130
Cross Reference:

F33D  ACSEC              204   205   255   255
F33C  ACTRA              203   204   255   255   255
DE9A  ADDOF1             254   254
DEA8  ADDOF2             254   254
DE96  ADDOFF             254   254   254   254   254   254
FFDE  ADR0               149   150   254   254
DA33  ADRMOD             248   252   254
E290  AFB11              254   254   254   254
E2A1  AFB12              254   254
E2B2  AFB13              254   254
E2BE  AFB14              254   254
F101  ALL0               167   168   257
F168  ALL1               169   170   257
E42C  ALLOC              255   255   255   255   255   255
F1CF  ALVHD              171   172   257   257   257   257   257
CC06  BDOS               120   252
001C  BELL               107   254
FFDB  BGFLG              144   148   254   254   254   254   254   254   254
			  254   254   254   254
F500  BGSTAR             130   132   248   248   248   254   254   254   254
			  254   254   254   254   254   254   254   254   254
			  254   254
9000  BIAS               116   117
DA00  BIOS               121   248   250
DB74  BOOT               252   252
DB90  BOOT04             252   252
DBBA  BOOT1              252   252   252
DA47  BOOTD              248   252   252   252   252   252
D96D  BOOTDPB            248   248   248   248
DAF0  BOPLP              252   252
DAEA  BOTERR             252   252
DA71  BOTMSG             252   252
0080  BUFF               122   248   252   252   252
0280  CBOOT              126   245
C403  CCPCLR             118   252
FFD1  CCTAD              137   138   248   248   248   254   254   254   254
			  254   254   254   254   254   254   254   254   254
			  254   254   254
0004  CDISK              124   252   252   252   252   252   252
F332  CFORM              194   195   255   255   255   255
DC83  CHARA              253   253   253   253
DC84  CHARB              253   253
F148  CHK0               168   169   257
F1AF  CHK1               170   171   257
DE42  CHKDC              254   254   254   254
E85B  CHKP10             256   256   256   256
E873  CHKP20             256   256
E87A  CHKP30             256   256
E837  CHKPOS             256   256   256
E52E  CHKTRK             255   255   255
E3C0  CHKUNA             255   255
D8FB  CHK_CON            248
EC24  CITAB              248   258
E73A  CLFIT              255   255   255   255   255   255   255
DB00  CLOCK              252   252
DB0E  CLOCK1             252   252
DEBD  CLRBI1             254   254   254
DEAE  CLRBIT             254   254   254
INPUT CONVERSION TABLE Z80ASM 1.32 Page 131
Cross Reference:

DDFC  CON1               254   259
EC2C  CONIN              252   259   259
E224  CONOU1             254   254
E232  CONOU2             254   254
E235  CONOU3             254   254   254
E205  CONOUT             252   252   254
EC28  CONST              252   259
DDF6  CONV               254   254
D580  CONVTA             246   248
D501  COUNT0             245   248
D503  COUNT1             245   248
D505  COUNT2             245   248
D507  COUNT3             245   248
D545  COUNT4             245   248
DDDF  CPLHL              254   254   254
C400  CPMB               117   118   120   121   127   128   252   252   252
			  252
1600  CPML               119   121   125
F353  CPMRBP             223   224   255
F354  CPMSPT             224   225   255
E002  CTAB               254   254
0044  CTC2C0              67   248   248   248
0045  CTC2C1              68   248
0046  CTC2C2              69   248
0047  CTC2C3              70   248
000C  CTCCH0              57   248   248   248
000D  CTCCH1              58   248   248
000E  CTCCH2              59   248   248   254   254
000F  CTCCH3              60   248   248
DEE5  CTLF               254   254
DEE2  CTLG               254   254
DEEF  CTLM               254   254
FFD4  CURSY              139   140   254   254   254   254   254   254   254
FFE3  DELCNT             152   153   254   254   255   255
F081  DIRBF              166   167   257   257   257   257   257   257   257
E1AB  DISPL              254   254
E1C2  DISPL1             254   254
E1D1  DISPL2             254   254
E1D7  DISPL3             254   254
E1FD  DISPL4             254   254   254
E923  DMA010             256   256
E91C  DMA0RD             256   256   256
E912  DMA0WR             256   256
00F0  DMAAD0              88   256   256
00F2  DMAAD1              89   255   255
00F4  DMAAD2              90   254   254
00F6  DMAAD3              91
F32E  DMAADR             192   193   252   255   255   256
00F8  DMAC                85   248
00FC  DMACBC              96   254   255   256
00F1  DMACN0              92   256   256
00F3  DMACN1              93   255   255
00F5  DMACN2              94   254   254
00F7  DMACN3              95   254   254
00FA  DMAMAS              87   254   254   254   254   255   255   255   256
			  256   256
00FB  DMAMOD              86   248   248   248   255   256
00FF  DMAMSK              98
INPUT CONVERSION TABLE Z80ASM 1.32 Page 132
Cross Reference:

00F9  DMAREQ              97
00FD  DMATMP              99
D51C  DMODE0             245   248
D51D  DMODE1             245
D51E  DMODE2             245   248
D51F  DMODE3             245   248
EA05  DPB0               248   257   257
EA23  DPB16              257   257
EA32  DPB24              257   257
EA41  DPB32              257   257
EA50  DPB40              257   257   257
EA5F  DPB48              257   257   257
EA6E  DPB56              257   257   257   257
EA7D  DPB64              257   257   257
EA14  DPB8               257   257   257   257
EB74  DPBASE             248   255   257
F351  DPBLCK             222   223   255   255   255   255   255
F334  DRNO               196   197   248   252   252   255
F33A  DSKAD              202   203   255   255   255   256   256   256   256
F339  DSKNO              201   202   252   255   255   255   255   255   255
			  255   255   255
F35B  DSKTYP             229   230   255   255   255
E23E  DSPITR             254   258
0001  DSPLC              101   248   248   248   248   254   254
0000  DSPLD              102   248   248   248   248   248   248   254   254
F800  DSPSTR             136   137   248   248   248   254   254   254   254
			  254   254   254   254   254   254   254   254   254
			  254   254   254   254
F35A  DTLV               228   229   255
F361  DUM                230
EBE4  DUMITR             258   258   258   258   258   258
DEEE  DUMMY              254   254   254   254   254   254   254   254   254
			  254   254   254   254   254   254
EE80  ENDPRG             131   165   248   248
F333  EOTV               195   196   255   255
F32A  ERFLAG             188   189   248   248   252   255   255   255   256
			  256   256   256
DE34  ES0H               254   254   254   254
E017  ESCA               254   254
E00E  ESCB               254   254
DFE2  ESCC               254   254   254   254   254   254   254
DFF1  ESCC1              254   254
E0E3  ESCCF              254   254
E0EB  ESCCF1             254   254
E0F3  ESCCF2             254   254
E0FD  ESCCF3             254   254   254
E103  ESCCF4             254   254
E108  ESCCF5             254   254
DFB8  ESCD               254   254   254
DFC7  ESCD1              254   254
E033  ESCDL              254   254
DEF7  ESCE               254   254
E02D  ESCH               254   254
E091  ESCIL              254   254
DF22  ESCK               254   254
E0D7  ESCSB              254   254
E0DD  ESCSF              254   254
DF6F  ESCY               254   254
INPUT CONVERSION TABLE Z80ASM 1.32 Page 133
Cross Reference:

FFDF  EXCNT0             150   151   252   254   254
FFE1  EXCNT1             151   152   254   254   255   255
DAF3  EXIT               252   252
FFE5  EXROUT             153   154   252   252   254
DD82  EXTSTA             253   258
DD1E  EXTSTB             253   258
DA37  FD0                248   248   252   255
DA38  FD1                252
DA41  FD10               252
DA42  FD11               252
DA43  FD12               252
DA44  FD13               252
DA46  FD15               252
DA39  FD2                248   252
DA3A  FD3                248   252
DA3B  FD4                252
DA3C  FD5                252
DA3D  FD6                252
DA3E  FD7                252
DA3F  FD8                252
DA40  FD9                252
0004  FDC                104   248   248   255   255   255   255
0005  FDD                105   248   255   255   255   255   255   255   255
			  255   255   255   255   255   255   255   255   255
			  255   255   255   255   255
EB2D  FDF1               255   257
EB35  FDF2               257
EB3D  FDF3               257
EB45  FDF4               257
EB4D  FDF5               257
EB55  FDF6               257
EB5D  FDF7               257
EB65  FDF8               257
EB6D  FDF9               257
DA45  FDI4               252
D524  FDPROG             245   248   248
E620  FDSTAR             255   255   255   255
E63E  FDSTOP             254   255
FFE7  FDTIMO             154   248   255
E489  FILHST             255   255
DE48  FILL               254   254   254   254   254   254   254
E7F3  FIT1               255   255
E7F6  FIT2               255   255
E7E2  FITX               255   255
E75F  FLFW               255   255
E7D0  FLITR              255   258
E6A7  FLO2               255   255   255   255   255   255   255   255   255
			  255   255   255   255   255   255   255   255   255
			  255
E6B1  FLO3               255   255   255   255   255   255
E6BB  FLO4               255   255   255
E6CD  FLO5               255
E6E7  FLO6               255   255
E704  FLO7               255   255   255
E758  FLPR               255   255
E779  FLPW               255   255
F34F  FL_FLG             213   214   248   255   255   255
0050  FMTCMD             239   256
INPUT CONVERSION TABLE Z80ASM 1.32 Page 134
Cross Reference:

F330  FORM               193   194   255   255   255   256   256   256   256
EA9C  FSPA00             255   257
EAAC  FSPA08             257
EABC  FSPA16             257
EACC  FSPA24             257
EADC  FSPA32             257
EAEC  FSPA40             257
EAFC  FSPA48             257
EB0C  FSPA56             257
E365  GFPA               255   255
E783  GNCOM              255   255   255
DC7D  GOCCP              252   252   252
DC64  GOCPM              252
DDDC  GRAPH              254   254   254
0067  HCMDRG              81   256   256   256   256   256
0065  HCYLHI              78   256   256   256
0064  HCYLLO              77   256   256   256
0060  HDDARG              72
DAB9  HDERR              248   252
0061  HDERRG              73    74   256
E9AE  HDIT10             256   256
E983  HDITR              256   258
D8F0  HDOK               248   248
E8DF  HDSEEK             255   256   256
0067  HDSTRG              80    81   255   256   256   256
F34D  HD_FLG             211   212   248   248   248   256   256   256
D91A  HD_OFF             248   248   248
F34E  HD_OFL             212   213   248   248
D8A3  HD_RDY             248   248
D895  HD_TMR             248   248
F349  HERRCT             209   210   256   256
E97C  HRDF10             256   256
E950  HRDFMT             252   256
E81C  HRDHST             255   256
E93D  HRDRST             248   256
0062  HSECCT              75   256   256
0063  HSECNO              76   256   256
F321  HSTACT             181   182   252   255   255   255   255
EE81  HSTBUF             165   166   255   255   256
F317  HSTDSK             175   176   255   255   255   255   255   256   256
F31A  HSTSEC             177   178   255   255   255   256
F318  HSTTRK             176   177   255   255   255   255   255   255   256
			  256   256
F322  HSTWRT             182   183   252   255   255   255   255   255   255
			  255
0066  HSZDHD              79   256   256   256
0061  HWPCMP              74   256   256   256
E801  HWRHST             255   256
D547  IBOOTD             245
D96F  IDT                248   248   248
D977  IDT1               248   248
D984  IDT2               248   248
D7E1  IFD0               248   248   248
D7EC  IFD1               248   248
D7ED  IFD2               248   248
D7D3  IFDX               248   248
D7DC  IFDY               248   248
F700  INCONV             135   259
INPUT CONVERSION TABLE Z80ASM 1.32 Page 135
Cross Reference:

D52F  INFD0              245   248   248
D530  INFD1              245
D539  INFD10             245
D53A  INFD11             245
D53B  INFD12             245
D53C  INFD13             245
D53D  INFD14             245
D53E  INFD15             245
D531  INFD2              245   248   248   248
D532  INFD3              245
D533  INFD4              245
D534  INFD5              245
D535  INFD6              245
D536  INFD7              245
D537  INFD8              245
D538  INFD9              245
D53F  INFDXX             245
D885  INI050             248
D88B  INI060             248   248
D923  INI61              248   248   248   248
D930  INI62              248   248
D947  INI63              248   248
D99A  INI66              248   248
D9A8  INI67              248   248
D9AC  INI68              248   248
D9BC  INI70              248   248   248   248
D721  INIT               248
0003  IOBYTE             123   252
F620  ISTACK             132   133   253   253   253   253   253   253   253
			  253   254   255   256   259   259
EC00  ITRTAB             258   258
EC26  KEYFLG             252   259   259   259   259   259
EC43  KEYIT              258   259
DB4B  LINSE1             252   252
DB16  LINSEL             252   252
DDDD  LINTEM             254   254   254   254   254
DC8D  LIST               252   253   253   253
FFD8  LOCAD              142   143   254   254   254
FFDC  LOCBBU             148   149   254   254   254   254
FFD5  LOCBUF             140   141   254   254   254   254
F31C  LSTDSK             178   179   255   255   255   255   256   256   256
F31D  LSTTRK             179   180   255   255   255   255   255   256   256
			  256
DC52  LWBT               252   252   252
E4A6  MATCH              255   255
F348  MHDERR             208   209   256
F347  MHDTSR             207   208   256
0000  MINI               244   257   257   257
D500  MODE0              245   248
D502  MODE1              245   248
D504  MODE2              245   248
D506  MODE3              245   248
D544  MODE4              245   248
D546  MODE5              245   248   248   248
DED4  MOVDWN             254   254   254   254   254   254
DEDA  MOVDWN1            254   254
DEDD  MOVDWN2            254   254
DEC6  MOVUP              254   254   254   254
INPUT CONVERSION TABLE Z80ASM 1.32 Page 136
Cross Reference:

DECC  MOVUP1             254   254
DECF  MOVUP2             254   254
0038  MSIZE              115   116
DA36  MTYPE              252
D541  NDT1               245   248
D540  NDTAB              245   248
DDE6  NEGHL              254   254   254   254   254   254
E482  NOMATC             255   255   255   255
E414  NOOVF              255   255
002C  NSECTS             125   252
F680  OUTCON             134   135   248   254
D520  PAR1               245   248
D521  PAR2               245   248
D522  PAR3               245   248
D523  PAR4               245   248
EC27  PARFLG             259   259
EC58  PARIN              258   259
D84C  PATCH1             127   252
D89A  PATCH2             128   252   252   252
DB5A  PCHBDS             252   252
DB6B  PCHFIX             252   252
DA6F  PCHSAV             252   252   252
0012  PIOAC               52   248   248   248
0010  PIOAD               53   259
0013  PIOBC               54   248   248   248
0011  PIOBD               55
DADD  PRMSG              248   248   252   252   252   252
DC80  PRTFLG             253   253   253   253   253
D508  PSIOA              245   248   248
D511  PSIOB              245   248   248
EB1C  PSPA64             257
DC82  PTPFLG             253   253   253   253
DCE0  PUNCH              252   253   253
DD9B  RCA                253   258
DD37  RCB                253   258
E521  RCHECK             255   255
FFD2  RCTAD              138   139   254   254   254   254   254   254   254
			  254   254   254   254   254   254   254   254   254
			  254   254   254   254   254
0028  RDCMD              237   256
E517  RDHST              255   255
DC81  RDRFLG             253   253   253   253   253
DBF1  RDSEC              252   252
DCD0  READER             252   253   253
DCB2  READI              253   253
F32C  READOP             190   191   255   255   255
DCCC  READS              252   253   253
E59A  RECA               255   255
F33E  REPET              205   206   255   255   255   255
DB19  RESLIN             252   252
E616  RFDAT              255   255
DE12  ROWDN              254   254   254
DE23  ROWUP              254   254   254
E5B1  RPSC               255   255
E5FB  RPSW               255   255
DC85  RR0_A              248   252   253   253
DC87  RR0_B              248   252   253   253
DC86  RR1_A              248   253   253
INPUT CONVERSION TABLE Z80ASM 1.32 Page 137
Cross Reference:

DC88  RR1_B              248   253   253
E4FB  RRWOP              255   255   255
E4E4  RRWOPX             255   255
E445  RSECS              255   255
E360  RSELD              255   255
F32B  RSFLAG             189   190   255   255   255   255
E723  RSL1               255   255
E72C  RSL2               255   255
F33F  RSTAB              206   207   255   255   255   255   255   255   255
0010  RSTCMD             236
E71E  RSULT              255   255
FFFC  RTC0               155   252   252   254
FFFD  RTC1               156
FFFE  RTC2               157   252   252
FFFF  RTC3               158
E4D0  RWMOVE             255   255
E436  RWOPER             255   255   255
E5EC  SCR1               255   255   255
DE69  SCROLL             254   254   254
E5D0  SCRP               255
E5C9  SECCH              255   255
F356  SECMSK             225   226   255   255   255
E5AC  SECRD              255   255
F357  SECSHF             226   227   255
E384  SECTRA             252   255
E5F6  SECWR              255   255
0070  SEEKCM             240   256
E57C  SEEKT              255   255   255
F312  SEKDSK             172   173   255   255   255   255   255   255   255
			  255
F31F  SEKHST             180   181   255   255   255   255
F315  SEKSEC             174   175   255   255   255   255   255   255   255
F313  SEKTRK             173   174   255   255   255   255
E2C9  SELD               248   252   252   252   252   252   255
E2E8  SELD10             255   255
E2F2  SELD20             255   255
DC4C  SELERR             252   252
E30C  SELN               255   255
E549  SET1               255   255
E54C  SET2               255   255
E37E  SETD               248   252   252   252   252   255
E426  SETMSK             255   255
E378  SETS               248   252   252   252   252   255
E450  SETSH              255   255
DB53  SETSIG             252   252   252   252   252
E372  SETT               248   252   252   252   255
DA8D  SIGNON             248   252   252
000A  SIOAC               62   248   248   248   248   252   252   253   253
			  253   253   253   253   253   253   253   253   253
			  253   253   253
0008  SIOAD               63   253   253   253
000B  SIOBC               64   248   248   248   248   253   253   253   253
			  253   253   253   253   253   253
0009  SIOBD               65   253
DDB5  SPECA              253   258
DD4C  SPECB              253   258
E14E  SPECC              254   254
F34B  SP_SAV             210   211   253   253   253   253   253   253   253
INPUT CONVERSION TABLE Z80ASM 1.32 Page 138
Cross Reference:

			  253   253   253   253   253   253   253   253   253
			  254   254   255   255   256   256   259   259   259
			  259
F680  STACK              133   254   255   255
D480  START              129   245   248   248
DC89  STLIST             252   253
D52D  STPTIM             245   248
E88B  STSK10             256   256
E895  STSK20             256   256
E8BD  STSK30             256   256   256   256
E8C5  STSK40             256
E87C  STSKFL             255   256   256   256   256
0014  SW1                108   248   252   255   255   255   255
E10E  TAB1               254   254
E9B9  TRAN0              257
E9E2  TRAN16             257   257
E9EB  TRAN24             257   257   257
E9D3  TRAN8              257   257
F358  TRANTB             227   228   255
E4FE  TRKCMP             255   255   255
EA8C  TRKOFF             248   255   257
DDEB  TSTLROW            254   254   254
DD69  TXA                253   258
DD05  TXB                253   258
F323  UNACNT             183   184   252   255   255   255   255   255   255
F324  UNADSK             184   185   255   255
F329  UNAMSK             187   188   255   255
F327  UNASEC             186   187   255   255   255   255   255
F325  UNATRK             185   186   255   255   255   255
F335  UNK1               197   198   248   256
F336  UNK2               198   199   248   256
F337  UNK3               199   200   256
F338  UNK4               200   201   256
FFDA  USHER              143   144   254   254   254   254   254
E64B  WAIT10             255   255
E648  WAITD              252   255   255
E8F1  WAITHD             255   256   256   256   256   256   256
E750  WATIR              255   255   255   255   255
F350  WBFLAG             214   222   252   252
DBBD  WBOOT              252   252   252
DBC9  WBOOT5             252   252
DA03  WBOTE              252   252
E90F  WDCR10             256   256
E8FD  WDCRDY             256   256   256   256   256
E61B  WFDAT              255   255
E741  WFITR              252   255   255   255   255   255
DAB0  WMESS              248   248   252
DE01  WP75               254   254   254   254   254   254   254   254   254
			  254   254   254   254
DA34  WR5A               248   252   253   253
DA35  WR5B               248   252   253
0000  WRALL              255
0001  WRDIR              255   255
0030  WRTCMD             238   256
E50A  WRTHST             255   255   255   255
F32D  WRTYPE             191   192   255   255   255
0002  WRUAL              255   255   255
FFD7  XFLG               141   142   254   254   254   254
INPUT CONVERSION TABLE Z80ASM 1.32 Page 139
Cross Reference:

E65D  XHOM01             255   255
E682  XHOM10             255   255
E68A  XHOM20             255   255
E654  XHOME              252   252   252   255
E387  XREAD              248   252   252   252   255
E39B  XWRITE             252   255
E165  XYADD              254   254
E177  XYADD1             254   254
E184  XYADD2             254   254
E1A0  XYADD3             254   254
D52C  XYFLG              245   248
         248   248   252
DE01  WP75               254   254   254  